{"version":3,"sources":["actions/scene.js","components/utils/SendMessage.js","components/utils/SoundPlay.js","components/videoPlay.js","actions/countdown.js","scene/ContentsData.js","components/utils/VideoRecord.js","components/FullScreenResult.js","actions/posenet.js","components/ResultFailure.js","components/ResultSuccess.js","components/CameraCapture.js","components/posenet/data/PosenetMath.js","components/posenet/PosenetUtils.js","components/utils/CanvasFPS.js","components/posenet/PosenetCamera.js","components/PoseNetGame/PosenetPoseScan.js","components/PoseCameraRecord.js","scene/ContentsScene.js","scene/VideoBodyScanScene.js","scene/ContentsResultData.js","scene/FeedbackScene.js","components/RewardButton.js","components/DefaultConfirmDialog.js","scene/IntroScene.js","scene/IndexScene.js","App.js","serviceWorker.js","reducers/scene.js","reducers/posenet.js","reducers/countdown.js","reducers/index.js","index.js"],"names":["setScene","changeScene","type","_changeScene","SetSubScene","changeSubScene","_changeSubScene","SetIframeFullScreen","fullScreen","SendMessage","text","undefined","window","parent","console","log","postMessage","SetLandscapeMode","HybridApp","playSound","fileName","audio","Audio","play","playEnableClickSound","useStyles","makeStyles","theme","root","width","video","position","margin","rootFullScreen","left","top","height","backgroundColor","videoFullScreen","contentsTitle","fontSize","textShadow","color","textAlign","contentBackBoard","skipGuide","right","centerPlayButton","display","opacity","contentsScreenMirror","bottom","contentsScreenMirrorText","centerPlayButtonText","playButton","skipButton","largeIcon","green","mapDispatchToProps","SetMaxTime","value","_maxTime","SetCurrentTime","_currentTime","connect","state","title","videoUrl","enableContentsSkip","enableCountDown","enableContentsPause","onVideoPlayComplete","onVideoSkip","autoPlay","controls","enableTitleText","enableFullScreen","enableScreenMirror","poster","classes","playButtonRef","useRef","skipButtonRef","videoRef","backboardRef","timer","current","parseInt","currentTime","duration","useEffect","showPauseButton","id","setInterval","clearInterval","displayState","style","onPlayClick","onSkipClick","src","setTimeout","rootClass","videoClass","className","zIndex","onClick","paused","pause","onEnded","ref","IconButton","aria-label","getPauseView","EnablingWiFiDisplay","process","_contents","sleep","date","Date","now","currentDate","VideoRecordExist","step","IsVideoFileExist","GetVideoFullList","contentsData","list","i","key","stepData","data","valid","url","web_url","GetVideoFilePath","desc","push","GetVideoList","recordState","GetVideoListFromFullList","fullList","forEach","node","contentsTitle_fail","contentsTitle_fail_desc","divLine","border","_contentsSourceList","RefreshIntro","_currentSubScene","scene","_refreshIntro","React","useState","length","onDeleteVideo","e","index","target","getAttribute","DeleteVideoFile","createVideoElement","isValid","contentsTitle_success_icon","data-index","getRecordSuccuss","getRecordFail","fullSourceList","totalCount","validCount","getContentsSummeryText","contents","getVideoList","SetPosenetPose","pose","_posenetPose","ClosePosenet","_closePosenet","contentsFailText","retryButton","OKButton","failureCount","onOKClick","onRetryClick","Button","variant","_videoUserCameraFlag","_miniVideoAreaBase","_miniVideoArea","_miniVideoTextArea","_fullVideoAreaBase","_fullVideoArea","_fullVideoTextArea","contentsTextBase","_miniContentsScaning","_contentsScaning","_distroyComponent","CameraCapture","props","defaultProps","getCanvas","elem","canvas","getCanvasOverlay","canvasOverlay","getVideo","onNextCamera","playCamera","getCameraInvalid","textStyle","minPoseConfidence","score","showMiniVideo","Object","assign","stopCamera","bind","posenet","this","Error","setupCamera","navigator","mediaDevices","enumerateDevices","then","devices","device","kind","label","deviceId","catch","err","name","message","stream","getTracks","track","stop","facingModeText","getUserMedia","facingMode","frameRate","exact","aspectRatio","srcObject","Promise","resolve","onloadedmetadata","updateCamera","canvasContext","getContext","showVideo","updateCameraFrame","posenetModel","startTime","findUpdateCameraFrame","a","getTime","poseUpdateFlag","estimateSinglePose","onPosenetPose","showDebugVideo","videoWidth","videoHeight","clearRect","save","drawImage","restore","_closeCamera","onCloseCamera","requestAnimationFrame","videoStyle","videoTextStyle","playsInline","Component","loadingText","_current_scene","dispatch","poseData","onClosePosenet","abs_value","vec","distance","Math","pow","x","y","sqrt","get_cos","partA","partB","_canvasLastCalledTime","_canvasFPS","toTuple","drawKeyPoints","keypoints","minConfidence","skeletonColor","scale","keypoint","beginPath","arc","PI","fillStyle","fill","drawSegment","lineWidth","firstX","firstY","nextX","nextY","startX","startY","endX","endY","moveTo","lineTo","dx","dy","angle","atan2","cos","sin","drawLine","strokeStyle","stroke","drawSkeleton","adjacentKeyPoints","drawDegree","font","skelectonDir","current_angle","pivotVec","degree","acos","Posenet_GetDegreeFormVec","posX","posY","fillText","drawSkeletonDegree","_canvasFPSCount","_canvasTextColor","_canvasTextSize","CanvasFPS_Update","CanvasFPS_Render","_contentsLoading","_miniContentsLoading","PoseNetCamera","getCameraScan","setState","loading","detectPose","transform","screenWidth","innerWidth","screenHeight","innerHeight","poseDetectionFrame","algorithm","imageScaleFactor","flipHorizontal","outputStride","minPartConfidence","maxPoseDetections","nmsRadius","showPoints","showSkeleton","showSkeletonDegree","skeletonDegreeColor","skeletonLineWidth","findPoseDetectionFrame","poses","estimateMultiplePoses","translate","_currentScene","contentsLoading","contentsScaning","_countdown","countdown","maxHeight","contentsResult","_poseDetectionInvalidCount","_poseDetectionValidCount","_step","InvalidPosenet","_invalidPoseKey","ValidPosenet","_validPoseKey","_recordState","tick","startVideoRecord","stopVideoRecord","StartCameraRecord","VideoRecord_Start","currentPercent","recoredState","StopCameraRecord","VideoRecord_Stop","getResultText","videoContainer","progressContainer","_lastCameraRecordStep","InvalidPosenetClear","SetCameraRecord","setStep","getStepData","replace","onVideoEnded","onNextStep","nextStep","changeSceneType","enablePlayerView","change","preStep","getPoseNetMiniCamera","titleText","getResultScene","getStepContents","isNaN","leftTime","maxValue","styles","buildStyles","textColor","pathColor","trailColor","textSize","getTimer","marginLeft","marginTop","addScanProgress","resetScanProgress","videoRoot","resultState","comments","count","targetIndex","time","comment","getConmentsText","keys","k","v","RewardButton","rewardCategory","rewardExp","getRewardIconPath","DefaultConfirmDialog","onCloseClick","openDialog","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogActions","autoFocus","BottomBarBack","BottomBarGroup","BottomBarButton","boxShadow","BottomBarButton_text_1","fontWeight","BottomBarButton_text_2","rewardState","_submitConfirm","setSubmitConfirm","onPlay","onGetRewardClick","onTempFinish","onSubmitConfirmOpen","getContents","videoFullList","invalidCount","getMainButton","location","_rewardState","setRewardState","_rewardCategory","setRewardCategory","_rewardExp","setRewardExp","setResultSceneVisible","query","queryString","parse","search","Complete","reward_category","reward_exp","getActiveScene","App","path","component","IndexScene","Boolean","hostname","match","initialState","combineReducers","action","appElement","document","getElementById","devTools","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","ReactDOM","render","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.3e13052e.chunk.js","sourcesContent":["export const SETSCENE = 'SETSCENE';\r\nexport function setScene(changeScene) {\r\n    return {\r\n        type: SETSCENE,\r\n        _changeScene: changeScene\r\n    };\r\n}\r\n\r\nexport const SETSUBSCENE = 'SETSUBSCENE';\r\nexport function SetSubScene(changeSubScene) {\r\n    return {\r\n        type: SETSUBSCENE,\r\n        _changeSubScene: changeSubScene\r\n    };\r\n}\r\n\r\nexport const REFRESHINTRO = 'REFRESHINTRO';\r\nexport function RefreshIntro() {\r\n    return {\r\n        type: REFRESHINTRO\r\n    };\r\n}\r\n","export function SetIframeFinish() {\r\n    SendMessage(\"onSuccess\");\r\n}\r\n\r\nexport function SetIframeFinishAndLeave() {\r\n    SendMessage(\"onSuccessAndLeave\");\r\n}\r\n\r\nexport function GetIframeReward() {\r\n    SendMessage(\"onGetReward\");\r\n}\r\n\r\nexport function onBack() {\r\n    SendMessage(\"onBack\");\r\n}\r\n\r\nexport function SetIframeFullScreen(fullScreen) {\r\n    //console.log('=========SetIframeFullScreen:' + fullScreen)\r\n    if (fullScreen == false) {\r\n        SendMessage(\"onFitScreen\");\r\n    }\r\n    else {\r\n        SendMessage(\"onFullScreen\");\r\n    }\r\n}\r\n\r\nfunction SendMessage(text) {\r\n    if (undefined == window) {\r\n        return;\r\n    }\r\n    if (undefined == window.parent) {\r\n        return;\r\n    }\r\n    console.log('SendMessage parent:' + text);\r\n    window.parent.postMessage(text, \"*\");\r\n}\r\n\r\nexport function SetLandscapeMode(fullScreen) {\r\n    if (undefined == window) {\r\n        return;\r\n    }\r\n    if (undefined == window.HybridApp) {\r\n        return;\r\n    }\r\n    window.HybridApp.SetLandscapeMode(fullScreen);\r\n}\r\n\r\nexport function EnableScreenMirror() {\r\n    if (undefined == window) {\r\n        return;\r\n    }\r\n    if (undefined == window.HybridApp) {\r\n        return;\r\n    }\r\n    window.HybridApp.EnablingWiFiDisplay();\r\n}\r\n\r\n","\r\nvar _timeOverSound = undefined;\r\nfunction playSound(fileName) {\r\n    console.log('playSound:' + fileName)\r\n    var audio = undefined;\r\n    if (undefined == window.HybridApp) {\r\n        audio = new Audio('./sound/' + fileName);\r\n    } else {\r\n        audio = new Audio('file:///android_asset/sound/' + fileName);\r\n    }\r\n    audio.play();\r\n    return audio;\r\n}\r\n\r\nexport function playEnableClickSound() {\r\n    playSound('Common_Button_Enabled_Touch.wav');\r\n}\r\n\r\nexport function playDisableClickSound() {\r\n    playSound('Common_Button_Disabled_Touch.wav');\r\n}\r\n\r\nexport function playReadySound() {\r\n    playSound('Ready_Set_Signal.wav');\r\n}\r\n\r\nexport function playGoSound() {\r\n    playSound('Go_Signal.wav');\r\n}\r\n\r\nexport function playGetRewardSound() {\r\n    playSound('Quest_Clear_Reward.ogg');\r\n}\r\n\r\nexport function playQuestClearSound() {\r\n    playSound('Quest_Clear.wav');\r\n}\r\n\r\nexport function playQuestFailSound() {\r\n    playSound('Quest_Fail.wav');\r\n}\r\n\r\nexport function playCameraShutterSound() {\r\n    playSound('Cam_Shutter.wav');\r\n}\r\n\r\nexport function playQuizCorrectAnswerSound() {\r\n    playSound('Quiz_Correct_Answer.wav');\r\n}\r\n\r\nexport function playQuizWrongAnswerSound() {\r\n    playSound('Quiz_Wrong_Answer.mp3');\r\n}\r\n\r\nexport function playTimeoverSound() {\r\n    _timeOverSound = playSound('Time_Over_Beep.wav');\r\n}\r\n\r\nexport function playWarringSound() {\r\n    playSound('Warning_Beep.wav');\r\n}\r\n\r\nexport function stopTimeoverSound() {\r\n    if (undefined == _timeOverSound) {\r\n        return;\r\n    }\r\n    _timeOverSound.pause();\r\n    _timeOverSound = undefined;\r\n}\r\n\r\nexport function playQuestAcquireSound() {\r\n    playSound('Quest_Acquire.wav');\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SetMaxTime, SetCurrentTime } from '../actions/countdown';\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nimport { EnableScreenMirror } from './utils/SendMessage';\r\nimport { playEnableClickSound } from './utils/SoundPlay';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    video: {\r\n        position: 'relative',\r\n        width: '100%',\r\n        margin: '0'\r\n    },\r\n    rootFullScreen: {\r\n        position: 'fixed',\r\n        left: '0%',\r\n        top: '0%',\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'black'\r\n    },\r\n    videoFullScreen: {\r\n        position: 'absolute',\r\n        width: 'auto',\r\n        height: '100%',\r\n        left: '0%',\r\n        top: '0%',\r\n        margin: '0'\r\n    },\r\n    contentsTitle: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        left: '0%',\r\n        top: '0%',\r\n        fontSize: '250%',\r\n        textShadow: '2px 2px 5px black',\r\n        color: 'white',\r\n        textAlign: 'left',\r\n        margin: '1% 1%',\r\n        //backgroundColor: '#0000FF88',\r\n    },\r\n    contentBackBoard: {\r\n        position: 'absolute',\r\n        left: '0%',\r\n        top: '0%',\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: '#00000088',\r\n        margin: '0'\r\n    },\r\n    skipGuide: {\r\n        position: 'absolute',\r\n        right: '1%',\r\n        top: '1%',\r\n        color: 'white',\r\n        //backgroundColor: '#FF000088',\r\n    },\r\n    centerPlayButton: {\r\n        position: 'absolute',\r\n        width: '50%',\r\n        height: '50%',\r\n        left: '25%',\r\n        top: '40%',\r\n        display: 'none',\r\n        opacity: '255'\r\n    },\r\n    // 245, 200\r\n    contentsScreenMirror: {\r\n        position: 'absolute',\r\n        width: '98px',\r\n        height: '80px',\r\n        right: '20px',\r\n        bottom: '40px'\r\n    },\r\n    contentsScreenMirrorText: {\r\n        position: 'absolute',\r\n        width: '98px',\r\n        height: '20px',\r\n        right: '20px',\r\n        bottom: '20px',\r\n        color: 'white',\r\n        fontSize: '120%',\r\n        textAlign: 'center'\r\n    },\r\n    centerPlayButtonText: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        top: '70%',\r\n        left: '0',\r\n        fontSize: '60%',\r\n        margin: '5%',\r\n        color: 'white'\r\n    },\r\n    playButton: {\r\n        position: 'absolute',\r\n        width: '50%',\r\n        height: '50%',\r\n        left: '0%',\r\n        top: '40%',\r\n        //margin: 'auto',\r\n        display: 'none',\r\n        opacity: '255'\r\n    },\r\n    skipButton: {\r\n        position: 'absolute',\r\n        width: '50%',\r\n        height: '50%',\r\n        left: '50%',\r\n        top: '40%',\r\n        //margin: 'auto',\r\n        display: 'none'\r\n    },\r\n    largeIcon: {\r\n        fontSize: \"2em\",\r\n        color: green[50]\r\n    }\r\n}));\r\n\r\nvar _ContentsSkipGuide = '터치하여 정지/스킵 가능';\r\nexport const VideoPlay = ({ title, videoUrl, enableContentsSkip, enableCountDown, \r\n    enableContentsPause, onVideoPlayComplete, onVideoSkip, autoPlay, controls,\r\n    enableTitleText, SetMaxTime, SetCurrentTime, enableFullScreen, enableScreenMirror, poster }) => {\r\n    //console.log('VideoPlay component start : ' + title);\r\n    const classes = useStyles();\r\n    const playButtonRef = useRef(null);\r\n    const skipButtonRef = useRef(null);\r\n    const videoRef = useRef(null);\r\n    const backboardRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        console.log('VideoPlay start:' + videoUrl);\r\n        showPauseButton(!autoPlay);\r\n        var id = undefined;\r\n        if (true == enableCountDown) {\r\n            id = setInterval(timer, 1000);\r\n        }\r\n        return () => {\r\n            if (undefined != id) {\r\n                clearInterval(id);\r\n            }\r\n            console.log('VideoPlay finish:' + videoUrl);\r\n        }\r\n    }, []);\r\n\r\n    function timer() {\r\n        const video = videoRef.current;\r\n        if (undefined == video) {\r\n            console.log('videoRef null');\r\n            return;\r\n        }\r\n        //var leftTime = video.duration - video.currentTime;\r\n        SetCurrentTime(parseInt(video.currentTime));\r\n        SetMaxTime(parseInt(video.duration));\r\n    }\r\n\r\n    const onVideoClick = () => {\r\n        console.log('onVideoClick call');\r\n        const video = videoRef.current;\r\n        if (undefined == video) {\r\n            console.log('videoRef null');\r\n            return;\r\n        }\r\n\r\n        if (enableContentsPause == false) {\r\n            if (undefined != video) {\r\n                video.play();\r\n            }\r\n            console.log('disable contents skip');\r\n            return;\r\n        }\r\n\r\n        if (video.paused) {\r\n            video.play();\r\n            showPauseButton(false);\r\n        } else {\r\n            video.pause();\r\n            showPauseButton(true);\r\n        }\r\n    }\r\n\r\n    const showPauseButton = (state) => {\r\n        var displayState = \"none\";\r\n        if (true == state) {\r\n            displayState = \"block\";\r\n        }\r\n        if (undefined != playButtonRef.current) {\r\n            playButtonRef.current.style.display = displayState;\r\n        }\r\n        if (undefined != skipButtonRef.current) {\r\n            skipButtonRef.current.style.display = displayState;\r\n        }\r\n        if (undefined != backboardRef.current) {\r\n            backboardRef.current.style.display = displayState;\r\n        }\r\n    }\r\n\r\n    const onVideoEnded = () => {\r\n        console.log('onVideoEnded call');\r\n        if (undefined != onVideoPlayComplete) {\r\n            onVideoPlayComplete();\r\n        }\r\n    }\r\n\r\n    const onPlayClick = () => {\r\n        console.log('onPlayClick call');\r\n        const video = videoRef.current;\r\n        if (undefined == video) {\r\n            console.log('video null');\r\n            return;\r\n        }\r\n        if (undefined != video) {\r\n            video.play();\r\n        }\r\n        showPauseButton(false);\r\n    }\r\n\r\n    const onSkipClick = () => {\r\n        console.log('onSkipClick call');\r\n        const video = videoRef.current;\r\n        if (undefined == video) {\r\n            console.log('video null');\r\n            return;\r\n        }\r\n        video.src = \"\";\r\n        showPauseButton(false);\r\n        setTimeout(function () {\r\n            if (undefined != onVideoSkip) {\r\n                onVideoSkip();\r\n            }\r\n          }, 500);\r\n    }\r\n\r\n    const onScreenMirror = () => {\r\n        EnableScreenMirror();\r\n        playEnableClickSound();\r\n    }\r\n\r\n    const getPauseView = () => {\r\n        if (false == enableContentsPause) {\r\n            return undefined;\r\n        }\r\n        if (true == enableContentsSkip) {\r\n            return (\r\n                <div>\r\n                    <div className={classes.contentBackBoard} ref={backboardRef}></div>\r\n                    <span className={classes.skipGuide}>{_ContentsSkipGuide}</span>\r\n                    <div className={classes.playButton} ref={playButtonRef}>\r\n                        <IconButton aria-label=\"play\" onClick={onPlayClick} >\r\n                            <PlayArrowIcon className={classes.largeIcon} />\r\n                            <span className={classes.centerPlayButtonText}>재생</span>\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className={classes.skipButton} ref={skipButtonRef}>\r\n                        <IconButton aria-label=\"skip\" onClick={onSkipClick}>\r\n                            <SkipNextIcon className={classes.largeIcon} />\r\n                            <span className={classes.centerPlayButtonText}>다음</span>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <div className={classes.contentBackBoard} ref={backboardRef}></div>\r\n                    <div className={classes.centerPlayButton} ref={playButtonRef}>\r\n                        <IconButton aria-label=\"play\" onClick={onPlayClick} >\r\n                            <PlayArrowIcon className={classes.largeIcon} ></PlayArrowIcon>\r\n                            <span className={classes.centerPlayButtonText}>재생</span>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    var rootClass = enableFullScreen == false ? classes.root : classes.rootFullScreen;\r\n    var videoClass = enableFullScreen == false ? classes.video : classes.videoFullScreen;\r\n\r\n    return (\r\n        <div className={rootClass} style={{ zIndex: '-2' }}>\r\n            <video className={videoClass} onClick={onVideoClick} autoPlay={autoPlay} onEnded={onVideoEnded}  ref={videoRef} controls={controls} poster={poster} >\r\n                <source src={videoUrl} type=\"video/webm\" />\r\n                Your browser does not support the video tag.\r\n            </video>\r\n            {(enableTitleText == true) ?\r\n                <span className={classes.contentsTitle}>{title}</span> :\r\n                undefined}\r\n            {getPauseView()}\r\n            {(enableScreenMirror == true) ?\r\n                <div>\r\n                    <img onClick={onScreenMirror} className={classes.contentsScreenMirror} src={process.env.PUBLIC_URL + '/img/screen-mirror-icon.png'} />\r\n                    <span className={classes.contentsScreenMirrorText}>TV 연결</span>\r\n                </div>\r\n                     : undefined}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n});\r\nconst mapDispatchToProps = { SetMaxTime, SetCurrentTime };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoPlay);\r\n\r\n","export const SETMAXTIME = 'SETMAXTIME';\r\nexport function SetMaxTime(value) {\r\n    return {\r\n        type: SETMAXTIME,\r\n        _maxTime: value\r\n    };\r\n}\r\n\r\nexport const SETCURRENTTIME = 'SETCURRENTTIME';\r\nexport function SetCurrentTime(value) {\r\n    return {\r\n        type: SETCURRENTTIME,\r\n        _currentTime: value\r\n    };\r\n}\r\n\r\n","\r\nexport var _contents = {\r\n    \"step1\" : {\r\n      'title': '코어-복근 15분',\r\n      'desc': '코어-복근 15분',\r\n      'type': 'extra',\r\n      'web_url' : 'https://goli8111.github.io/home-training/data/intro.mp4',\r\n      'url' : 'file:///android_asset/video/intro.webm',\r\n      'enableContentsPause' : true,\r\n      'enablePlayerView' : false,\r\n      'key' : 'intro'\r\n    },\r\n    \"step2\" : {\r\n      'title' : '할로우바디 킥',\r\n      'desc': '할로우바디 킥 30초 X 1 set',\r\n      'type': 'extra',\r\n      'web_url' : 'https://goli8111.github.io/home-training/data/hollow-body-kick-intro-1.mp4',\r\n      'url' : 'file:///android_asset/video/hollow-body-kick-intro-1.webm',\r\n      'enableContentsPause' : true,\r\n      'enablePlayerView' : false,\r\n      'key' : 'hollow-body-kick'\r\n    },\r\n    \"step3\" : {\r\n      'title' : '할로우바디 킥 Set',\r\n      'desc': '할로우바디 킥 30초 X 1 set',\r\n      'type': 'set',\r\n      'web_url' : 'https://goli8111.github.io/home-training/data/hollow-body-kick-set-1.mp4',\r\n      'url' : 'file:///android_asset/video/hollow-body-kick-set-1.webm',\r\n      'enableContentsPause' : false,\r\n      //'enableContentsPause' : true,\r\n      'enablePlayerView' : true,\r\n      'key' : 'hollow-body-kick'\r\n    },\r\n    \"step4\" : {\r\n      'title' : '스파이더 플랭크',\r\n      'desc': '스파이더 플랭크 30초 X 1 set',\r\n      'type': 'extra',\r\n      'web_url' : 'https://goli8111.github.io/home-training/data/spider-plank-intro-1.mp4',\r\n      'url' : 'file:///android_asset/video/spider-plank-intro-1.webm',\r\n      'enableContentsPause' : true,\r\n      'enablePlayerView' : false,\r\n      'key' : 'hollow-body-kick'\r\n    },\r\n    \"step5\" : {\r\n      'title' : '스파이더 플랭크 SET',\r\n      'desc': '스파이더 플랭크 30초 X 1 set',\r\n      'type': 'set',\r\n      'web_url' : 'https://goli8111.github.io/home-training/data/spider-plank-set-1.mp4',\r\n      'url' : 'file:///android_asset/video/spider-plank-set-1.webm',\r\n      //'enableContentsPause' : true,\r\n      'enableContentsPause' : false,\r\n      'enablePlayerView' : true,\r\n      'key' : 'hollow-body-kick'\r\n    },\r\n    \"step6\" : {\r\n      'title' : '',\r\n      'desc': '결과',\r\n      'type': 'extra',\r\n      'web_url' : 'https://goli8111.github.io/home-training/data/core-abs-result.mp4',\r\n      'url' : 'file:///android_asset/video/core-abs-result.webm',\r\n      'enableContentsPause' : false,\r\n      'enablePlayerView' : false,\r\n      'key' : 'result'\r\n    },\r\n\r\n    /*\r\n    \"step2\" : {\r\n      'title' : '마운틴 클라이머',\r\n      'desc': '워밍업:마운틴 클라이머 40초',\r\n      'type': 'extra',\r\n      'web_url' : 'https://goli8111.github.io/home-training/data/mountain-climber-intro.mp4',\r\n      //'url' : 'https://play.bellaco.se/Content/video.mp4',\r\n      'url' : 'file:///android_asset/video/mountain-climber-intro.mp4',\r\n      'enableContentsPause' : true,\r\n      'enablePlayerView' : false,\r\n      'key' : 'mountain-climber'\r\n    },\r\n    \"step3\" : {\r\n      'title' : '마운틴 클라이머(set)',\r\n      'desc': '워밍업:마운틴 클라이머 40초',\r\n      'type': 'set',\r\n      'web_url' : 'https://goli8111.github.io/home-training/data/mountain-climber-set.mp4',\r\n      'url' : 'file:///android_asset/video/mountain-climber-set.mp4',\r\n      'enableContentsPause' : false,\r\n      'enablePlayerView' : true,\r\n      'key' : 'mountain-climber'\r\n    },\r\n    \"step4\" : {\r\n      'title' : '플랭크 인 앤 아웃',\r\n      'desc': '플랭크 인 앤 아웃 30초 X 1 set',\r\n      'type': 'extra',\r\n      'web_url' : 'https://goli8111.github.io/home-training/data/plank-in-and-out-intro.mp4',\r\n      'url' : 'file:///android_asset/video/plank-in-and-out-intro.mp4',\r\n      'enableContentsPause' : true,\r\n      'enablePlayerView' : false,\r\n      'key' : 'plank-in-and-out'\r\n    },\r\n    \"step5\" : {\r\n      'title' : '플랭크 인 앤 아웃(set)',\r\n      'desc': '플랭크 인 앤 아웃 30초 X 1 set',\r\n      'type': 'set',\r\n      'web_url' : 'https://goli8111.github.io/home-training/data/plank-in-and-out-set.mp4',\r\n      'url' : 'file:///android_asset/video/plank-in-and-out-set.mp4',\r\n      'enableContentsPause' : false,\r\n      'enablePlayerView' : true,\r\n      'key' : 'plank-in-and-out'\r\n    },\r\n  \r\n    \"step6\" : {\r\n      'title' : '할로우바디 킥',\r\n      'desc': '할로우바디 킥 30초 X 1 set',\r\n      'type': 'extra',\r\n      'web_url' : 'https://goli8111.github.io/home-training/data/hollow-body-kick-intro-1.mp4',\r\n      'url' : 'file:///android_asset/video/hollow-body-kick-intro-1.mp4',\r\n      'enableContentsPause' : true,\r\n      'enablePlayerView' : false,\r\n      'key' : 'hollow-body-kick'\r\n    },\r\n    \"step7\" : {\r\n      'title' : '할로우바디 킥 Set#1',\r\n      'desc': '할로우바디 킥 30초 X 1 set',\r\n      'type': 'set',\r\n      'web_url' : 'https://goli8111.github.io/home-training/data/hollow-body-kick-set-1.mp4',\r\n      'url' : 'file:///android_asset/video/hollow-body-kick-set-1.mp4',\r\n      'enableContentsPause' : false,\r\n      //'enableContentsPause' : true,\r\n      'enablePlayerView' : true,\r\n      'key' : 'hollow-body-kick'\r\n    },\r\n    \"step8\" : {\r\n      'title' : '할로우바디 킥(휴식)',\r\n      'desc': '할로우바디 킥 30초 후 휴식',\r\n      'type': 'extra',\r\n      'web_url' : 'https://goli8111.github.io/home-training/data/hollow-body-kick-intro-2.mp4',\r\n      'url' : 'file:///android_asset/video/hollow-body-kick-intro-2.mp4',\r\n      'enableContentsPause' : true,\r\n      'enablePlayerView' : false,\r\n      'key' : 'hollow-body-kick'\r\n    },\r\n    \"step9\" : {\r\n      'title' : '할로우바디 킥 Set#2',\r\n      'desc': '할로우바디 킥 30초 X 2 set',\r\n      'type': 'set',\r\n      'web_url' : 'https://goli8111.github.io/home-training/data/hollow-body-kick-set-2.mp4',\r\n      'url' : 'file:///android_asset/video/hollow-body-kick-set-2.mp4',\r\n      //'enableContentsPause' : true,\r\n      'enableContentsPause' : false,\r\n      'enablePlayerView' : true,\r\n      'key' : 'hollow-body-kick'\r\n    },\r\n    \"step10\" : {\r\n      'title' : '',\r\n      'desc': '결과',\r\n      'type': 'extra',\r\n      'web_url' : 'https://goli8111.github.io/home-training/data/core-abs-result.mp4',\r\n      'url' : 'file:///android_asset/video/core-abs-result.mp4',\r\n      'enableContentsPause' : false,\r\n      'enablePlayerView' : false,\r\n      'key' : 'result'\r\n    },\r\n    */\r\n  }","var sleepDuration = 0;\r\nfunction sleep() {\r\n    const date = Date.now();\r\n    let currentDate = null;\r\n    do {\r\n        currentDate = Date.now();\r\n    } while (currentDate - date < sleepDuration);\r\n}\r\n\r\nexport function VideoRecord_Start(step) {\r\n    if (undefined == window) {\r\n        return;\r\n    }\r\n    if (undefined == window.HybridApp) {\r\n        return;\r\n    }\r\n    window.HybridApp.StartCameraRecord(step);\r\n    sleep();\r\n    return true;\r\n}\r\n\r\nexport function VideoRecord_Stop(recoredState, step, title, desc) {\r\n    if (undefined == window) {\r\n        return;\r\n    }\r\n    if (undefined == window.HybridApp) {\r\n        return;\r\n    }\r\n    window.HybridApp.StopCameraRecord();\r\n    sleep();\r\n\r\n    // 삭제 처리(임시로 지연 처리)\r\n    if (false== recoredState) {\r\n        setTimeout(() => {\r\n            window.HybridApp.DeleteVideoFile(step);\r\n        }, 1000)\r\n    }\r\n}\r\n\r\nexport function VideoRecordExist(step) {\r\n    if (undefined == window) {\r\n        return false;\r\n    }\r\n    if (undefined == window.HybridApp) {\r\n        return false;\r\n    }\r\n    return window.HybridApp.IsVideoFileExist(step);\r\n}\r\n\r\nexport function VideoRecordDelete(step) {\r\n    if (undefined == window) {\r\n        return;\r\n    }\r\n    if (undefined == window.HybridApp) {\r\n        return;\r\n    }\r\n    window.HybridApp.DeleteVideoFile(step);\r\n    sleep();\r\n}\r\n\r\nexport function GetVideoFullList(contentsData) {\r\n    var list = [];\r\n    for (var i = 1; i < 100; i++) {\r\n        var key = 'step' + i;\r\n        var stepData = contentsData[key];\r\n        if (undefined == stepData) {\r\n            break;\r\n        }\r\n        if (stepData.type != 'set') {\r\n            continue;\r\n        }\r\n\r\n        var data = {};\r\n        data.step = i;\r\n        if (window.HybridApp == undefined) {\r\n            data.valid = false;// \r\n            data.url = contentsData[key].web_url;\r\n        } else {\r\n            data.valid = window.HybridApp.IsVideoFileExist(i);\r\n            data.url = window.HybridApp.GetVideoFilePath(i);\r\n        }\r\n        data.desc = contentsData[key].desc;\r\n        data.title = contentsData[key].title;\r\n        list.push(data);\r\n    }\r\n    return list;\r\n}\r\n\r\nexport function GetVideoList(contentsData, recordState) {\r\n    var fullList = GetVideoFullList(contentsData);\r\n    return GetVideoListFromFullList(fullList, recordState);\r\n}\r\n\r\nexport function GetVideoListFromFullList(fullList, recordState) {\r\n    var list = [];\r\n    fullList.forEach(node => {\r\n        //console.log('=====' + node.title + \":\" + node.valid + \"/\" + node.url);\r\n        if (node.valid == recordState) {\r\n            list.push(node);\r\n        }\r\n    });\r\n    return list;\r\n}\r\n\r\nexport function SetMediaPlay(url) {\r\n    if (undefined == window) {\r\n        return;\r\n    }\r\n    if (undefined == window.HybridApp) {\r\n        return;\r\n    }\r\n    window.HybridApp.SetMediaPlay(url);\r\n    sleep();\r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SetSubScene, RefreshIntro } from '../actions/scene';\r\n\r\nimport './FullScreenResult.css';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport VideoPlay from './videoPlay'\r\n\r\nimport { _contents } from './../scene/ContentsData';  \r\n\r\nimport { GetVideoList, VideoRecordDelete, GetVideoFullList } from './utils/VideoRecord'\r\nimport { playEnableClickSound } from './utils/SoundPlay'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'relative',\r\n    width: '100%',\r\n  },\r\n  contentsTitle_fail: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    left: '0%',\r\n    color: 'red',\r\n  },\r\n  contentsTitle_fail_desc: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    left: '0%',\r\n    color: 'gray'\r\n  },\r\n  video: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    margin: '0',\r\n    //opacity: '0.2'\r\n  },\r\n  divLine: {\r\n    border: \"1px solid\",\r\n    color: \"#DDDDDD\",\r\n    width: \"95%\"\r\n  }\r\n}));\r\n\r\nvar _contentsTitle = '내기록';\r\nvar _recordFailText = '영상 기록 없음';\r\nvar _contentsSourceList = undefined;\r\nexport const FullScreenResult = ({ _currentSubScene, _refreshIntro, RefreshIntro }) => {\r\n  const classes = useStyles();\r\n  const [_videoFaceMask, setVideoFaceMask] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    _contentsSourceList = GetVideoList(_contents, true);\r\n    if (undefined != _contentsSourceList && 0 < _contentsSourceList.length) {\r\n      //console.log('========FullScreenResult source count:' + _contentsSourceList.length);\r\n    } else {\r\n      //console.log('========FullScreenResult source zero');\r\n    }\r\n  });\r\n\r\n  const onToggleVideoFaceMask = (e) => {\r\n    var index = e.target.getAttribute(\"data-index\");\r\n    console.log('onToggleVideoFaceMask call index:'+ index);\r\n    setVideoFaceMask(!_videoFaceMask);\r\n  }\r\n\r\n  const onDeleteVideo = (e) => {\r\n    var index = e.target.getAttribute(\"data-index\");\r\n    console.log('onDeleteVideo call index:' + index);\r\n    VideoRecordDelete(parseInt(index));\r\n    //setVideoFaceMask(!_videoFaceMask);\r\n    RefreshIntro();\r\n    playEnableClickSound(); \r\n  }\r\n\r\n  const getContentsSummeryText = () => {\r\n    var fullSourceList = GetVideoFullList(_contents);\r\n    var totalCount = fullSourceList.length;\r\n    var validCount = 0;\r\n    for (var i = 0; i < fullSourceList.length; i++) {\r\n      if (true == fullSourceList[i].valid) {\r\n        validCount++;\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        <span style={{ color: 'green' }}>{validCount} Set</span>기록 / 총 {totalCount} Set\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const getRecordSuccuss = (index, desc, url) => {\r\n    return (\r\n      <div key={desc}>\r\n        <div className='contentsTitle_left'>\r\n          <div className={classes.contentsTitle_success_icon}>\r\n            {/* <img onClick={onToggleVideoFaceMask} data-index={index} className='contentsTitle_success_smile_icon' src={process.env.PUBLIC_URL + '/img/face-mask-icon.png'} /> */}\r\n            <img onClick={onDeleteVideo} data-index={index} className='contentsTitle_success_delete_icon' src={process.env.PUBLIC_URL + '/img/result-scene-delete-icon.png'} />\r\n          </div>\r\n          <span className='contentsTitle_success_text'>{desc}\r\n          </span>\r\n        </div>\r\n        <video className={classes.video} autoPlay={false} controls={true} poster={process.env.PUBLIC_URL + '/img/HomeTrainingQuest_icon.png'}>\r\n          <source src={url} type=\"video/mp4\" id=\"SelectSoundOutput\" />\r\n                Your browser does not support the video tag.\r\n        </video>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const getRecordFail = (desc) => {\r\n    return (\r\n      <div key={desc}>\r\n        <div className='contentsTitle_fail_left' >\r\n          <span className={classes.contentsTitle_fail} >{desc}</span>\r\n        </div>\r\n        <div className='contentsTitle_fail_center' >\r\n          <span className={classes.contentsTitle_fail_desc}>{_recordFailText}</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const createVideoElement = (index, title, desc, url, isValid) => {\r\n    //console.log('createVideoElement ' + title)\r\n    return (\r\n      <div key={title} >\r\n        <br/>\r\n        {(isValid) ? getRecordSuccuss(index, desc, url) : getRecordFail(desc)}\r\n      </div>);\r\n  }\r\n\r\n  const getVideoList = () => {\r\n    let contents = [];\r\n    var fullSourceList = GetVideoFullList(_contents);\r\n    if (undefined != fullSourceList) {\r\n      console.log('fullSourceList:' + fullSourceList.length);\r\n      for (var i = 0; i < fullSourceList.length; i++) {\r\n        contents.push(createVideoElement(fullSourceList[i].step, fullSourceList[i].title, \r\n          fullSourceList[i].desc, fullSourceList[i].url, fullSourceList[i].valid));\r\n      }\r\n    }\r\n    return contents;\r\n  }\r\n\r\n\r\n  return (\r\n    <div key='FullScreenResult' className={classes.root}>\r\n      <div className='result_contentsSummery'>\r\n        <span className='result_contentsSummery_left'>{_contentsTitle}</span>\r\n        <span className='result_contentsSummery_right'>{getContentsSummeryText()}</span>\r\n      </div>\r\n      <br/>\r\n      <div className='result_videoRoot'>\r\n          <div className='result_videoContainer'>\r\n            {getVideoList()} \r\n            <hr className={classes.divLine} />\r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  _currentSubScene: state.scene._currentSubScene,\r\n  _refreshIntro: state.scene._refreshIntro,\r\n});\r\nconst mapDispatchToProps = { SetSubScene, RefreshIntro };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FullScreenResult);\r\n","export const SETPOSENETPOSE = 'SETPOSENETPOSE';\r\nexport function SetPosenetPose(pose) {\r\n    return {\r\n        type: SETPOSENETPOSE,\r\n        _posenetPose: pose\r\n    };\r\n}\r\n\r\nexport const CLOSEPOSENET = 'CLOSEPOSENET';\r\nexport function ClosePosenet(state) {\r\n    console.log('ClosePosenet action call:' + state);\r\n    return {\r\n        type: CLOSEPOSENET,\r\n        _closePosenet: state\r\n    };\r\n}\r\n\r\nexport const INVALIDPOSENET = 'INVALIDPOSENET';\r\nexport function InvalidPosenet(key) {\r\n    //console.log('InvalidPosenet action call');\r\n    return {\r\n        type: INVALIDPOSENET,\r\n        _invalidPoseKey: key\r\n    };\r\n}\r\n\r\nexport const INVALIDPOSENET_CLEAR = 'INVALIDPOSENET_CLEAR';\r\nexport function InvalidPosenetClear() {\r\n    //console.log('InvalidPosenetClear action call');\r\n    return {\r\n        type: INVALIDPOSENET_CLEAR\r\n    };\r\n}\r\n\r\nexport const VALIDPOSENET = 'VALIDPOSENET';\r\nexport function ValidPosenet(key) {\r\n    //console.log('ValidPosenet action call');\r\n    return {\r\n        type: VALIDPOSENET,\r\n        _validPoseKey: key\r\n    };\r\n}\r\nexport const SETCAMERARECORD = 'SETCAMERARECORD';\r\nexport function SetCameraRecord(state) {\r\n    console.log('SETCAMERARECORD action call:' + state);\r\n    return {\r\n        type: SETCAMERARECORD,\r\n        _recordState: state\r\n    };\r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SetSubScene } from '../actions/scene';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: 'fixed',\r\n        left: '0%',\r\n        top: '0%',\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    contentsTitle: {\r\n        position: 'absolute',\r\n        left: '5%',\r\n        top: '5%',\r\n        fontSize: '250%',\r\n        textShadow: '2px 2px 5px black',\r\n        color: 'red'\r\n    },\r\n    contentsFailText: {\r\n        position: 'absolute',\r\n        left: '5%',\r\n        top: '20%',\r\n        fontSize: '300%',\r\n        textShadow: '2px 2px 5px black',\r\n        color: 'white'\r\n    },\r\n    retryButton: {\r\n        position: 'absolute',\r\n        left: '60%',\r\n        top: '5%',\r\n        width: '30%',\r\n        height: '20%',\r\n        fontSize: '150%',\r\n        opacity: 0.5\r\n    },\r\n    OKButton: {\r\n        position: 'absolute',\r\n        left: '60%',\r\n        top: '35%',\r\n        width: '30%',\r\n        height: '20%',\r\n        fontSize: '150%',\r\n        opacity: 0.5\r\n    },\r\n}));\r\n\r\nvar _contentsTitle = '남은 필요';\r\nvar _contentsFailText = 'SET';\r\nvar _retryText = '재도전';\r\nvar _OKText = '확인';\r\nexport const ResultFailure = ({ SetSubScene, _currentSubScene, failureCount, onOKClick, onRetryClick}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <span className={classes.contentsTitle}>{_contentsTitle}</span>\r\n        <span className={classes.contentsFailText}>{failureCount + _contentsFailText}</span>\r\n        <div className='contents_result_retry' onClick={onRetryClick}>\r\n            <img src={process.env.PUBLIC_URL + '/img/retry_icon.png'} />\r\n            <span>{_retryText}</span>\r\n        </div>\r\n\r\n        <div className='contents_result_ok' onClick={onOKClick}>\r\n            <img src={process.env.PUBLIC_URL + '/img/ok_icon.png'} />\r\n            <span>{_OKText}</span>\r\n        </div>\r\n        {/* <Button className={classes.retryButton} onClick={onRetryClick} variant=\"contained\" color=\"secondary\">{_retryText}</Button>\r\n        <Button className={classes.OKButton} onClick={onOKClick} variant=\"contained\" color=\"secondary\">{_OKText}</Button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  _currentSubScene: state.scene._currentSubScene\r\n});\r\nconst mapDispatchToProps = { SetSubScene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultFailure);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SetSubScene } from '../actions/scene';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: 'fixed',\r\n        left: '0%',\r\n        top: '0%',\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    contentsTitle: {\r\n        position: 'absolute',\r\n        left: '5%',\r\n        top: '5%',\r\n        fontSize: '250%',\r\n        textShadow: '2px 2px 5px black',\r\n        color: 'green'\r\n    },\r\n    OKButton: {\r\n        position: 'absolute',\r\n        left: '60%',\r\n        top: '35%',\r\n        width: '30%',\r\n        height: '20%',\r\n        fontSize: '150%',\r\n        opacity: 0.5\r\n    },\r\n}));\r\n\r\nvar _contentsTitle = '영상 기록 완료';\r\nvar _OKText = '확인';\r\nexport const ResultSuccess = ({ SetSubScene, _currentSubScene, onOKClick}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n        <span className={classes.contentsTitle}>{_contentsTitle}</span>\r\n        <Button className={classes.OKButton} onClick={onOKClick} variant=\"contained\" color=\"secondary\">{_OKText}</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  _currentSubScene: state.scene._currentSubScene\r\n});\r\nconst mapDispatchToProps = { SetSubScene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultSuccess);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport * as posenet from '@tensorflow-models/posenet'\r\nimport { SetPosenetPose, ClosePosenet } from '../actions/posenet'\r\n\r\nvar _videoUserCameraFlag = true;\r\n\r\nconst rootStyle = {\r\n    position: \"fixed\",\r\n    left: \"0%\",\r\n    top: \"0%\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n\r\n    backgroundColor: 'black'\r\n}\r\n\r\n\r\n// const videoStyle = {\r\n//     position: \"fixed\",\r\n//     left: \"0%\",\r\n//     //top: \"0%\",\r\n//     width: \"100%\",\r\n//     height: \"auto\",\r\n//     top: \"50%\",\r\n//     // transform: 'translate(0%, -50%)',\r\n//     // zIndex: '-2'\r\n// }\r\n\r\n\r\nconst _miniVideoAreaBase = {\r\n    zIndex: '0',\r\n    position: 'fixed',\r\n    right: '0%',\r\n    bottom: '0%',\r\n    width: '30%',\r\n    // top: \"50%\",\r\n    // transform: 'translate(0%, -50%)',\r\n}\r\nconst _miniVideoArea = {\r\n    height: 'auto'\r\n}\r\n\r\nconst _miniVideoTextArea = {\r\n    height: '10%'\r\n}\r\n\r\nconst _fullVideoAreaBase = {\r\n    zIndex: '0',\r\n    position: 'fixed',\r\n    left: '0%',\r\n    top: '0%',\r\n    width: '100%'\r\n}\r\nconst _fullVideoArea = {\r\n    height: 'auto'\r\n}\r\nconst _fullVideoTextArea = {\r\n    height: '100%'\r\n}\r\nconst contentsTextBase = {\r\n    position: 'absolute',\r\n    zIndex: '1',\r\n    left: '0%',\r\n    top: '0%',\r\n    width: '98%',\r\n    height: '100%',\r\n    margin: '1%',\r\n    textShadow: '2px 2px 5px black',\r\n    color: 'white',\r\n}\r\nconst _miniContentsScaning = {\r\n    textAlign: 'center',\r\n    fontSize: '100%',\r\n    //backgroundColor: '#0000FF88',\r\n}\r\nconst _contentsScaning = {\r\n    textAlign: 'right',\r\n    fontSize: '130%',\r\n    //backgroundColor: '#0000FF88',\r\n}\r\n\r\n// 최적화로 이미 종료 되었지만 이미지 Pose 체크를 하는 경우를 위해서 flag 추가\r\nvar _distroyComponent = false;\r\nclass CameraCapture extends Component {\r\n\r\n    static defaultProps = {\r\n        showVideo: false,\r\n        showDebugVideo: false,\r\n        showMiniVideo: false,\r\n        minPoseConfidence: 0.3,\r\n        loadingText: 'Loading...please be patient...'\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props, CameraCapture.defaultProps)\r\n        //this.resize = this.resize.bind(this);\r\n        this.stopCamera = this.stopCamera.bind(this);\r\n    }\r\n\r\n    getCanvas = elem => {\r\n        this.canvas = elem\r\n    }\r\n\r\n    getCanvasOverlay = elem => {\r\n        this.canvasOverlay = elem\r\n    }\r\n\r\n    getVideo = elem => {\r\n        this.video = elem;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        _distroyComponent = false;\r\n        try {\r\n            this.posenet = await posenet.load()\r\n        } catch (error) {\r\n            throw new Error('PoseNetCamera failed to load')\r\n        }\r\n\r\n        try {\r\n            await this.setupCamera();\r\n        } catch (error) {\r\n            throw new Error(\r\n                'This browser does not support video capture, or this device does not have a camera'\r\n            )\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        _distroyComponent = true;\r\n        this.stopCamera();\r\n    }\r\n\r\n    async setupCamera() {\r\n        if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\r\n            throw new Error(\r\n                'Browser API navigator.mediaDevices.getUserMedia not available'\r\n            )\r\n        }\r\n        navigator.mediaDevices.enumerateDevices()\r\n            .then(function (devices) {\r\n                devices.forEach(function (device) {\r\n                    if (device.kind === 'videoinput') {\r\n                        //_videoCamneraList.push(device.deviceId);\r\n                    }\r\n                    console.log(device.kind + \": \" + device.label + \", id = \" + device.deviceId);\r\n                });\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err.name + \": \" + err.message);\r\n            });\r\n\r\n        //this.resize();\r\n        this.playCamera();\r\n    }\r\n\r\n    async playCamera() {\r\n        if (window.stream) {\r\n            window.stream.getTracks().forEach(track => {\r\n                track.stop();\r\n            });\r\n        }\r\n        const video = this.video;\r\n        var screenWidth = 1920;//video.width;//window.innerWidth;\r\n        var screenHeight = 1080;//video.height;//window.innerHeight;\r\n\r\n        var facingModeText = 'user';\r\n        if (_videoUserCameraFlag == false) {\r\n            facingModeText = 'environment';\r\n        }\r\n        const stream = await navigator.mediaDevices.getUserMedia({\r\n            audio: false,\r\n            video: {\r\n                //deviceId: videoSource ? { exact: videoSource } : undefined,\r\n                facingMode: facingModeText,\r\n                frameRate: 60,\r\n                width: { exact: screenWidth },\r\n                height: { exact: screenHeight },\r\n                aspectRatio: {\r\n                    exact: screenWidth / screenHeight\r\n                }\r\n            }\r\n        })\r\n\r\n        window.stream = stream;\r\n        video.srcObject = stream;\r\n        //video.play();\r\n        return new Promise(resolve => {\r\n            video.onloadedmetadata = () => {\r\n                video.play();\r\n                this.updateCamera();\r\n                resolve(video);\r\n            }\r\n        })\r\n    }\r\n\r\n    stopCamera() {\r\n        console.log('stopCamera call');\r\n        const video = this.video;\r\n        //console.log(video);\r\n        if (undefined == video) {\r\n            return;\r\n        }\r\n        video.pause();\r\n        video.src = \"\";\r\n        if (undefined != video.srcObject) {\r\n            video.srcObject.getTracks()[0].stop();\r\n            video.srcObject = undefined;\r\n        }\r\n        console.log(\"video off\");\r\n    }\r\n\r\n    updateCamera() {\r\n        const canvas = this.canvas;\r\n        if (undefined == canvas) {\r\n            return;\r\n        }\r\n        const canvasContext = canvas.getContext('2d')\r\n        if (undefined == canvasContext) {\r\n            return;\r\n        }\r\n        const video = this.video;\r\n        if (undefined == video) {\r\n            return;\r\n        }\r\n        //console.log('showVideo:' + this.props.showVideo);\r\n        if (false == this.props.showVideo) {\r\n            video.style.display = \"none\";\r\n        }\r\n        else {\r\n            video.style.display = \"block\";\r\n        }\r\n        this.updateCameraFrame(canvasContext)\r\n    }\r\n\r\n    updateCameraFrame(canvasContext) {\r\n        const video = this.video;\r\n        var outputStride = 16;\r\n        var imageScaleFactor = 0.5;\r\n        var flipHorizontal = true;\r\n        const posenetModel = this.posenet;\r\n        var startTime = 0;\r\n\r\n        const findUpdateCameraFrame = async () => {\r\n\r\n            if (_distroyComponent == true) {\r\n                return;\r\n            }\r\n\r\n            const canvas = this.canvas;\r\n\r\n            var currentTime = new Date().getTime();\r\n            var diffTime = currentTime - startTime;\r\n            var poseUpdateFlag = diffTime > 1000;\r\n            if (true == poseUpdateFlag) {\r\n                startTime = currentTime;\r\n            }\r\n\r\n            if (true == poseUpdateFlag) {\r\n                try {\r\n                    const pose = await posenetModel.estimateSinglePose(\r\n                        video,\r\n                        imageScaleFactor,\r\n                        flipHorizontal,\r\n                        outputStride\r\n                    );\r\n                    this.props.onPosenetPose(pose);\r\n                } catch (error) {\r\n                    console.log('posenet detection error', error);\r\n                }\r\n            }\r\n\r\n            if (true == this.props.showDebugVideo && undefined != canvas) {\r\n\r\n                if (video.videoWidth != canvas.width || video.videoHeight != canvas.height) {\r\n                    canvas.width = video.videoWidth;\r\n                    canvas.height = video.videoHeight;\r\n                    canvasContext.width = video.videoWidth;\r\n                    canvasContext.height = video.videoHeight;\r\n                }\r\n                canvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n                canvasContext.save();\r\n                canvasContext.drawImage(video, 0, 0);//, video.videoWidth, video.videoHeight)\r\n                canvasContext.restore();\r\n            }\r\n\r\n            if ('start' == this.props._closeCamera) {\r\n                this.stopCamera();\r\n                this.props.onCloseCamera('complete');\r\n                return;\r\n            }\r\n            requestAnimationFrame(findUpdateCameraFrame)\r\n        }\r\n        findUpdateCameraFrame()\r\n    }\r\n\r\n    onNextCamera = () => {\r\n        _videoUserCameraFlag = !_videoUserCameraFlag;\r\n        console.log('user camera flag : ' + _videoUserCameraFlag);\r\n        this.playCamera();\r\n    }\r\n\r\n\r\n    getCameraInvalid = () => {\r\n        if (undefined == this.props._posenetPose) {\r\n            return undefined;\r\n        }\r\n        if (this.props.minPoseConfidence < this.props._posenetPose.score) {\r\n            return undefined;\r\n        }\r\n\r\n        var textStyle;\r\n        if (true == this.props.showMiniVideo) {\r\n            textStyle = Object.assign({}, contentsTextBase, _miniContentsScaning);\r\n        } else {\r\n            textStyle = Object.assign({}, contentsTextBase, _contentsScaning);\r\n        }\r\n\r\n        return (\r\n            <span style={textStyle}>화면 안으로 들어오세요.</span>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        var videoStyle;\r\n        //var canvasStyle;\r\n        var videoTextStyle;\r\n        if (true == this.props.showMiniVideo) {\r\n            videoStyle = Object.assign({}, _miniVideoAreaBase, _miniVideoArea);\r\n            //canvasStyle = Object.assign({}, _miniVideoAreaBase, _miniCanvasArea);\r\n            videoTextStyle = Object.assign({}, _miniVideoAreaBase, _miniVideoTextArea);\r\n        } else {\r\n            videoStyle = Object.assign({}, _fullVideoAreaBase, _fullVideoArea);\r\n            //canvasStyle = videoStyle;\r\n            videoTextStyle = Object.assign({}, _fullVideoAreaBase, _fullVideoTextArea);\r\n        }\r\n\r\n        return (\r\n            <div >\r\n                {/* <meta http-equiv=\"Content-Security-Policy\" content=\"default-src * gap:; script-src * 'unsafe-inline' 'unsafe-eval'; connect-src *; img-src * data: blob: android-webview-video-poster:; style-src * 'unsafe-inline';\" /> */}\r\n                <video id='videoCamera' style={videoStyle} src=\"\" playsInline ref={this.getVideo} />\r\n                <canvas style={videoStyle} ref={this.getCanvas} />\r\n                <div style={videoTextStyle}>\r\n                    {/* {this.getCameraScan()} */}\r\n                    {this.getCameraInvalid()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        _current_scene: state.scene._current_scene,\r\n        _posenetPose: state.posenet._posenetPose,\r\n        //_closeCamera: state.camera._closeCamera\r\n    };\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onPosenetPose: (poseData) => dispatch(SetPosenetPose(poseData)),\r\n        onClosePosenet: (state) => dispatch(ClosePosenet(state))\r\n    }\r\n}\r\n\r\nCameraCapture = connect(mapStateToProps, mapDispatchToProps)(CameraCapture);\r\n\r\nexport default CameraCapture;\r\n","\r\nexport function Posenet_GetDegreeFormVec(vec) {\r\n    var pivotVec = {};\r\n    pivotVec.x = 0;\r\n    pivotVec.y = -1;\r\n\r\n    var cos = get_cos(pivotVec, vec);\r\n    var degree = parseInt(Math.acos(cos) * (180 / Math.PI));\r\n    if (vec.x < 0) {\r\n        degree += 180;\r\n    }\r\n    return degree;\r\n}\r\n\r\nexport function Posenet_GetDegreeFormVec2(vec1, vec2) {\r\n    var cos = get_cos(vec1, vec2);\r\n    var degree = parseInt(Math.acos(cos) * (180 / Math.PI));\r\n    return degree;  \r\n}\r\n\r\nexport function InBoundaryDegree(targetDegree, currentDegree, boundaryDegree) {\r\n    var diffDegree = Math.abs(currentDegree - targetDegree);\r\n    if (diffDegree <= boundaryDegree) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction abs_value(vec) {\r\n    var distance = Math.pow(vec.x - 0, 2) + Math.pow(vec.y - 0, 2);\r\n    return Math.sqrt(distance);\r\n}\r\n\r\nfunction get_cos(partA, partB) {\r\n    let dotProduct = ((partA.x * partB.x) + (partA.y * partB.y));\r\n    let cosineSimilarity = dotProduct / (abs_value(partA) * abs_value(partB));\r\n    return cosineSimilarity;\r\n}","import * as posenet from '@tensorflow-models/posenet'\r\nimport { Posenet_GetDegreeFormVec } from './data/PosenetMath'\r\n\r\nconst pointRadius = 3\r\n// var _reserveCameraClose = false;\r\n\r\n// export function IsReserveCameraClose() {\r\n//   return _reserveCameraClose;\r\n// }\r\n\r\n// export function SetReserveCameraClose(flag) {\r\n//   _reserveCameraClose = flag;\r\n// }\r\n\r\nexport const KEYPOINT_COLOR_NAMES = [\r\n  \"AliceBlue\",\r\n  \"AntiqueWhite\",\r\n  \"Aqua\",\r\n  \"Aquamarine\",\r\n  \"Azure\",\r\n  \"Beige\",\r\n  \"Bisque\",\r\n  \"Black\",\r\n  \"BlanchedAlmond\",\r\n  \"Blue\",\r\n  \"BlueViolet\",\r\n  \"Brown\",\r\n  \"BurlyWood\",\r\n  \"CadetBlue\",\r\n  \"Chartreuse\",\r\n  \"Chocolate\",\r\n  \"Coral\",\r\n  \"CornflowerBlue\",\r\n  \"Cornsilk\",\r\n  \"Crimson\",\r\n  \"Cyan\",\r\n  \"DarkBlue\",\r\n  \"DarkCyan\",\r\n  \"DarkGoldenRod\",\r\n  \"DarkGray\",\r\n  \"DarkGrey\",\r\n  \"DarkGreen\",\r\n  \"DarkKhaki\",\r\n  \"DarkMagenta\",\r\n  \"DarkOliveGreen\",\r\n  \"DarkOrange\",\r\n  \"DarkOrchid\",\r\n  \"DarkRed\",\r\n  \"DarkSalmon\",\r\n  \"DarkSeaGreen\",\r\n  \"DarkSlateBlue\",\r\n  \"DarkSlateGray\",\r\n  \"DarkSlateGrey\",\r\n  \"DarkTurquoise\",\r\n  \"DarkViolet\",\r\n  \"DeepPink\",\r\n  \"DeepSkyBlue\",\r\n  \"DimGray\",\r\n  \"DimGrey\",\r\n  \"DodgerBlue\",\r\n  \"FireBrick\",\r\n  \"FloralWhite\",\r\n  \"ForestGreen\",\r\n  \"Fuchsia\",\r\n  \"Gainsboro\",\r\n  \"GhostWhite\",\r\n  \"Gold\",\r\n  \"GoldenRod\",\r\n  \"Gray\",\r\n  \"Grey\",\r\n  \"Green\",\r\n  \"GreenYellow\",\r\n  \"HoneyDew\",\r\n  \"HotPink\",\r\n  \"IndianRed\",\r\n  \"Indigo\",\r\n  \"Ivory\",\r\n  \"Khaki\",\r\n  \"Lavender\",\r\n  \"LavenderBlush\",\r\n  \"LawnGreen\",\r\n  \"LemonChiffon\",\r\n  \"LightBlue\",\r\n  \"LightCoral\",\r\n  \"LightCyan\",\r\n  \"LightGoldenRodYellow\",\r\n  \"LightGray\",\r\n  \"LightGrey\",\r\n  \"LightGreen\",\r\n  \"LightPink\",\r\n  \"LightSalmon\",\r\n  \"LightSeaGreen\",\r\n  \"LightSkyBlue\",\r\n  \"LightSlateGray\",\r\n  \"LightSlateGrey\",\r\n  \"LightSteelBlue\",\r\n  \"LightYellow\",\r\n  \"Lime\",\r\n  \"LimeGreen\",\r\n  \"Linen\",\r\n  \"Magenta\",\r\n  \"Maroon\",\r\n  \"MediumAquaMarine\",\r\n  \"MediumBlue\",\r\n  \"MediumOrchid\",\r\n  \"MediumPurple\",\r\n  \"MediumSeaGreen\",\r\n  \"MediumSlateBlue\",\r\n  \"MediumSpringGreen\",\r\n  \"MediumTurquoise\",\r\n  \"MediumVioletRed\",\r\n  \"MidnightBlue\",\r\n  \"MintCream\",\r\n  \"MistyRose\",\r\n  \"Moccasin\",\r\n  \"NavajoWhite\",\r\n  \"Navy\",\r\n  \"OldLace\",\r\n  \"Olive\",\r\n  \"OliveDrab\",\r\n  \"Orange\",\r\n  \"OrangeRed\",\r\n  \"Orchid\",\r\n  \"PaleGoldenRod\",\r\n  \"PaleGreen\",\r\n  \"PaleTurquoise\",\r\n  \"PaleVioletRed\",\r\n  \"PapayaWhip\",\r\n  \"PeachPuff\",\r\n  \"Peru\",\r\n  \"Pink\",\r\n  \"Plum\",\r\n  \"PowderBlue\",\r\n  \"Purple\",\r\n  \"RebeccaPurple\",\r\n  \"Red\",\r\n  \"RosyBrown\",\r\n  \"RoyalBlue\",\r\n  \"SaddleBrown\",\r\n  \"Salmon\",\r\n  \"SandyBrown\",\r\n  \"SeaGreen\",\r\n  \"SeaShell\",\r\n  \"Sienna\",\r\n  \"Silver\",\r\n  \"SkyBlue\",\r\n  \"SlateBlue\",\r\n  \"SlateGray\",\r\n  \"SlateGrey\",\r\n  \"Snow\",\r\n  \"SpringGreen\",\r\n  \"SteelBlue\",\r\n  \"Tan\",\r\n  \"Teal\",\r\n  \"Thistle\",\r\n  \"Tomato\",\r\n  \"Turquoise\",\r\n  \"Violet\",\r\n  \"Wheat\",\r\n  \"White\",\r\n  \"WhiteSmoke\",\r\n  \"Yellow\",\r\n  \"YellowGreen\",\r\n];\r\n\r\nexport const config = {\r\n  videoWidth: 900,\r\n  videoHeight: 700,\r\n  flipHorizontal: true,\r\n  algorithm: 'single-pose',\r\n  showVideo: true,\r\n  showSkeleton: true,\r\n  showPoints: true,\r\n  minPoseConfidence: 0.1,\r\n  minPartConfidence: 0.5,\r\n  maxPoseDetections: 2,\r\n  nmsRadius: 20,\r\n  outputStride: 16,\r\n  imageScaleFactor: 0.5,\r\n  skeletonColor: '#ffadea',\r\n  skeletonLineWidth: 6,\r\n  loadingText: 'Loading...please be patient...'\r\n}\r\n\r\nfunction isAndroid() {\r\n  return /Android/i.test(navigator.userAgent);\r\n}\r\n\r\nfunction isiOS() {\r\n  return /iPhone|iPad|iPod/i.test(navigator.userAgent);\r\n}\r\n\r\nexport function isMobile() {\r\n  return isAndroid() || isiOS();\r\n}\r\n\r\nfunction toTuple({x, y}) {\r\n  return [x, y]\r\n}\r\n\r\nexport function drawKeyPoints(\r\n  keypoints,\r\n  minConfidence,\r\n  skeletonColor,\r\n  canvasContext,\r\n  scale = 1\r\n) {\r\n  keypoints.forEach(keypoint => {\r\n    if (keypoint.score >= minConfidence) {\r\n      const {x, y} = keypoint.position\r\n      canvasContext.beginPath()\r\n      canvasContext.arc(x * scale, y * scale, pointRadius, 0, 2 * Math.PI)\r\n      canvasContext.fillStyle = skeletonColor\r\n      canvasContext.fill()\r\n    }\r\n  })\r\n}\r\n\r\nfunction drawLine(startX, startY, endX, endY, canvasContext) {\r\n  canvasContext.moveTo(startX, startY)\r\n  canvasContext.lineTo(endX, endY)\r\n\r\n  var headlen = 10;\r\n  var dx = endX - startX;\r\n  var dy = endY - startY;\r\n  var angle = Math.atan2(dy, dx);\r\n  canvasContext.moveTo(endX, endY)\r\n  canvasContext.lineTo(endX - headlen * Math.cos(angle - Math.PI / 6), endY - headlen * Math.sin(angle - Math.PI / 6))\r\n\r\n  canvasContext.moveTo(endX, endY)\r\n  canvasContext.lineTo(endX - headlen * Math.cos(angle + Math.PI / 6), endY - headlen * Math.sin(angle + Math.PI / 6))\r\n}\r\n\r\nfunction drawSegment(\r\n  [firstX, firstY],\r\n  [nextX, nextY],\r\n  color,\r\n  lineWidth,\r\n  scale,\r\n  canvasContext\r\n) {\r\n  canvasContext.beginPath()\r\n\r\n  drawLine(firstX * scale, firstY * scale, nextX * scale, nextY * scale, canvasContext)\r\n\r\n  canvasContext.lineWidth = lineWidth\r\n  canvasContext.strokeStyle = color\r\n  canvasContext.stroke()\r\n}\r\n\r\nexport function drawSkeleton(\r\n  keypoints,\r\n  minConfidence,\r\n  color,\r\n  lineWidth,\r\n  canvasContext,\r\n  scale = 1\r\n) {\r\n  const adjacentKeyPoints = posenet.getAdjacentKeyPoints(\r\n    keypoints,\r\n    minConfidence\r\n  )\r\n\r\n  adjacentKeyPoints.forEach(keypoints => {\r\n    drawSegment(\r\n      toTuple(keypoints[0].position),\r\n      toTuple(keypoints[1].position),\r\n      color,\r\n      lineWidth,\r\n      scale,\r\n      canvasContext\r\n    )\r\n  })\r\n}\r\n\r\nfunction drawDegree(\r\n  [firstX, firstY],\r\n  [nextX, nextY],\r\n  color,\r\n  canvasContext\r\n) {\r\n\r\n  canvasContext.font = \"20px Arial\";\r\n  canvasContext.fillStyle = color;\r\n  canvasContext.textAlign = \"center\";\r\n\r\n  var skelectonDir = {};\r\n  skelectonDir.x = nextX - firstX;\r\n  skelectonDir.y = nextY - firstY;\r\n\r\n  var current_angle = Posenet_GetDegreeFormVec(skelectonDir);\r\n\r\n  var posX = (firstX + nextX) / 2;\r\n  var posY = (firstY + nextY) / 2;\r\n  canvasContext.fillText(\"(\" + current_angle + \")\", posX, posY);\r\n\r\n  // canvasContext.beginPath()\r\n  // canvasContext.moveTo(firstX * scale, firstY * scale)\r\n  // canvasContext.lineTo(nextX * scale, nextY * scale)\r\n  // canvasContext.lineWidth = lineWidth\r\n  // canvasContext.strokeStyle = color\r\n  // canvasContext.stroke()\r\n}\r\n\r\nexport function drawSkeletonDegree(\r\n  keypoints,\r\n  minConfidence,\r\n  color,\r\n  lineWidth,\r\n  canvasContext,\r\n  scale = 1\r\n) {\r\n  const adjacentKeyPoints = posenet.getAdjacentKeyPoints(\r\n    keypoints,\r\n    minConfidence\r\n  )\r\n\r\n  adjacentKeyPoints.forEach(keypoints => {\r\n    drawDegree(\r\n      toTuple(keypoints[0].position),\r\n      toTuple(keypoints[1].position),\r\n      color,\r\n      lineWidth,\r\n      scale,\r\n      canvasContext\r\n    )\r\n  })\r\n}\r\n","var _canvasLastCalledTime;\r\nvar _canvasFPS;\r\nvar _canvasFPSCount = 0;\r\nvar _canvasTextColor = 'yellow';\r\nvar _canvasTextSize = 32;\r\n\r\nexport function CanvasFPS_Update() {\r\n    if (!_canvasLastCalledTime) {\r\n        _canvasLastCalledTime = Date.now();\r\n        _canvasFPS = 0;\r\n        _canvasFPSCount = 0;\r\n        return;\r\n    }\r\n    var delta = (Date.now() - _canvasLastCalledTime) / 1000;\r\n    if (delta >= 1) {\r\n        _canvasLastCalledTime = Date.now();\r\n        _canvasFPS = _canvasFPSCount;\r\n        _canvasFPSCount = 0;\r\n    }\r\n    else {\r\n        _canvasFPSCount++;\r\n    }\r\n}\r\n\r\nexport function CanvasFPS_FontColor(rgb) {\r\n    _canvasTextColor = rgb;\r\n}\r\n\r\nexport function CanvasFPS_FontSize(size) {\r\n    _canvasTextSize = size;\r\n}\r\n\r\nexport function CanvasFPS_Render(canvasContext) {\r\n    canvasContext.fillStyle = _canvasTextColor;\r\n    canvasContext.font = _canvasTextSize + \"px Arial\";\r\n    canvasContext.fillText(_canvasFPS, 10, _canvasTextSize+10);\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport clsx from 'clsx';\r\n\r\nimport * as posenet from '@tensorflow-models/posenet'\r\nimport { drawKeyPoints, drawSkeleton, drawSkeletonDegree } from './PosenetUtils'\r\nimport { CanvasFPS_Update, CanvasFPS_Render } from './../utils/CanvasFPS'\r\nimport { SetPosenetPose, ClosePosenet } from '../../actions/posenet'\r\n\r\nconst _miniVideoAreaBase = {\r\n  zIndex: '0',\r\n  position: 'fixed',\r\n  right: '0%',\r\n  bottom: '0%',\r\n  width: '30%',\r\n}\r\nconst _miniVideoArea = {\r\n  height: '30%'\r\n}\r\nconst _miniVideoTextArea = {\r\n  height: '30%'\r\n}\r\n\r\nconst _fullVideoAreaBase = {\r\n  zIndex: '0',\r\n  position: 'fixed',\r\n  left: '0%',\r\n  top: '0%',\r\n  width: '100%'\r\n}\r\nconst _fullVideoArea = {\r\n  height: 'auto'\r\n}\r\nconst _fullVideoTextArea = {\r\n  height: '100%'\r\n}\r\n\r\nconst contentsTextBase = {\r\n  position: 'absolute',\r\n  zIndex: '1',\r\n  left: '0%',\r\n  top: '0%',\r\n  width: '100%',\r\n  height: '100%',\r\n  margin: '0 auto',\r\n  textShadow: '2px 2px 5px black',\r\n  color: 'white',\r\n}\r\nconst _contentsLoading = {\r\n  textAlign: 'left',\r\n  fontSize: '150%',\r\n  //backgroundColor: '#FF000088',\r\n}\r\n\r\nconst _miniContentsLoading = {\r\n  textAlign: 'center',\r\n  fontSize: '80%',\r\n  //backgroundColor: '#FF000088',\r\n}\r\n\r\nconst _contentsScaning = {\r\n  textAlign: 'right',\r\n  fontSize: '130%',\r\n  //backgroundColor: '#0000FF88',\r\n}\r\n\r\nconst _miniContentsScaning = {\r\n  textAlign: 'center',\r\n  fontSize: '80%',\r\n  //backgroundColor: '#0000FF88',\r\n}\r\n\r\n// 최적화로 이미 종료 되었지만 이미지 Pose 체크를 하는 경우를 위해서 flag 추가\r\nvar _distroyComponent = false;\r\nclass PoseNetCamera extends Component {\r\n  static defaultProps = {\r\n    flipHorizontal: true,\r\n    algorithm: 'single-pose',\r\n    showMiniVideo: false,\r\n    showVideo: true,\r\n    showDebugVideo: false,\r\n    showSkeleton: false,\r\n    showPoints: false,\r\n    showSkeletonDegree: false,\r\n    minPoseConfidence: 0.7,\r\n    minPartConfidence: 0.5,\r\n    maxPoseDetections: 2,\r\n    nmsRadius: 20,\r\n    outputStride: 16,\r\n    imageScaleFactor: 0.5,\r\n    skeletonColor: '#ffadea',\r\n    skeletonDegreeColor: '#ff0000',\r\n    skeletonLineWidth: 6,\r\n    loadingText: 'Loading...please be patient...'\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props, PoseNetCamera.defaultProps);\r\n    this.stopCamera = this.stopCamera.bind(this);\r\n    console.log('PoseNetCamera init');\r\n  }\r\n\r\n  getCanvas = elem => {\r\n    this.canvas = elem\r\n  }\r\n\r\n  getVideo = elem => {\r\n    this.video = elem;\r\n  }\r\n\r\n  async componentDidMount() {\r\n    _distroyComponent = false;\r\n    try {\r\n      await this.setupCamera()\r\n    } catch (error) {\r\n      throw new Error(\r\n        'This browser does not support video capture, or this device does not have a camera'\r\n      )\r\n    }\r\n\r\n    try {\r\n      this.posenet = await posenet.load()\r\n    } catch (error) {\r\n      throw new Error('PoseNetCamera failed to load')\r\n    } finally {\r\n      setTimeout(() => {\r\n        this.setState({ loading: false })\r\n      }, 200)\r\n    }\r\n    this.detectPose();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    _distroyComponent = true;\r\n    console.log('PoseNetCamera componentWillUnmount');\r\n    this.stopCamera();\r\n  }\r\n\r\n  async setupCamera() {\r\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n      throw new Error(\r\n        'Browser API navigator.mediaDevices.getUserMedia not available'\r\n      )\r\n    }\r\n    // const {showVideo } = this.props\r\n    const video = this.video;\r\n    // if (false == showVideo) {\r\n    //   video.style.display = \"none\";\r\n    // }\r\n\r\n    video.style.display = \"none\";\r\n    video.style.transform = 'rotatey(180deg)';\r\n\r\n    var screenWidth = window.innerWidth;\r\n    var screenHeight = window.innerHeight;\r\n\r\n    const stream = await navigator.mediaDevices.getUserMedia({\r\n      audio: false,\r\n      video: {\r\n        facingMode: 'user',\r\n        width: screenWidth,\r\n        height: screenHeight\r\n      }\r\n    })\r\n\r\n    video.srcObject = stream;\r\n    return new Promise(resolve => {\r\n      video.onloadedmetadata = () => {\r\n        video.play()\r\n        resolve(video)\r\n      }\r\n    })\r\n  }\r\n\r\n  stopCamera() {\r\n    console.log('stopCamera call');\r\n    const video = this.video;\r\n    //console.log(video);\r\n    if (undefined == video) {\r\n      return;\r\n    }\r\n    video.pause();\r\n    video.src = \"\";\r\n    if (undefined != video.srcObject) {\r\n      //video.srcObject.stop();\r\n      video.srcObject.getTracks()[0].stop();\r\n      video.srcObject = undefined;\r\n    }\r\n    console.log(\"video off\");\r\n  }\r\n\r\n  detectPose() {\r\n    const canvas = this.canvas\r\n    if (undefined == canvas) {\r\n      return;\r\n    }\r\n    const canvasContext = canvas.getContext('2d')\r\n    if (undefined == canvasContext) {\r\n      return;\r\n    }\r\n\r\n    //const { showVideo } = this.props;\r\n    const video = this.video;\r\n    //if (false == showVideo) {\r\n      video.style.display = \"none\";\r\n    // }\r\n    // else {\r\n    //   video.style.display = \"block\";\r\n    // }\r\n\r\n    this.poseDetectionFrame(canvasContext)\r\n  }\r\n\r\n  poseDetectionFrame(canvasContext) {\r\n    const {\r\n      algorithm,\r\n      imageScaleFactor,\r\n      flipHorizontal,\r\n      outputStride,\r\n      minPoseConfidence,\r\n      minPartConfidence,\r\n      maxPoseDetections,\r\n      nmsRadius,\r\n      showDebugVideo,\r\n      showPoints,\r\n      showSkeleton,\r\n      showSkeletonDegree,\r\n      skeletonColor,\r\n      skeletonDegreeColor,\r\n      skeletonLineWidth\r\n    } = this.props\r\n\r\n    const posenetModel = this.posenet;\r\n    const video = this.video;\r\n    var startTime = new Date().getTime();\r\n    \r\n    const findPoseDetectionFrame = async () => {\r\n\r\n      if (_distroyComponent == true) {\r\n        return;\r\n      }\r\n\r\n      var currentTime = new Date().getTime();\r\n      var diffTime = currentTime - startTime;\r\n      var poseUpdateFlag = diffTime > 1000;\r\n      if (true == poseUpdateFlag) {\r\n          startTime = currentTime;\r\n      }\r\n\r\n      try {\r\n        let poses = []\r\n        if (true == poseUpdateFlag) {\r\n          switch (algorithm) {\r\n            case 'multi-pose': {\r\n              poses = await posenetModel.estimateMultiplePoses(\r\n                video,\r\n                imageScaleFactor,\r\n                flipHorizontal,\r\n                outputStride,\r\n                maxPoseDetections,\r\n                minPartConfidence,\r\n                nmsRadius\r\n              )\r\n              break\r\n            }\r\n            case 'single-pose': {\r\n              const pose = await posenetModel.estimateSinglePose(\r\n                video,\r\n                imageScaleFactor,\r\n                flipHorizontal,\r\n                outputStride\r\n              )\r\n              //SetPoseData(pose);\r\n              this.props.onPosenetPose(pose);\r\n              poses.push(pose)\r\n              break\r\n            }\r\n          }\r\n        }\r\n\r\n        const canvas = this.canvas;\r\n        if (undefined != canvas) {\r\n          canvasContext.clearRect(0, 0, canvas.width, canvas.height)\r\n\r\n          canvasContext.save();\r\n          canvasContext.scale(-1, 1)\r\n          canvasContext.translate(-canvas.width, 0)\r\n          canvasContext.drawImage(video, video.left, video.top, video.left + canvas.width / 2, video.top + canvas.height)\r\n          canvasContext.restore();\r\n\r\n          if (true == showDebugVideo) {\r\n            CanvasFPS_Update();\r\n            canvasContext.save();\r\n            poses.forEach(({ score, keypoints }) => {\r\n              if (score >= minPoseConfidence) {\r\n                if (showPoints) {\r\n                  drawKeyPoints(\r\n                    keypoints,\r\n                    minPartConfidence,\r\n                    skeletonColor,\r\n                    canvasContext\r\n                  )\r\n                }\r\n\r\n                if (showSkeleton) {\r\n                  drawSkeleton(\r\n                    keypoints,\r\n                    minPartConfidence,\r\n                    skeletonColor,\r\n                    skeletonLineWidth,\r\n                    canvasContext\r\n                  )\r\n                }\r\n\r\n                if (showSkeletonDegree) {\r\n                  drawSkeletonDegree(\r\n                    keypoints,\r\n                    minPartConfidence,\r\n                    skeletonDegreeColor,\r\n                    canvasContext\r\n                  )\r\n                }\r\n              }\r\n            })\r\n            canvasContext.restore();\r\n            CanvasFPS_Render(canvasContext);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log('posenet detection error');\r\n        // throw new Error(\r\n        //   'This browser does not support video capture, or this device does not have a camera'\r\n        // )\r\n      }\r\n\r\n      // setTimeout(function () {\r\n      //   requestAnimationFrame(findPoseDetectionFrame);\r\n      // }, 1000);\r\n\r\n      requestAnimationFrame(findPoseDetectionFrame)\r\n    }\r\n    findPoseDetectionFrame()\r\n  }\r\n\r\n  getCameraScan = () => {\r\n    var textStyle;\r\n    if (true == this.props.showMiniVideo) {\r\n      textStyle = Object.assign({}, contentsTextBase, _miniContentsLoading);\r\n    } else {\r\n      textStyle = Object.assign({}, contentsTextBase, _contentsLoading);\r\n    }\r\n\r\n    if (undefined != this.props._posenetPose) {\r\n      return (undefined);\r\n    }\r\n    return (\r\n      <span style={textStyle}>카메라 인식 중...</span>\r\n    )\r\n  }\r\n\r\n  getCameraInvalid = () => {\r\n    if (undefined == this.props._posenetPose) {\r\n      return undefined;\r\n    }\r\n    if (this.props.minPoseConfidence < this.props._posenetPose.score) {\r\n      return undefined;\r\n    }\r\n\r\n    var textStyle;\r\n    if (true == this.props.showMiniVideo) {\r\n      textStyle = Object.assign({}, contentsTextBase, _miniContentsScaning);\r\n    } else {\r\n      textStyle = Object.assign({}, contentsTextBase, _contentsScaning);\r\n    }\r\n\r\n    return (\r\n      <span style={textStyle}>화면 안으로 들어오세요.</span>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    var videoStyle;\r\n    var videoTextStyle;\r\n    if (true == this.props.showMiniVideo) {\r\n      videoStyle = Object.assign({}, _miniVideoAreaBase, _miniVideoArea);\r\n      videoTextStyle = Object.assign({}, _miniVideoAreaBase, _miniVideoTextArea);\r\n    } else {\r\n      videoStyle = Object.assign({}, _fullVideoAreaBase, _fullVideoArea);\r\n      videoTextStyle = Object.assign({}, _fullVideoAreaBase, _fullVideoTextArea);\r\n    }\r\n\r\n    return (\r\n      <div >\r\n        <video id='videoCamera' style={videoStyle} src=\"\" playsInline ref={this.getVideo} />\r\n        <div style={videoTextStyle}>\r\n          {/* {this.getCameraScan()} */}\r\n          {this.getCameraInvalid()}\r\n        </div>\r\n        <canvas style={{ position: 'fixed', left: '0%', top: '0%', zIndex: '1' }} ref={this.getCanvas} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    _currentScene: state.scene._currentScene,\r\n    _closePosenet: state.posenet._closePosenet,\r\n    _posenetPose: state.posenet._posenetPose,\r\n  };\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onPosenetPose: (poseData) => dispatch(SetPosenetPose(poseData)),\r\n    onClosePosenet: (state) => dispatch(ClosePosenet(state))\r\n  }\r\n}\r\n\r\nPoseNetCamera = connect(mapStateToProps, mapDispatchToProps)(PoseNetCamera);\r\n\r\nexport default PoseNetCamera;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setScene } from '../../actions/scene';\r\n\r\nconst contentsLoading = {\r\n    position: 'absolute',\r\n    zIndex: '1',\r\n    left: '0%',\r\n    top: '0%',\r\n    width: '100%',\r\n    height: '100%',\r\n    textAlign : 'left',\r\n    margin: '0 auto',\r\n    fontSize: '150%',\r\n    textShadow: '2px 2px 5px black',\r\n    color: 'white',\r\n    //backgroundColor: '#FF000088',\r\n}\r\n\r\nconst contentsScaning = {\r\n    position: 'absolute',\r\n    zIndex: '1',\r\n    left: '0%',\r\n    top: '0%',\r\n    width: '100%',\r\n    height: '100%',\r\n    textAlign : 'right',\r\n    margin: '0 auto',\r\n    fontSize: '130%',\r\n    textShadow: '2px 2px 5px black',\r\n    color: 'white',\r\n    //backgroundColor: '#0000FF88',\r\n}\r\n\r\nconst root = {\r\n    position: 'fixed',\r\n    zIndex: '1',\r\n    left: '0%',\r\n    top: '0%',\r\n    width: '100%',\r\n    height: '100%',\r\n    //backgroundColor: '#0000FF88',\r\n}\r\n\r\nexport const PosenetPoseScan = ({ setScene, _posenetPose, _countdown, minPoseConfidence }) => {\r\n    useEffect(() => {\r\n        //console.log('game countdowntime:' + _countdown);\r\n    });\r\n    const getCameraScan = () => {\r\n        return (\r\n            <span style={contentsLoading}>카메라 인식 중...</span>\r\n        )\r\n    }\r\n    const getCameraInvalid = () => {\r\n        if (undefined == _posenetPose) {\r\n            return undefined;\r\n        }\r\n        if (minPoseConfidence < _posenetPose.score) {\r\n            return undefined;\r\n        }\r\n        return (\r\n            <span style={contentsScaning}>화면 안으로 들어오세요.</span>\r\n        )\r\n    }\r\n    return (\r\n    <div style={root}>\r\n        {getCameraScan()}\r\n        {getCameraInvalid()}\r\n    </div>);\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _posenetPose: state.posenet._posenetPose,\r\n    _countdown: state.countdown._countdown\r\n});\r\nconst mapDispatchToProps = { setScene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PosenetPoseScan);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CameraCapture from './CameraCapture';\r\nimport PoseNetCamera from '../components/posenet/PosenetCamera'\r\nimport PosenetPoseScan from '../components/PoseNetGame/PosenetPoseScan'\r\n\r\nimport { SetPosenetPose } from '../actions/posenet';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SetSubScene } from '../actions/scene';\r\nimport { InvalidPosenet, ValidPosenet, ClosePosenet } from '../actions/posenet';\r\n\r\nimport { VideoRecord_Start, VideoRecord_Stop, VideoRecordExist} from './../components/utils/VideoRecord'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxHeight: '100%',\r\n    },\r\n    contentsTitle: {\r\n        position: 'absolute',\r\n        left: '5%',\r\n        top: '5%',\r\n        fontSize: '250%',\r\n        textShadow: '2px 2px 5px black',\r\n        color: 'red'\r\n    },\r\n    contentsResult: {\r\n        position: 'fixed',\r\n        left: '0%',\r\n        top: '30%',\r\n        width: '100%',\r\n        height: 'auto',\r\n        fontSize: '250%',\r\n        textShadow: '2px 2px 5px black',\r\n        textAlign: 'center',\r\n        color: 'white'\r\n    }\r\n}));\r\n\r\nvar _poseValidPercent = 50;\r\nvar _minPoseConfidence = 0.3;\r\nvar _poseDetectionInvalidCount = 0;\r\nvar _poseDetectionValidCount = 0;\r\nvar _step = undefined;\r\nvar _title = undefined;\r\nvar _desc = undefined;\r\nexport const PoseCameraRecord = ({ SetSubScene, _currentSubScene, SetPosenetPose,\r\n    InvalidPosenet, ValidPosenet, _posenetPose, step, title, desc, _recordState }) => {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        var id = undefined;\r\n        id = setInterval(tick, 1000);\r\n        return () => {\r\n            if (undefined != id) {\r\n                clearInterval(id);\r\n            }\r\n        }\r\n    })\r\n\r\n    function tick() {\r\n        var pose = {};\r\n        pose.score = 1;\r\n        SetPosenetPose(pose);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (undefined != _posenetPose) {\r\n            //console.log('pose score valid count:' + _poseDetectionValidCount + \", invalid count:\" + _poseDetectionInvalidCount);\r\n            if (_minPoseConfidence < _posenetPose.score) {\r\n                _poseDetectionValidCount++;\r\n            }\r\n            else {\r\n                _poseDetectionInvalidCount++;\r\n            }\r\n            // 카메라 로딩이 느려 주기적인 체크 필요\r\n            console.log('PoseCameraRecord _recordState:' + _recordState);\r\n            if (_recordState == true) {\r\n                startVideoRecord();\r\n            } else {\r\n                stopVideoRecord();\r\n            }\r\n        }\r\n    }, [_posenetPose]);\r\n\r\n    useEffect(() => {\r\n        console.log('PoseCameraRecord start:' + step);\r\n        _poseDetectionInvalidCount = 0;\r\n        _poseDetectionValidCount = 0;\r\n        _step = step;\r\n        _title = title;\r\n        _desc = desc;\r\n        return () => {\r\n            stopVideoRecord();\r\n        }\r\n    }, []);\r\n\r\n    const startVideoRecord = () => {\r\n        // var videoElement = document.getElementById('videoCamera');\r\n        // if (undefined != videoElement) {\r\n        //     VideoRecord_Start(videoElement.srcObject);\r\n        // }\r\n        VideoRecord_Start(step);\r\n    }\r\n\r\n    const stopVideoRecord = () => {\r\n        console.log(' stopVideoRecord call');\r\n        var currentPercent = 0;\r\n        var totalCount = _poseDetectionValidCount + _poseDetectionInvalidCount;\r\n        if (totalCount != 0) {\r\n            currentPercent = _poseDetectionValidCount * 100 / (_poseDetectionValidCount + _poseDetectionInvalidCount);\r\n        }\r\n        console.log('percent:' + currentPercent + ', total:' + totalCount);\r\n        var validState = (_poseValidPercent < currentPercent);\r\n        // if (false == validState) {\r\n        //     InvalidPosenet(step);\r\n        // } else {\r\n        //     ValidPosenet(step);\r\n        // }\r\n        VideoRecord_Stop(validState, _step, _title, _desc);\r\n    }\r\n\r\n    const getResultText = () => {\r\n        if (_recordState == false) {\r\n            if (VideoRecordExist(_step) == true) {\r\n                return (\r\n                    <span className={classes.contentsResult}>기록 성공</span>\r\n                );\r\n            } else {\r\n                return (\r\n                    <span className={classes.contentsResult}>기록 실패</span>\r\n                );\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    return (\r\n        <div key=\"PoseNetMiniCamera\">\r\n            {/* <CameraCapture showMiniVideo={true} minPoseConfidence='0.1' /> */}\r\n            {/* <PoseNetCamera showMiniVideo={true} minPoseConfidence='0.1' /> */}\r\n            {getResultText()}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _posenetPose: state.posenet._posenetPose,\r\n    _currentSubScene: state.scene._currentSubScene,\r\n    _recordState: state.posenet._recordState\r\n});\r\nconst mapDispatchToProps = { SetSubScene, SetPosenetPose, InvalidPosenet, ValidPosenet, ClosePosenet };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PoseCameraRecord);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setScene } from '../actions/scene';\r\nimport { InvalidPosenetClear, SetCameraRecord } from '../actions/posenet';\r\n\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nimport ResultFailure from '../components/ResultFailure';\r\nimport ResultSuccess from '../components/ResultSuccess';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport VideoPlay from '../components/videoPlay'\r\nimport PoseCameraRecord from '../components/PoseCameraRecord'\r\n\r\nimport { _contents } from './ContentsData'\r\nimport { VideoRecordExist, GetVideoList, SetMediaPlay } from './../components/utils/VideoRecord'\r\nimport { playEnableClickSound } from './../components/utils/SoundPlay'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxHeight: '100%',\r\n    backgroundColor: 'black',\r\n  },\r\n  videoContainer: {\r\n    width: '100%',\r\n    position: 'relative',\r\n  },\r\n  progressContainer: {\r\n    position: 'fixed',\r\n    zIndex: '1',\r\n    left: '2%',\r\n    top: '20%',\r\n    width: '15%',\r\n    height: '15%',\r\n    margin: '0'\r\n},\r\n}));\r\n\r\n// TV 연결 기능 아이콘 추가\r\n// 로컬에 영상 저장\r\n// 레디, 셋, 고 영상에 넣기\r\nvar _debugStartStep = 1;\r\nvar _lastCameraRecordStep = 0;\r\nvar _recordResultDelayDuration = 2000;\r\nexport const ContentsScene = ({ _posenetPose, setScene, InvalidPosenetClear, SetCameraRecord, _currentTime, _maxTime }) => {\r\n  const classes = useStyles();\r\n  const [_step, setStep] = React.useState(_debugStartStep);\r\n\r\n  const getStepContents = () => {\r\n    let contents = [];\r\n    var contentsData = getStepData(_step);\r\n    //console.log(contentsData.title);\r\n    if (undefined != contentsData) {\r\n      var url = contentsData.url;\r\n      if (window.HybridApp == undefined) {\r\n        url = contentsData.web_url;\r\n      }\r\n      \r\n      //SetMediaPlay(contentsData.web_url);\r\n      contents.push(\r\n        createVideoElement(contentsData.title, url, contentsData.enableContentsPause)\r\n      );\r\n      \r\n      // 마지막 데이터일 경우 결과화면\r\n      var nextContentsData = getStepData(_step+1);\r\n      if (undefined == nextContentsData) {\r\n        contents.push(getResultScene());\r\n      }\r\n\r\n      if (contentsData.enablePlayerView == true) {\r\n        // 카메라 레코딩을 한번만 호출하기 위해서\r\n        if (_lastCameraRecordStep != _step) {\r\n          SetCameraRecord(true);\r\n          _lastCameraRecordStep = _step;\r\n        }\r\n        contents.push(getPoseNetMiniCamera());\r\n      }\r\n    }\r\n    return contents;\r\n  }\r\n\r\n  const getStepData = (step) => {\r\n    return _contents['step' + step];\r\n  }\r\n\r\n  const createVideoElement = (title, url, enableContentsPause) => {\r\n    var poster = url.replace(\".mp4\", \".jpg\");\r\n    poster = url.replace(\".webm\", \".jpg\");\r\n    return (<VideoPlay key={url} title={title} enableContentsSkip={true} enableContentsPause={enableContentsPause} enableCountDown={true}\r\n    onVideoPlayComplete={onVideoEnded} onVideoSkip={onVideoSkip} videoUrl={url} autoPlay={true} enableTitleText={true} enableFullScreen={true} enableScreenMirror={enableContentsPause} poster={poster} />);\r\n  }\r\n\r\n  const onNextStep = () => {\r\n    // 마지막 데이터일 경우 결과화면\r\n    var nextStep = _step + 1;\r\n    var nextContentsData = getStepData(nextStep);\r\n    if (undefined != nextContentsData) {\r\n      changeSceneType(nextStep);\r\n    }\r\n  }\r\n\r\n  const onVideoEnded = () => {\r\n    console.log('onVideoEnded call');\r\n    var contentsData = getStepData(_step);\r\n    if (undefined == contentsData) {\r\n      return;\r\n    }\r\n\r\n    SetCameraRecord(false);\r\n    // 결과 텍스트를 보여주는 2초\r\n    if (contentsData.enablePlayerView) {\r\n      setTimeout(function () {\r\n        onNextStep();\r\n      }, _recordResultDelayDuration);\r\n    }else {\r\n      onNextStep();\r\n    }\r\n  }\r\n\r\n  const onVideoSkip = () => {\r\n    console.log('onVideoSkip call');\r\n    var contentsData = getStepData(_step);\r\n    if (undefined == contentsData) {\r\n      return;\r\n    }     \r\n    onNextStep();\r\n  }\r\n\r\n  function changeSceneType(change) {\r\n    var preStep = _step;\r\n    var nextStep = change;\r\n\r\n    // 휴식 step는 제외\r\n    // 이미 성공한 포즈일 경우 패스\r\n    if (VideoRecordExist(nextStep + 1) == true) {\r\n      changeSceneType(nextStep + 2);\r\n      return;\r\n    }\r\n    setStep(nextStep);\r\n    console.log('change scene type:' + preStep + '=>' + nextStep);\r\n  }\r\n\r\n  const getPoseNetMiniCamera = () => {\r\n    var titleText = undefined;\r\n    var desc = undefined;\r\n    var contentsData = getStepData(_step);\r\n    if (undefined != contentsData) {\r\n      titleText = contentsData.title;\r\n      desc = contentsData.desc;\r\n    }\r\n    return (\r\n      <div key=\"PoseNetMiniCamera\">\r\n        <PoseCameraRecord step={_step} title={titleText} desc={desc}/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const onOKClick = () => {\r\n    console.log('onOKClick');\r\n    playEnableClickSound();\r\n    //setFullScreenResultScene(true);\r\n    setStep(_debugStartStep);\r\n    //setScene('Result');\r\n    setScene('IntroScene');\r\n  }\r\n\r\n  const onRetryClick = () => {\r\n    console.log('onRetryClick');\r\n    playEnableClickSound();\r\n    _lastCameraRecordStep = 0;\r\n    changeSceneType(_debugStartStep);\r\n  }\r\n\r\n  const getResultScene = () => {\r\n    var failList = GetVideoList(_contents, false);\r\n    var failureCount = failList.length;\r\n    if (failureCount == 0) {\r\n      return (\r\n        <div key=\"ResultSuccess\">\r\n          <ResultSuccess onOKClick={onOKClick} />\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <div key=\"ResultFailure\">\r\n          <ResultFailure failureCount={failureCount} onOKClick={onOKClick} onRetryClick={onRetryClick} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  const getTimer = () => {\r\n    var contentsData = getStepData(_step);\r\n    if (undefined == contentsData) {\r\n      return;\r\n    }\r\n    if (contentsData.enablePlayerView == false) {\r\n      return;\r\n    }\r\n\r\n    if (_currentTime == undefined || _maxTime == undefined) {\r\n      return;\r\n    }\r\n    if (isNaN(_currentTime) == true || isNaN(_maxTime) == true) {\r\n      return;\r\n    }\r\n    //console.log('==========',_maxTime,_currentTime)\r\n\r\n    var leftTime = parseInt(_maxTime - _currentTime);\r\n\r\n    if (leftTime <= 0) {\r\n      return;\r\n    }\r\n    //console.log(\"======leftTime:\" + leftTime)\r\n    return (\r\n      <div className={classes.progressContainer}>\r\n        <CircularProgressbar value={leftTime} maxValue={_maxTime} text={`${leftTime}`}\r\n          styles={buildStyles({\r\n            textColor: \"#ffffff\",\r\n            pathColor: \"#ffffff\",\r\n            trailColor: \"#ffffff11\",\r\n            textSize: '40px'\r\n          })} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.videoContainer}>\r\n        {getStepContents()}\r\n      </div>\r\n      {getTimer()}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  _posenetPose: state.posenet._posenetPose,\r\n  _maxTime: state.countdown._maxTime,\r\n  _currentTime: state.countdown._currentTime\r\n});\r\nconst mapDispatchToProps = { InvalidPosenetClear, SetCameraRecord, setScene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentsScene);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { setScene } from '../actions/scene';\r\n\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nimport PoseNetCamera from '../components/posenet/PosenetCamera'\r\nimport CameraCapture from './../components/CameraCapture'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: 'absolute',\r\n        left: '0%',\r\n        top: '0%',\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    videoContainer: {\r\n        position: 'absolute',\r\n        height: '100%',\r\n        width: '100%',\r\n        left: '0%',\r\n        top: '0%'\r\n    },\r\n    contentsLoading: {\r\n        position: 'absolute',\r\n        zIndex: '1',\r\n        left: '0%',\r\n        top: '0%',\r\n        width: '100%',\r\n        height: '100%',\r\n        textAlign : 'left',\r\n        margin: '0 auto',\r\n        fontSize: '150%',\r\n        textShadow: '2px 2px 5px black',\r\n        color: 'white',\r\n        //backgroundColor: '#FF000088',\r\n    },\r\n    progressContainer: {\r\n        position: 'absolute',\r\n        zIndex: '1',\r\n        left: '0%',\r\n        top: '0%',\r\n        width: '20%',\r\n        height: '20%',\r\n        marginLeft: '5%',\r\n        marginTop: '10%' \r\n    },\r\n}));\r\n\r\n// 풀화면으로 화면안에 들어왔는지 인식\r\nvar _minPoseConfidence = 0.3;\r\nvar _maxScaneCount = 4;\r\nvar _step = 0;\r\nexport const VideoBodyScanScene = ({ _posenetPose, setScene }) => {\r\n    const classes = useStyles();\r\n    //const [_step, setStep] = React.useState(0);\r\n\r\n    useEffect(() => {\r\n        console.log('_posenetPose effect call:' + _step);\r\n        if (undefined != _posenetPose) {\r\n            if (_step >= _maxScaneCount) {\r\n                setScene('Play');\r\n            } else {\r\n                if (_minPoseConfidence <= _posenetPose.score) {\r\n                    addScanProgress();\r\n                } else {\r\n                    resetScanProgress();\r\n                }\r\n            }\r\n        }\r\n    }, [_posenetPose]);\r\n    const getPoseNetCamera = () => {\r\n        return (\r\n            <div key=\"PoseNetScanCamera\">\r\n                <CameraCapture showMiniVideo={false} showDebugVideo={true} minPoseConfidence={_minPoseConfidence} />\r\n                {/* <PoseNetCamera showMiniVideo={false} minPoseConfidence={_minPoseConfidence} /> */}\r\n            </div>\r\n        );\r\n    }\r\n    const addScanProgress = () => {\r\n        //setStep(_step+1);\r\n        _step++;\r\n    }\r\n    const resetScanProgress = () => {\r\n        //setStep(0);\r\n        _step = 0;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.videoContainer}>\r\n                <div className={classes.progressContainer}>\r\n                    <CircularProgressbar value={_step} maxValue={_maxScaneCount} text={`${_step * (100 / 4)}%`} \r\n                    styles={buildStyles({\r\n                        textColor: \"#ffffff\",\r\n                        pathColor: \"#ffffff\",\r\n                        trailColor: \"#ffffff11\",\r\n                        textSize: '40px'\r\n                    })} />\r\n                </div>\r\n                <span className={classes.contentsLoading}>카메라 인식 중...</span>\r\n                {getPoseNetCamera()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _posenetPose: state.posenet._posenetPose\r\n});\r\nconst mapDispatchToProps = { setScene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoBodyScanScene);\r\n\r\n","\r\nexport var _contents = {\r\n    \"step3\" : {\r\n      'title' : '마스터 피드백',\r\n      'desc': '마스터 피드백',\r\n      'url' : 'file:///android_asset/video/feedback-result.webm',\r\n      'web_url' : 'https://goli8111.github.io/home-training/video/feedback-result.mp4',\r\n      'comments' : ['0:7', '할로우바디 킥','근지구력 향상을 위해, 멈추지 말고 끊임없이 움직이셔야 합니다.', '0:17', '스파이더 플랭크','운동 속도를 낮추셔도 되니, 무릎을 팔꿈치 높이까지 들어 올리시기 바랍니다.'],\r\n    },\r\n  }","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SetSubScene } from '../actions/scene';\r\n\r\nimport { _contents } from './ContentsResultData'\r\nimport './FeedbackScene.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxHeight: '100%',\r\n    },\r\n    videoRoot: {\r\n        position: 'relative',\r\n        top: '5%',\r\n        height: '95%',\r\n        width: '100%',\r\n    },\r\n    videoContainer: {\r\n        position: 'relative',\r\n        width: '100%',\r\n        margin: '5px'\r\n    },\r\n    video: {\r\n        position: 'relative',\r\n        width: '100%',\r\n        margin: '0',\r\n    },\r\n    divLine: {\r\n        border: \"1px solid\",\r\n        color: \"#DDDDDD\",\r\n        width: \"95%\"\r\n    }\r\n}));\r\n\r\nvar _contentsTitle = '마스터 코멘트 (클리어)';\r\n\r\nexport const FeedbackScene = ({resultState}) => {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n    });\r\n\r\n    const getConmentsText = (comments) => {\r\n        if (undefined == comments) {\r\n            return undefined;\r\n        }\r\n\r\n        let contents = [];\r\n        var count = parseInt(comments.length / 3);\r\n        for (var i = 0; i < count; i++) {\r\n            if (i != 0) {\r\n                contents.push(<br key={comments} />);\r\n            }\r\n            var targetIndex = i * 3;\r\n            var time = comments[targetIndex];\r\n            var title = comments[targetIndex + 1];\r\n            var comment = comments[targetIndex + 2];\r\n            contents.push(<span key={time + comment + '0'} className='contentsTitle_success_time'>{time} </span>);\r\n            contents.push(<span key={time + comment + '1'} className='contentsTitle_success_text'>{title}</span>);\r\n            contents.push(<div key={time + comment + '2'} className='contentsTitle_success_sub_text'>&nbsp;&nbsp;&nbsp;&nbsp;{comment}</div>);\r\n        }\r\n        return contents;\r\n    }\r\n\r\n    const getRecordSuccuss = (desc, url, comments) => {\r\n        var poster = url.replace(\".mp4\", \".jpg\");\r\n        poster = url.replace(\".webm\", \".jpg\");\r\n\r\n        return (\r\n            <div key={desc}>\r\n                <div className='contentsTitle_left'>\r\n                    {/* <span className='contentsTitle_success_text'>{desc}\r\n                    </span> */}\r\n                </div>\r\n                <video className={classes.video} autoPlay={false} controls={true} poster={poster}>\r\n                    <source src={url} type=\"video/mp4\" id=\"SelectSoundOutput\" />\r\n                    Your browser does not support the video tag.\r\n                </video>\r\n                <div className='contentsTitle_left'>\r\n                    {getConmentsText(comments)}\r\n                    {/* <span className='contentsTitle_success_time'>3:15\r\n                    </span>\r\n                \r\n                    <span className='contentsTitle_success_text'>asdfasdfasdf\r\n                    </span> */}\r\n                </div>\r\n                <hr className={classes.divLine} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const getResultSummery = () => {\r\n        if (resultState) {\r\n            return (\r\n                <div>\r\n                    <ul>\r\n                        <li>약간의 동작 교정이 필요하지만, 일단 퀘스트 클리어! 수고 많으셨습니다.</li>\r\n                    </ul>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <ul>\r\n                        <li>아쉽습니다.</li>\r\n                        <li>코멘트를 읽어보시고 다시 도전하세요.</li>\r\n                    </ul>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const getVideoList = () => {\r\n        let contents = [];\r\n        Object.keys(_contents).forEach(function (k, v) {\r\n            contents.push(getRecordSuccuss(_contents[k].desc, _contents[k].url, _contents[k].comments));\r\n        });\r\n        return contents;\r\n    }\r\n\r\n    return (\r\n        <div key='FeedbackScene' className={classes.root}>\r\n            <div className='contentsSummery'>\r\n                <span className='contentsSummery_title'>{_contentsTitle}</span>\r\n                <div className='contentsSummery_result'>\r\n                    {getResultSummery()}\r\n                </div>\r\n                <hr className={classes.divLine} />\r\n                <div className={classes.videoRoot}>\r\n                    <div className={classes.videoContainer}>\r\n                        {getVideoList()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _currentSubScene: state.scene._currentSubScene\r\n});\r\nconst mapDispatchToProps = { SetSubScene};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedbackScene);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n// import './../Scene/Contents.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: \"fixed\",\r\n        backgroundColor: '#FFFFFF88',\r\n        width: '100%',\r\n        height: '65px',\r\n        bottom: '0px',\r\n        left: '0%'\r\n    }\r\n}));\r\n\r\nexport const RewardButton = ({ onClick, rewardCategory, rewardExp }) => {\r\n    const classes = useStyles(); \r\n\r\n    const getRewardIconPath = () => {\r\n        //console.log('=====rewardCategory:'+ rewardCategory);\r\n        switch (rewardCategory) {\r\n            case 'strength': return 'https://goli8111.github.io/level-up/images/card_assets/icon_power.png';\r\n            case 'dexterity': return 'https://goli8111.github.io/level-up/images/card_assets/icon_knowledge.png';\r\n            case 'intelligence': return 'https://goli8111.github.io/level-up/images/card_assets/icon_skill.png';\r\n            case 'wisdom': return 'https://goli8111.github.io/level-up/images/card_assets/icon_wisdom.png';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div onClick={onClick} className='quest_reward_main_button'>\r\n                <span>완료하고 보상 받기</span>\r\n            </div>\r\n            <div onClick={onClick} className='quest_reward_button'>\r\n                <img src={getRewardIconPath()}></img>\r\n                <span >{rewardExp}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RewardButton;\r\n","import React, {useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport const DefaultConfirmDialog = ({title, onOKClick, onCloseClick, openDialog}) => {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={onCloseClick}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\" style={{textAlign:'center'}}>{title}</DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={onCloseClick} color=\"primary\">\r\n            취소\r\n          </Button>\r\n          <Button onClick={onOKClick} color=\"primary\" autoFocus>\r\n            확인\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DefaultConfirmDialog;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setScene } from '../actions/scene';\r\nimport { InvalidPosenetClear } from '../actions/posenet';\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport VideoPlay from '../components/videoPlay'\r\nimport RewardButton from './../components/RewardButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport { _contents } from './ContentsData'\r\nimport { GetIframeReward, SetIframeFinish, SetIframeFinishAndLeave } from './../components/utils/SendMessage';\r\nimport './Contents.css';\r\nimport { GetVideoListFromFullList, GetVideoFullList} from './../components/utils/VideoRecord'\r\nimport { playEnableClickSound } from './../components/utils/SoundPlay';\r\nimport DefaultConfirmDialog from './../components/DefaultConfirmDialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: 'relative',\r\n        width: '100%',\r\n    },\r\n    videoContainer: {\r\n        width: '100%',\r\n        position: 'relative',\r\n    },\r\n    contentsTitle: {\r\n        color: 'black'\r\n    },\r\n    BottomBarBack: {\r\n        position: \"fixed\",\r\n        backgroundColor: '#FFFFFF88',\r\n        width: '100%',\r\n        height: '11%',\r\n        top: '89%',\r\n        left: '0%'\r\n    },\r\n    BottomBarGroup: {\r\n        position: \"fixed\",\r\n        bottom: \"70px\",\r\n        width: \"100%\"\r\n    },\r\n\r\n    BottomBarButton: {\r\n        position: 'fixed',\r\n        bottom: '5px',\r\n        left: '0px',\r\n        //right: '5px',\r\n        width: '99%',\r\n        height: '50px',\r\n        backgroundColor: 'orange',\r\n        boxShadow: '3px 3px 1px 1px rgba(0,0,0,0.75)',\r\n        color: 'white'\r\n    },\r\n    BottomBarButton_text_1: {\r\n        position: 'absolute',\r\n        left: \"0\",\r\n        top: \"5%\",\r\n        width: \"100%\",\r\n        fontSize: '20px',\r\n        fontWeight: 'bold'\r\n    },\r\n    BottomBarButton_text_2: {\r\n        position: 'absolute',\r\n        left: \"0\",\r\n        top: \"60%\",\r\n        width: \"100%\",\r\n        fontSize: '12px',\r\n    }\r\n}));\r\n\r\n\r\nexport const IntroScene = ({ _posenetPose, setScene, _refreshIntro, _currentScene,\r\n    rewardState, rewardCategory, rewardExp }) => {\r\n    const classes = useStyles();\r\n    const [_submitConfirm, setSubmitConfirm] = React.useState(false);\r\n    console.log('IntroScene start');\r\n\r\n    const createVideoElement = (title, desc, url) => {\r\n        //console.log('createVideoElement ' + title)\r\n        var poster = url.replace(\".mp4\", \".jpg\");\r\n        poster = url.replace(\".webm\", \".jpg\");\r\n        return (\r\n            <div key={title} >\r\n                <span className={classes.contentsTitle}>{desc}</span>\r\n                <div className={classes.videoContainer}>\r\n                    <VideoPlay key={url} title={title} enableContentsSkip={false} enableContentsPause={true} videoUrl={url} autoPlay={false} enableTitleText={false} enableFullScreen={false} enableScreenMirror={false} poster={poster} />\r\n                </div>\r\n            </div>);\r\n    }\r\n\r\n    const getContents = () => {\r\n        let contents = [];\r\n        Object.keys(_contents).forEach(function (k, v) {\r\n            if (_contents[k].type == 'set') {\r\n                var url = _contents[k].url;\r\n                if (window.HybridApp == undefined) {\r\n                  url = _contents[k].web_url;\r\n                }\r\n                contents.push(createVideoElement(_contents[k].title, _contents[k].desc, url));\r\n            }\r\n        });\r\n        return contents;\r\n    }\r\n\r\n    const onPlay = () => {\r\n        console.log('onPlay call');\r\n        playEnableClickSound();\r\n        setScene('Play');\r\n        //setScene('BodyScan');\r\n    }\r\n\r\n    const onGetRewardClick = () => {\r\n        console.log(\"onGetReward call\");\r\n        GetIframeReward();\r\n    }\r\n\r\n    const onFinishClick = () => {\r\n        console.log(\"onFinishClick call\");\r\n        playEnableClickSound();\r\n        //SetIframeFinish();\r\n        setScene(\"IntroStampScene\");\r\n    }\r\n\r\n    const onTempFinish = () => {\r\n        playEnableClickSound();\r\n        SetIframeFinishAndLeave();\r\n    }\r\n\r\n    const getMainButton = () => {\r\n        var videoFullList = GetVideoFullList(_contents);\r\n        var invalidCount = GetVideoListFromFullList(videoFullList, false);\r\n        var validCount = GetVideoListFromFullList(videoFullList, true);\r\n\r\n        if (true == rewardState) {\r\n            return (<RewardButton onClick={onGetRewardClick} rewardCategory={rewardCategory} rewardExp={rewardExp} ></RewardButton>);\r\n        } else {\r\n            if (_currentScene == 'IntroStampScene') {\r\n                return (\r\n                    <div onClick={onTempFinish} className='quest_main_disable_button'>\r\n                        <span>스탬프 대기 중</span>\r\n                    </div>\r\n                );\r\n            } else {\r\n                if (invalidCount == 0) {\r\n                    return (\r\n                        <div onClick={onSubmitConfirmOpen} className='quest_main_button'>\r\n                            <span>기록 제출하기</span>\r\n                        </div>\r\n                    );\r\n                } else if (validCount > 0) {\r\n                    return (\r\n                        <div onClick={onPlay} className='quest_main_button'>\r\n                            <span>재도전하기</span>\r\n                        </div>\r\n                    );\r\n                }\r\n                return (\r\n                    <div onClick={onPlay} className={classes.BottomBarButton}>\r\n                        <span className={classes.BottomBarButton_text_1}>영상 기록 시작</span>\r\n                        <span className={classes.BottomBarButton_text_2}>총 11 Set / 15 분</span>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    const onSubmitConfirmOpen = () => {\r\n        setSubmitConfirm(true);\r\n        playEnableClickSound();\r\n    }\r\n\r\n    const onSubmitConfirmClose = () => {\r\n        setSubmitConfirm(false);\r\n        playEnableClickSound();\r\n    }\r\n\r\n    const onSubmitConfirmOK = () => {\r\n        onFinishClick();\r\n        setSubmitConfirm(false);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className='contents_body'>\r\n                <div className='contents_intro'>\r\n                    <span className='.contents_intro_text'>어디스든 가볍게!</span>\r\n                    <span className='contents_intro_text_sub'><br />딱 16분 트레이닝으로 코어를 단단하게 조이고, 복근을 활성화 합니다.<br />따라오세요</span>\r\n                </div>\r\n                {getContents()}\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <div className={classes.BottomBarBack}></div>\r\n            </div>\r\n            <div className={classes.BottomBarGroup}>\r\n                {getMainButton()}\r\n            </div>\r\n            <DefaultConfirmDialog title='스탬프를 받을 때까지 다시 제출할 수 없습니다.' onOKClick={onSubmitConfirmOK} onCloseClick={onSubmitConfirmClose} openDialog={_submitConfirm} />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _posenetPose: state.posenet._posenetPose,\r\n    _refreshIntro: state.scene._refreshIntro,\r\n    _currentScene: state.scene._currentScene\r\n});\r\nconst mapDispatchToProps = { setScene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IntroScene);\r\n","import React, { useEffect } from 'react';\r\nimport queryString from 'query-string';\r\nimport { connect } from 'react-redux';\r\nimport { setScene } from '../actions/scene';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SetIframeFullScreen, SetLandscapeMode } from './../components/utils/SendMessage';\r\nimport FullScreenResult from './../components/FullScreenResult';\r\nimport ContentsScene from './ContentsScene';\r\nimport VideoBodyScanScene from './VideoBodyScanScene';\r\nimport FeedbackScene from './FeedbackScene';\r\nimport IntroScene from './IntroScene';\r\nimport { _contents } from './ContentsData'\r\nimport { GetVideoList } from './../components/utils/VideoRecord';\r\nimport './Contents.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        backgroundColor: '#FFFFFF',\r\n    },\r\n}));\r\n\r\nexport const IndexScene = ({ _currentScene, setScene, location }) => {\r\n    console.log('Index_scene component start');\r\n    const classes = useStyles();\r\n    const [_rewardState, setRewardState] = React.useState(false);\r\n    const [_rewardCategory, setRewardCategory] = React.useState('');\r\n    const [_rewardExp, setRewardExp] = React.useState(0);\r\n    const [_resultSceneVisible, setResultSceneVisible] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n        var _contentsSourceList = GetVideoList(_contents, true);\r\n        if (_contentsSourceList.length > 0) {\r\n            setResultSceneVisible(true);\r\n        }\r\n\r\n        // return () => {\r\n        //     SetIframeFullScreen(false);\r\n        //     SetLandscapeMode(false);\r\n        // }\r\n    });\r\n\r\n    useEffect(() => {\r\n        const query = queryString.parse(location.search);\r\n        console.log(query);\r\n        setRewardState((query.Complete == \"true\"));\r\n        setRewardCategory(query.reward_category);\r\n        setRewardExp(query.reward_exp);\r\n    }, [location]);\r\n\r\n    const getActiveScene = () => {\r\n        switch (_currentScene) {\r\n            case 'Result': {\r\n                SetIframeFullScreen(false);\r\n                SetLandscapeMode(false);\r\n                return <FullScreenResult />;\r\n            }\r\n            case 'Play': {\r\n                SetIframeFullScreen(true);\r\n                SetLandscapeMode(true);\r\n                return <ContentsScene />;\r\n            }\r\n            case 'BodyScan': {\r\n                SetIframeFullScreen(true);\r\n                SetLandscapeMode(true);\r\n                return <VideoBodyScanScene />;\r\n            }\r\n            case 'Feedback': {\r\n                SetIframeFullScreen(false);\r\n                SetLandscapeMode(false);\r\n                return <FeedbackScene resultState={false} />;\r\n            }\r\n            case 'IntroScene': {\r\n                SetIframeFullScreen(false);\r\n                SetLandscapeMode(false);\r\n                if (true == _rewardState) {\r\n                    return (\r\n                        <div className='index_contents_root'>\r\n                            <FeedbackScene resultState={true} />\r\n                            <FullScreenResult />\r\n                            <IntroScene rewardState={_rewardState} rewardCategory={_rewardCategory} rewardExp={_rewardExp} />\r\n                        </div>\r\n                    );\r\n                }\r\n                var _contentsSourceList = GetVideoList(_contents, true);\r\n                return (\r\n                    <div className='index_contents_root'>\r\n                        {_contentsSourceList.length > 0 ? <FullScreenResult /> : undefined}\r\n                        <IntroScene rewardState={_rewardState} rewardCategory={_rewardCategory} rewardExp={_rewardExp} />\r\n                    </div>\r\n                );\r\n            }\r\n            case 'IntroStampScene': {\r\n                SetIframeFullScreen(false);\r\n                SetLandscapeMode(false);\r\n                var _contentsSourceList = GetVideoList(_contents, true);\r\n                return (\r\n                    <div className='index_contents_root'>\r\n                        {_contentsSourceList.length > 0 ? <FullScreenResult /> : undefined}\r\n                        <IntroScene rewardState={false} />\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {getActiveScene()}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _currentScene: state.scene._currentScene\r\n});\r\nconst mapDispatchToProps = { setScene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexScene);","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport IndexScene from './scene/IndexScene'\r\nimport { Route, BrowserRouter } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <Route path=\"/\" component={IndexScene}/>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { SETSCENE, SETSUBSCENE, REFRESHINTRO } from '../actions/scene'\r\n\r\nconst initialState = {\r\n    _currentScene: 'IntroScene', // \r\n    _currentSubScene: '',\r\n    _refreshIntro: 0,\r\n};\r\n\r\nexport default function scene(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SETSCENE:\r\n            console.log('SETSCENE:' + action._changeScene);\r\n            return Object.assign({}, state, {\r\n                _currentScene: action._changeScene\r\n            });\r\n        case SETSUBSCENE:\r\n            console.log('SETSUBSCENE:' + action._changeSubScene);\r\n            return Object.assign({}, state, {\r\n                _currentSubScene: action._changeSubScene\r\n            });\r\n        case REFRESHINTRO:\r\n            console.log('REFRESHINTRO');\r\n            return Object.assign({}, state, {\r\n                _refreshIntro: state._refreshIntro+1\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n//export default scene;","import { SETPOSENETPOSE, CLOSEPOSENET, INVALIDPOSENET, INVALIDPOSENET_CLEAR, VALIDPOSENET, SETCAMERARECORD } from '../actions/posenet'\r\n\r\nconst initialState = {\r\n    _posenetPose: undefined,\r\n    _closePosenet: '',\r\n    _recordState: false\r\n};\r\n\r\nexport default function posenet(state = initialState, action) {\r\n    //console.log('reducer posenet action call:' + action.type);\r\n    switch(action.type) {\r\n        case SETPOSENETPOSE:\r\n            //console.log('SETPOSENETPOSE:');\r\n            //console.log(action._posenetPose);\r\n            return Object.assign({}, state, {\r\n                _posenetPose: action._posenetPose\r\n            });\r\n        case CLOSEPOSENET:\r\n            console.log('CLOSEPOSENET:' + action._closePosenet);\r\n            return Object.assign({}, state, {\r\n                _closePosenet: action._closePosenet\r\n            });\r\n        case SETCAMERARECORD:\r\n            console.log('SETCAMERARECORD:' + action._recordState);\r\n            return Object.assign({}, state, {\r\n                _recordState: action._recordState\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SETMAXTIME, SETCURRENTTIME } from '../actions/countdown'\r\n\r\nconst initialState = {\r\n    _currentTime: 0,\r\n    _maxTime: 0\r\n};\r\n\r\nexport default function countdown(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SETMAXTIME:\r\n            //console.log('SETMAXTIME:' + action._maxTime);\r\n            return Object.assign({}, state, {\r\n                _maxTime: action._maxTime\r\n            });\r\n        case SETCURRENTTIME:\r\n            //console.log('SETCURRENTTIME:' + action._currentTime);\r\n            return Object.assign({}, state, {\r\n                _currentTime: action._currentTime\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n//export default scene;","import { combineReducers } from 'redux';\r\n\r\nimport scene from './scene'\r\nimport posenet from './posenet'\r\nimport countdown from './countdown'\r\n\r\nexport default combineReducers({\r\n    scene,\r\n    posenet,\r\n    countdown,\r\n    // 다른 리듀서를 만들게되면 여기에 넣어줌..\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { createStore } from 'redux';\r\nimport { Provider  } from 'react-redux';\r\nimport rootReducer from './reducers';\r\n\r\nconst appElement = document.getElementById('root');\r\n\r\n// 리덕스 개발자도구 적용\r\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\nconst store = createStore(rootReducer, devTools);\r\n// const store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store} >\r\n    <App/>\r\n  </Provider>,\r\n  appElement\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}