{"version":3,"sources":["actions/scene.js","actions/posenet.js","components/ResultFailure.js","components/ResultSuccess.js","components/utils/VideoRecord.js","components/videoPlay.js","actions/countdown.js","components/posenet/data/PosenetMath.js","components/posenet/PosenetUtils.js","components/utils/CanvasFPS.js","components/posenet/PosenetCamera.js","components/PoseNetGame/PosenetPoseScan.js","components/PoseCameraRecord.js","scene/ContentsData.js","scene/ContentsScene.js","components/FullScreenResult.js","scene/IntroScene.js","scene/VideoBodyScanScene.js","scene/ContentsResultData.js","scene/FeedbackScene.js","components/utils/SendMessage.js","App.js","serviceWorker.js","reducers/scene.js","reducers/posenet.js","reducers/countdown.js","reducers/index.js","index.js"],"names":["setScene","changeScene","type","_changeScene","SetSubScene","changeSubScene","_changeSubScene","ClosePosenet","state","console","log","_closePosenet","useStyles","makeStyles","theme","root","width","maxHeight","contentsTitle","position","left","top","fontSize","textShadow","color","contentsFailText","retryButton","height","opacity","OKButton","mapDispatchToProps","connect","_currentSubScene","scene","failureCount","onOKClick","onRetryClick","classes","className","Button","onClick","variant","_mediaRecorder","undefined","_recordedChunks","_recordedChunksState","GetVideoSource","step","length","chunks","i","push","blob","Blob","URL","createObjectURL","video","margin","textAlign","contentBackBoard","backgroundColor","skipGuide","right","centerPlayButton","display","centerPlayButtonText","playButton","skipButton","largeIcon","green","SetMaxTime","value","_maxTime","SetCurrentTime","_currentTime","title","videoUrl","enableContentsSkip","enableCountDown","enableContentsPause","onVideoPlayComplete","onVideoSkip","autoPlay","controls","enableTitleText","playButtonRef","useRef","skipButtonRef","videoRef","backboardRef","timer","current","parseInt","currentTime","duration","useEffect","showPauseButton","id","setInterval","clearInterval","displayState","style","onPlayClick","play","onSkipClick","zIndex","paused","pause","onEnded","ref","src","IconButton","aria-label","getPauseView","abs_value","vec","distance","Math","pow","x","y","sqrt","get_cos","partA","partB","_canvasLastCalledTime","_canvasFPS","toTuple","drawKeyPoints","keypoints","minConfidence","skeletonColor","canvasContext","scale","forEach","keypoint","score","beginPath","arc","PI","fillStyle","fill","drawSegment","lineWidth","firstX","firstY","nextX","nextY","startX","startY","endX","endY","moveTo","lineTo","dx","dy","angle","atan2","cos","sin","drawLine","strokeStyle","stroke","drawSkeleton","adjacentKeyPoints","posenet","drawDegree","font","skelectonDir","current_angle","pivotVec","degree","acos","Posenet_GetDegreeFormVec","posX","posY","fillText","drawSkeletonDegree","_canvasFPSCount","_canvasTextColor","_canvasTextSize","CanvasFPS_Update","Date","now","CanvasFPS_Render","_miniVideoAreaBase","bottom","_miniVideoArea","_miniVideoTextArea","_fullVideoAreaBase","_fullVideoArea","_fullVideoTextArea","contentsTextBase","_contentsLoading","_miniContentsLoading","_contentsScaning","_miniContentsScaning","_distroyComponent","PoseNetCamera","props","defaultProps","getCanvas","elem","canvas","getVideo","getCameraScan","textStyle","showMiniVideo","Object","assign","_posenetPose","getCameraInvalid","minPoseConfidence","stopCamera","bind","this","setupCamera","Error","setTimeout","setState","loading","detectPose","navigator","mediaDevices","getUserMedia","transform","screenWidth","window","innerWidth","screenHeight","innerHeight","audio","facingMode","stream","srcObject","Promise","resolve","onloadedmetadata","getTracks","stop","getContext","showVideo","poseDetectionFrame","algorithm","imageScaleFactor","flipHorizontal","outputStride","minPartConfidence","maxPoseDetections","nmsRadius","showDebugVideo","showPoints","showSkeleton","showSkeletonDegree","skeletonDegreeColor","skeletonLineWidth","posenetModel","findPoseDetectionFrame","a","poses","estimateMultiplePoses","estimateSinglePose","pose","onPosenetPose","clearRect","save","translate","drawImage","restore","requestAnimationFrame","videoStyle","videoTextStyle","playsInline","Component","loadingText","_currentScene","dispatch","poseData","onClosePosenet","contentsLoading","contentsScaning","_countdown","countdown","contentsResult","_poseDetectionInvalidCount","_poseDetectionValidCount","_step","_title","_desc","InvalidPosenet","key","_invalidPoseKey","ValidPosenet","_validPoseKey","_recordState","_invalidPosenetList","_validPosenetList","desc","startVideoRecord","stopVideoRecord","videoElement","document","getElementById","MediaRecorder","ondataavailable","event","data","size","start","currentPercent","totalCount","validState","recoredState","valid","VideoRecord_Stop","getResultText","_contents","videoContainer","progressContainer","_lastCameraRecordStep","InvalidPosenetClear","SetCameraRecord","React","useState","setStep","getStepData","createVideoElement","url","onVideoEnded","onNextStep","nextStep","changeSceneType","contentsData","enablePlayerView","change","preStep","getPoseNetMiniCamera","titleText","splice","VideoRecord_InvalidDataClear","getResultScene","contents","getStepContents","leftTime","maxValue","text","styles","buildStyles","textColor","pathColor","trailColor","textSize","getTimer","videoRoot","contentsTitle_fail","contentsTitle_fail_desc","contentsSummery","contentsSummery_left","contentsSummery_right","_contentsSourceList","_videoFaceMask","setVideoFaceMask","recordState","list","GetVideoSourceList","onToggleVideoFaceMask","e","index","target","getAttribute","onDeleteVideo","VideoRecordDelete","isValid","contentsTitle_success_icon","data-index","process","getRecordSuccuss","getRecordFail","validCount","getContentsSummeryText","fullSourceList","GetVideoSourceFullList","getVideoList","BottomBarBack","BottomBarButton","background","borderRadius","border","boxShadow","BottomBarButton_text_1","fontWeight","BottomBarButton_text_2","keys","k","v","getContents","addScanProgress","resetScanProgress","divLine","resultState","comments","count","targetIndex","time","comment","getConmentsText","SetIframeFullScreen","fullScreen","parent","postMessage","SetLandscapeMode","HybridApp","App","getScene","Boolean","location","hostname","match","initialState","combineReducers","action","appElement","devTools","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","ReactDOM","render","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6a027230.chunk.js","sourcesContent":["export const SETSCENE = 'SETSCENE';\r\nexport function setScene(changeScene) {\r\n    return {\r\n        type: SETSCENE,\r\n        _changeScene: changeScene\r\n    };\r\n}\r\n\r\nexport const SETSUBSCENE = 'SETSUBSCENE';\r\nexport function SetSubScene(changeSubScene) {\r\n    return {\r\n        type: SETSUBSCENE,\r\n        _changeSubScene: changeSubScene\r\n    };\r\n}\r\n","export const SETPOSENETPOSE = 'SETPOSENETPOSE';\r\nexport function SetPosenetPose(pose) {\r\n    return {\r\n        type: SETPOSENETPOSE,\r\n        _posenetPose: pose\r\n    };\r\n}\r\n\r\nexport const CLOSEPOSENET = 'CLOSEPOSENET';\r\nexport function ClosePosenet(state) {\r\n    console.log('ClosePosenet action call:' + state);\r\n    return {\r\n        type: CLOSEPOSENET,\r\n        _closePosenet: state\r\n    };\r\n}\r\n\r\nexport const INVALIDPOSENET = 'INVALIDPOSENET';\r\nexport function InvalidPosenet(key) {\r\n    //console.log('InvalidPosenet action call');\r\n    return {\r\n        type: INVALIDPOSENET,\r\n        _invalidPoseKey: key\r\n    };\r\n}\r\n\r\nexport const INVALIDPOSENET_CLEAR = 'INVALIDPOSENET_CLEAR';\r\nexport function InvalidPosenetClear() {\r\n    //console.log('InvalidPosenetClear action call');\r\n    return {\r\n        type: INVALIDPOSENET_CLEAR\r\n    };\r\n}\r\n\r\nexport const VALIDPOSENET = 'VALIDPOSENET';\r\nexport function ValidPosenet(key) {\r\n    //console.log('ValidPosenet action call');\r\n    return {\r\n        type: VALIDPOSENET,\r\n        _validPoseKey: key\r\n    };\r\n}\r\nexport const SETCAMERARECORD = 'SETCAMERARECORD';\r\nexport function SetCameraRecord(state) {\r\n    console.log('SETCAMERARECORD action call:' + state);\r\n    return {\r\n        type: SETCAMERARECORD,\r\n        _recordState: state\r\n    };\r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SetSubScene } from '../actions/scene';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxHeight: '100%',\r\n    },\r\n    contentsTitle: {\r\n        position: 'absolute',\r\n        left: '5%',\r\n        top: '5%',\r\n        fontSize: '250%',\r\n        textShadow: '2px 2px 5px black',\r\n        color: 'red'\r\n    },\r\n    contentsFailText: {\r\n        position: 'absolute',\r\n        left: '5%',\r\n        top: '20%',\r\n        fontSize: '250%',\r\n        textShadow: '2px 2px 5px black',\r\n        color: 'white'\r\n    },\r\n    retryButton: {\r\n        position: 'absolute',\r\n        left: '60%',\r\n        top: '5%',\r\n        width: '30%',\r\n        height: '20%',\r\n        fontSize: '150%',\r\n        opacity: 0.5\r\n    },\r\n    OKButton: {\r\n        position: 'absolute',\r\n        left: '60%',\r\n        top: '35%',\r\n        width: '30%',\r\n        height: '20%',\r\n        fontSize: '150%',\r\n        opacity: 0.5\r\n    },\r\n}));\r\n\r\nvar _contentsTitle = '추가 기록 필요';\r\nvar _contentsFailText = 'SET';\r\nvar _retryText = '재도전';\r\nvar _OKText = '확인';\r\nexport const ResultFailure = ({ SetSubScene, _currentSubScene, failureCount, onOKClick, onRetryClick}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <span className={classes.contentsTitle}>{_contentsTitle}</span>\r\n        <span className={classes.contentsFailText}>{failureCount + _contentsFailText}</span>\r\n        <Button className={classes.retryButton} onClick={onRetryClick} variant=\"contained\" color=\"secondary\">{_retryText}</Button>\r\n        <Button className={classes.OKButton} onClick={onOKClick} variant=\"contained\" color=\"secondary\">{_OKText}</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  _currentSubScene: state.scene._currentSubScene\r\n});\r\nconst mapDispatchToProps = { SetSubScene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultFailure);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SetSubScene } from '../actions/scene';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxHeight: '100%',\r\n    },\r\n    contentsTitle: {\r\n        position: 'absolute',\r\n        left: '5%',\r\n        top: '5%',\r\n        fontSize: '250%',\r\n        textShadow: '2px 2px 5px black',\r\n        color: 'green'\r\n    },\r\n    OKButton: {\r\n        position: 'absolute',\r\n        left: '60%',\r\n        top: '35%',\r\n        width: '30%',\r\n        height: '20%',\r\n        fontSize: '150%',\r\n        opacity: 0.5\r\n    },\r\n}));\r\n\r\nvar _contentsTitle = '영상 기록 완료';\r\nvar _OKText = '확인';\r\nexport const ResultSuccess = ({ SetSubScene, _currentSubScene, onOKClick}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n        <span className={classes.contentsTitle}>{_contentsTitle}</span>\r\n        <Button className={classes.OKButton} onClick={onOKClick} variant=\"contained\" color=\"secondary\">{_OKText}</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  _currentSubScene: state.scene._currentSubScene\r\n});\r\nconst mapDispatchToProps = { SetSubScene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultSuccess);\r\n","var _mediaRecorder = undefined;\r\nvar _recordedChunks = [];\r\nvar _recordedChunksState = [];\r\n\r\nexport function VideoRecord_Start(stream) {\r\n    if (undefined == stream) {\r\n        return false;\r\n    }\r\n    if (undefined != _mediaRecorder) {\r\n        return false;\r\n    }\r\n\r\n    _mediaRecorder = new MediaRecorder(stream);//, options);\r\n    _mediaRecorder.ondataavailable = function (event) {\r\n        console.log(\"data-available data count:\" + event.data.size);\r\n        if (event.data.size > 0) {\r\n            _recordedChunks.push(event.data);\r\n            console.log('reocrd count:' + _recordedChunks.length);\r\n        }\r\n    }\r\n    console.log(\"VideoRecord_Start call:\" + stream);\r\n    _mediaRecorder.start();\r\n    return true;\r\n}\r\n\r\nexport function GetVideoSourceList(recordState) {\r\n    var list = [];\r\n    for (var i = 0; i < _recordedChunksState.length; i++) {\r\n        if (_recordedChunksState[i].valid == recordState) {\r\n            var step = _recordedChunksState[i].step;\r\n            var url = GetVideoSource(step);\r\n            if (undefined != url) {\r\n                var data = {};\r\n                data.step = step;\r\n                data.url = url;\r\n                data.desc = _recordedChunksState[i].desc;\r\n                data.title = _recordedChunksState[i].title;\r\n                list.push(data);\r\n            }\r\n        }\r\n    }\r\n    return list;\r\n}\r\n\r\nexport function GetVideoSourceFullList() {\r\n    var list = [];\r\n    for (var i = 0; i < _recordedChunksState.length; i++) {\r\n        //if (_recordedChunksState[i].valid == recordState) {\r\n            var step = _recordedChunksState[i].step;\r\n            var url = GetVideoSource(step);\r\n            if (undefined != url) {\r\n                var data = {};\r\n                data.step = step;\r\n                data.url = url;\r\n                data.valid = _recordedChunksState[i].valid;\r\n                data.desc = _recordedChunksState[i].desc;\r\n                data.title = _recordedChunksState[i].title;\r\n                list.push(data);\r\n            }\r\n        //}\r\n    }\r\n    return list;\r\n}\r\n\r\nexport function GetVideoSource(step) {\r\n    if (_recordedChunks.length == 0) {\r\n        console.log('GetVideoSource recordedChunks length zero');\r\n        return undefined;\r\n    }\r\n    if (_recordedChunks.length != _recordedChunksState.length) {\r\n        console.log('GetVideoSources recordedChunks, _recordedChunksState length diffrent');\r\n        return undefined;\r\n    }\r\n    var chunks = [];\r\n    for (var i = 0; i < _recordedChunksState.length; i++) {\r\n        if (_recordedChunksState[i].step == step) {\r\n            chunks.push(_recordedChunks[i]);\r\n            break;\r\n        }\r\n    }\r\n    if (chunks.length == 0) {\r\n        console.log('GetVideoSource not found step key')\r\n        return undefined;\r\n    }\r\n    var blob = new Blob(chunks, {type: \"video/webm\"});\r\n    return URL.createObjectURL(blob);\r\n}\r\n\r\nexport function VideoRecord_Download(filePath, step) {\r\n    var url = GetVideoSource(step);\r\n    if (undefined == url) {\r\n        return;\r\n    }\r\n    // var blob = new Blob(_recordedChunks, {type: \"video/webm\"});\r\n    // var url = URL.createObjectURL(blob);\r\n    var a = document.createElement(\"a\");\r\n    document.body.appendChild(a);\r\n    a.style = \"display: none\";\r\n    a.href = url;\r\n    a.download = filePath;//\"test.webm\";\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n    //_recordedChunks.length = 0;\r\n}\r\n\r\nexport function ValidVideoRecord() {\r\n    if (undefined == _mediaRecorder) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function GetVideoRecordCount() {\r\n    if (undefined == _recordedChunks) {\r\n        return 0;\r\n    }\r\n    return _recordedChunks.length;\r\n}\r\n\r\nexport function VideoRecord_Stop(recoredState, step, title, desc) {\r\n    if (undefined == _mediaRecorder) {\r\n        return false;\r\n    }\r\n    console.log(\"VideoRecord_Stop state:\" + recoredState);\r\n    var data = {};\r\n    data.valid = recoredState;\r\n    data.step = step;\r\n    data.title = title;\r\n    data.desc = desc;\r\n    _recordedChunksState.push(data);\r\n    _mediaRecorder.stop();\r\n    _mediaRecorder = undefined;\r\n    return true;\r\n}\r\n\r\nexport function VideoRecord_InvalidDataClear() {\r\n    if (_recordedChunks.length != _recordedChunksState.length) {\r\n        console.log('VideoRecord_InvalidDataClear _recordedChunks, _recordedChunksState length diffrent');\r\n        return;\r\n    }\r\n    console.log('VideoRecord_InvalidDataClear prev reocrd count:' + _recordedChunks.length);\r\n    for (var i = _recordedChunksState.length - 1; i >= 0; i--) {\r\n        if (_recordedChunksState[i].valid == false) {\r\n            console.log('VideoRecord_InvalidDataClear delete reocrd:' + i);\r\n            _recordedChunksState.splice(i,1);\r\n            _recordedChunks.splice(i,1);\r\n        }\r\n    }\r\n    console.log('VideoRecord_InvalidDataClear current reocrd count:' + _recordedChunks.length);\r\n}\r\n\r\nexport function VideoRecordDelete(index) {\r\n    console.log('VideoRecordDelete index:'+index);\r\n    _recordedChunksState.splice(index,1);\r\n    _recordedChunks.splice(index,1);\r\n    _mediaRecorder = undefined;\r\n}\r\n\r\nexport function VideoRecordClear() {\r\n    console.log('VideoRecordClear');\r\n    _recordedChunksState = [];\r\n    _recordedChunks = [];\r\n    _mediaRecorder = undefined;\r\n}","import React, { useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SetMaxTime, SetCurrentTime } from '../actions/countdown';\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        //maxHeight: '100%'\r\n    },\r\n    video: {\r\n        position: 'relative',\r\n        width: '100%',\r\n        margin: '0'\r\n        //border: '1px solid black'\r\n    },\r\n    contentsTitle: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        left: '0%',\r\n        top: '0%',\r\n        fontSize: '250%',\r\n        textShadow: '2px 2px 5px black',\r\n        color: 'white',\r\n        textAlign: 'left',\r\n        margin: '1% 1%',\r\n        //backgroundColor: '#0000FF88',\r\n    },\r\n    contentBackBoard: {\r\n        position: 'absolute',\r\n        left: '0%',\r\n        top: '0%',\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: '#00000088',\r\n        margin: '0'\r\n    },\r\n    skipGuide: {\r\n        position: 'absolute',\r\n        right: '1%',\r\n        top: '1%',\r\n        color: 'white',\r\n        //backgroundColor: '#FF000088',\r\n    },\r\n    centerPlayButton: {\r\n        position: 'absolute',\r\n        width: '50%',\r\n        height: '50%',\r\n        left: '25%',\r\n        top: '25%',\r\n        display: 'none',\r\n        opacity: '255'\r\n    },\r\n    centerPlayButtonText: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        top: '70%',\r\n        left: '0',\r\n        fontSize: '60%',\r\n        margin: '5%',\r\n        color: 'white'\r\n    },\r\n    playButton: {\r\n        position: 'absolute',\r\n        width: '50%',\r\n        height: '50%',\r\n        left: '0%',\r\n        top: '25%',\r\n        //margin: 'auto',\r\n        display: 'none',\r\n        opacity: '255'\r\n    },\r\n    skipButton: {\r\n        position: 'absolute',\r\n        width: '50%',\r\n        height: '50%',\r\n        left: '50%',\r\n        top: '25%',\r\n        //margin: 'auto',\r\n        display: 'none'\r\n    },\r\n    largeIcon: {\r\n        fontSize: \"2em\",\r\n        color: green[50]\r\n    }\r\n}));\r\n\r\nvar _ContentsSkipGuide = '터치하여 정지/스킵 가능';\r\nexport const VideoPlay = ({ title, videoUrl, enableContentsSkip, enableCountDown, \r\n    enableContentsPause, onVideoPlayComplete, onVideoSkip, autoPlay, controls,\r\n    enableTitleText, SetMaxTime, SetCurrentTime }) => {\r\n    //console.log('VideoPlay component start : ' + title);\r\n    const classes = useStyles();\r\n    const playButtonRef = useRef(null);\r\n    const skipButtonRef = useRef(null);\r\n    const videoRef = useRef(null);\r\n    const backboardRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        console.log('VideoPlay start:' + videoUrl);\r\n        showPauseButton(!autoPlay);\r\n        var id = undefined;\r\n        if (true == enableCountDown) {\r\n            id = setInterval(timer, 1000);\r\n        }\r\n        return () => {\r\n            if (undefined != id) {\r\n                clearInterval(id);\r\n            }\r\n            console.log('VideoPlay finish:' + videoUrl);\r\n        }\r\n    }, []);\r\n\r\n    function timer() {\r\n        const video = videoRef.current;\r\n        if (undefined == video) {\r\n            console.log('videoRef null');\r\n            return;\r\n        }\r\n        //var leftTime = video.duration - video.currentTime;\r\n        SetCurrentTime(parseInt(video.currentTime));\r\n        SetMaxTime(parseInt(video.duration));\r\n    }\r\n\r\n    const onVideoClick = () => {\r\n        console.log('onVideoClick call');\r\n        const video = videoRef.current;\r\n        if (undefined == video) {\r\n            console.log('videoRef null');\r\n            return;\r\n        }\r\n\r\n        if (enableContentsPause == false) {\r\n            if (undefined != video) {\r\n                video.play();\r\n            }\r\n            console.log('disable contents skip');\r\n            return;\r\n        }\r\n\r\n        if (video.paused) {\r\n            video.play();\r\n            showPauseButton(false);\r\n        } else {\r\n            video.pause();\r\n            showPauseButton(true);\r\n        }\r\n    }\r\n\r\n    const showPauseButton = (state) => {\r\n        var displayState = \"none\";\r\n        if (true == state) {\r\n            displayState = \"block\";\r\n        }\r\n        if (undefined != playButtonRef.current) {\r\n            playButtonRef.current.style.display = displayState;\r\n        }\r\n        if (undefined != skipButtonRef.current) {\r\n            skipButtonRef.current.style.display = displayState;\r\n        }\r\n        if (undefined != backboardRef.current) {\r\n            backboardRef.current.style.display = displayState;\r\n        }\r\n    }\r\n\r\n    const onVideoEnded = () => {\r\n        console.log('onVideoEnded call');\r\n        if (undefined != onVideoPlayComplete) {\r\n            onVideoPlayComplete();\r\n        }\r\n    }\r\n\r\n    const onPlayClick = () => {\r\n        console.log('onPlayClick call');\r\n        const video = videoRef.current;\r\n        if (undefined == video) {\r\n            console.log('video null');\r\n            return;\r\n        }\r\n        if (undefined != video) {\r\n            video.play();\r\n        }\r\n        showPauseButton(false);\r\n    }\r\n\r\n    const onSkipClick = () => {\r\n        console.log('onSkipClick call');\r\n        showPauseButton(false);\r\n        if (undefined != onVideoSkip) {\r\n            onVideoSkip();\r\n        }\r\n    }\r\n\r\n    const getPauseView = () => {\r\n        if (false == enableContentsPause) {\r\n            return undefined;\r\n        }\r\n        if (true == enableContentsSkip) {\r\n            return (\r\n                <div>\r\n                    <div className={classes.contentBackBoard} ref={backboardRef}></div>\r\n                    <span className={classes.skipGuide}>{_ContentsSkipGuide}</span>\r\n                    <div className={classes.playButton} ref={playButtonRef}>\r\n                        <IconButton aria-label=\"play\" onClick={onPlayClick} >\r\n                            <PlayArrowIcon className={classes.largeIcon} />\r\n                            <span className={classes.centerPlayButtonText}>재생</span>\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className={classes.skipButton} ref={skipButtonRef}>\r\n                        <IconButton aria-label=\"skip\" onClick={onSkipClick}>\r\n                            <SkipNextIcon className={classes.largeIcon} />\r\n                            <span className={classes.centerPlayButtonText}>다음</span>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <div className={classes.contentBackBoard} ref={backboardRef}></div>\r\n                    <div className={classes.centerPlayButton} ref={playButtonRef}>\r\n                        <IconButton aria-label=\"play\" onClick={onPlayClick} >\r\n                            <PlayArrowIcon className={classes.largeIcon} ></PlayArrowIcon>\r\n                            <span className={classes.centerPlayButtonText}>재생</span>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} style={{ zIndex: '-2' }}>\r\n            <video className={classes.video} onClick={onVideoClick} onEnded={onVideoEnded} autoPlay={autoPlay} ref={videoRef} controls={controls}>\r\n                <source type=\"video/mp4\" />\r\n                <source src={videoUrl} type=\"video/ogg\" id=\"SelectSoundOutput\" />\r\n                Your browser does not support the video tag.\r\n            </video>\r\n            {(enableTitleText == true) ?\r\n                <span className={classes.contentsTitle}>{title}</span> :\r\n                undefined}\r\n            {getPauseView()}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n});\r\nconst mapDispatchToProps = { SetMaxTime, SetCurrentTime };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoPlay);\r\n\r\n","export const SETMAXTIME = 'SETMAXTIME';\r\nexport function SetMaxTime(value) {\r\n    return {\r\n        type: SETMAXTIME,\r\n        _maxTime: value\r\n    };\r\n}\r\n\r\nexport const SETCURRENTTIME = 'SETCURRENTTIME';\r\nexport function SetCurrentTime(value) {\r\n    return {\r\n        type: SETCURRENTTIME,\r\n        _currentTime: value\r\n    };\r\n}\r\n\r\n","\r\nexport function Posenet_GetDegreeFormVec(vec) {\r\n    var pivotVec = {};\r\n    pivotVec.x = 0;\r\n    pivotVec.y = -1;\r\n\r\n    var cos = get_cos(pivotVec, vec);\r\n    var degree = parseInt(Math.acos(cos) * (180 / Math.PI));\r\n    if (vec.x < 0) {\r\n        degree += 180;\r\n    }\r\n    return degree;\r\n}\r\n\r\nexport function Posenet_GetDegreeFormVec2(vec1, vec2) {\r\n    var cos = get_cos(vec1, vec2);\r\n    var degree = parseInt(Math.acos(cos) * (180 / Math.PI));\r\n    return degree;  \r\n}\r\n\r\nexport function InBoundaryDegree(targetDegree, currentDegree, boundaryDegree) {\r\n    var diffDegree = Math.abs(currentDegree - targetDegree);\r\n    if (diffDegree <= boundaryDegree) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction abs_value(vec) {\r\n    var distance = Math.pow(vec.x - 0, 2) + Math.pow(vec.y - 0, 2);\r\n    return Math.sqrt(distance);\r\n}\r\n\r\nfunction get_cos(partA, partB) {\r\n    let dotProduct = ((partA.x * partB.x) + (partA.y * partB.y));\r\n    let cosineSimilarity = dotProduct / (abs_value(partA) * abs_value(partB));\r\n    return cosineSimilarity;\r\n}","import * as posenet from '@tensorflow-models/posenet'\r\nimport { Posenet_GetDegreeFormVec } from './data/PosenetMath'\r\n\r\nconst pointRadius = 3\r\n// var _reserveCameraClose = false;\r\n\r\n// export function IsReserveCameraClose() {\r\n//   return _reserveCameraClose;\r\n// }\r\n\r\n// export function SetReserveCameraClose(flag) {\r\n//   _reserveCameraClose = flag;\r\n// }\r\n\r\nexport const KEYPOINT_COLOR_NAMES = [\r\n  \"AliceBlue\",\r\n  \"AntiqueWhite\",\r\n  \"Aqua\",\r\n  \"Aquamarine\",\r\n  \"Azure\",\r\n  \"Beige\",\r\n  \"Bisque\",\r\n  \"Black\",\r\n  \"BlanchedAlmond\",\r\n  \"Blue\",\r\n  \"BlueViolet\",\r\n  \"Brown\",\r\n  \"BurlyWood\",\r\n  \"CadetBlue\",\r\n  \"Chartreuse\",\r\n  \"Chocolate\",\r\n  \"Coral\",\r\n  \"CornflowerBlue\",\r\n  \"Cornsilk\",\r\n  \"Crimson\",\r\n  \"Cyan\",\r\n  \"DarkBlue\",\r\n  \"DarkCyan\",\r\n  \"DarkGoldenRod\",\r\n  \"DarkGray\",\r\n  \"DarkGrey\",\r\n  \"DarkGreen\",\r\n  \"DarkKhaki\",\r\n  \"DarkMagenta\",\r\n  \"DarkOliveGreen\",\r\n  \"DarkOrange\",\r\n  \"DarkOrchid\",\r\n  \"DarkRed\",\r\n  \"DarkSalmon\",\r\n  \"DarkSeaGreen\",\r\n  \"DarkSlateBlue\",\r\n  \"DarkSlateGray\",\r\n  \"DarkSlateGrey\",\r\n  \"DarkTurquoise\",\r\n  \"DarkViolet\",\r\n  \"DeepPink\",\r\n  \"DeepSkyBlue\",\r\n  \"DimGray\",\r\n  \"DimGrey\",\r\n  \"DodgerBlue\",\r\n  \"FireBrick\",\r\n  \"FloralWhite\",\r\n  \"ForestGreen\",\r\n  \"Fuchsia\",\r\n  \"Gainsboro\",\r\n  \"GhostWhite\",\r\n  \"Gold\",\r\n  \"GoldenRod\",\r\n  \"Gray\",\r\n  \"Grey\",\r\n  \"Green\",\r\n  \"GreenYellow\",\r\n  \"HoneyDew\",\r\n  \"HotPink\",\r\n  \"IndianRed\",\r\n  \"Indigo\",\r\n  \"Ivory\",\r\n  \"Khaki\",\r\n  \"Lavender\",\r\n  \"LavenderBlush\",\r\n  \"LawnGreen\",\r\n  \"LemonChiffon\",\r\n  \"LightBlue\",\r\n  \"LightCoral\",\r\n  \"LightCyan\",\r\n  \"LightGoldenRodYellow\",\r\n  \"LightGray\",\r\n  \"LightGrey\",\r\n  \"LightGreen\",\r\n  \"LightPink\",\r\n  \"LightSalmon\",\r\n  \"LightSeaGreen\",\r\n  \"LightSkyBlue\",\r\n  \"LightSlateGray\",\r\n  \"LightSlateGrey\",\r\n  \"LightSteelBlue\",\r\n  \"LightYellow\",\r\n  \"Lime\",\r\n  \"LimeGreen\",\r\n  \"Linen\",\r\n  \"Magenta\",\r\n  \"Maroon\",\r\n  \"MediumAquaMarine\",\r\n  \"MediumBlue\",\r\n  \"MediumOrchid\",\r\n  \"MediumPurple\",\r\n  \"MediumSeaGreen\",\r\n  \"MediumSlateBlue\",\r\n  \"MediumSpringGreen\",\r\n  \"MediumTurquoise\",\r\n  \"MediumVioletRed\",\r\n  \"MidnightBlue\",\r\n  \"MintCream\",\r\n  \"MistyRose\",\r\n  \"Moccasin\",\r\n  \"NavajoWhite\",\r\n  \"Navy\",\r\n  \"OldLace\",\r\n  \"Olive\",\r\n  \"OliveDrab\",\r\n  \"Orange\",\r\n  \"OrangeRed\",\r\n  \"Orchid\",\r\n  \"PaleGoldenRod\",\r\n  \"PaleGreen\",\r\n  \"PaleTurquoise\",\r\n  \"PaleVioletRed\",\r\n  \"PapayaWhip\",\r\n  \"PeachPuff\",\r\n  \"Peru\",\r\n  \"Pink\",\r\n  \"Plum\",\r\n  \"PowderBlue\",\r\n  \"Purple\",\r\n  \"RebeccaPurple\",\r\n  \"Red\",\r\n  \"RosyBrown\",\r\n  \"RoyalBlue\",\r\n  \"SaddleBrown\",\r\n  \"Salmon\",\r\n  \"SandyBrown\",\r\n  \"SeaGreen\",\r\n  \"SeaShell\",\r\n  \"Sienna\",\r\n  \"Silver\",\r\n  \"SkyBlue\",\r\n  \"SlateBlue\",\r\n  \"SlateGray\",\r\n  \"SlateGrey\",\r\n  \"Snow\",\r\n  \"SpringGreen\",\r\n  \"SteelBlue\",\r\n  \"Tan\",\r\n  \"Teal\",\r\n  \"Thistle\",\r\n  \"Tomato\",\r\n  \"Turquoise\",\r\n  \"Violet\",\r\n  \"Wheat\",\r\n  \"White\",\r\n  \"WhiteSmoke\",\r\n  \"Yellow\",\r\n  \"YellowGreen\",\r\n];\r\n\r\nexport const config = {\r\n  videoWidth: 900,\r\n  videoHeight: 700,\r\n  flipHorizontal: true,\r\n  algorithm: 'single-pose',\r\n  showVideo: true,\r\n  showSkeleton: true,\r\n  showPoints: true,\r\n  minPoseConfidence: 0.1,\r\n  minPartConfidence: 0.5,\r\n  maxPoseDetections: 2,\r\n  nmsRadius: 20,\r\n  outputStride: 16,\r\n  imageScaleFactor: 0.5,\r\n  skeletonColor: '#ffadea',\r\n  skeletonLineWidth: 6,\r\n  loadingText: 'Loading...please be patient...'\r\n}\r\n\r\nfunction isAndroid() {\r\n  return /Android/i.test(navigator.userAgent);\r\n}\r\n\r\nfunction isiOS() {\r\n  return /iPhone|iPad|iPod/i.test(navigator.userAgent);\r\n}\r\n\r\nexport function isMobile() {\r\n  return isAndroid() || isiOS();\r\n}\r\n\r\nfunction toTuple({x, y}) {\r\n  return [x, y]\r\n}\r\n\r\nexport function drawKeyPoints(\r\n  keypoints,\r\n  minConfidence,\r\n  skeletonColor,\r\n  canvasContext,\r\n  scale = 1\r\n) {\r\n  keypoints.forEach(keypoint => {\r\n    if (keypoint.score >= minConfidence) {\r\n      const {x, y} = keypoint.position\r\n      canvasContext.beginPath()\r\n      canvasContext.arc(x * scale, y * scale, pointRadius, 0, 2 * Math.PI)\r\n      canvasContext.fillStyle = skeletonColor\r\n      canvasContext.fill()\r\n    }\r\n  })\r\n}\r\n\r\nfunction drawLine(startX, startY, endX, endY, canvasContext) {\r\n  canvasContext.moveTo(startX, startY)\r\n  canvasContext.lineTo(endX, endY)\r\n\r\n  var headlen = 10;\r\n  var dx = endX - startX;\r\n  var dy = endY - startY;\r\n  var angle = Math.atan2(dy, dx);\r\n  canvasContext.moveTo(endX, endY)\r\n  canvasContext.lineTo(endX - headlen * Math.cos(angle - Math.PI / 6), endY - headlen * Math.sin(angle - Math.PI / 6))\r\n\r\n  canvasContext.moveTo(endX, endY)\r\n  canvasContext.lineTo(endX - headlen * Math.cos(angle + Math.PI / 6), endY - headlen * Math.sin(angle + Math.PI / 6))\r\n}\r\n\r\nfunction drawSegment(\r\n  [firstX, firstY],\r\n  [nextX, nextY],\r\n  color,\r\n  lineWidth,\r\n  scale,\r\n  canvasContext\r\n) {\r\n  canvasContext.beginPath()\r\n\r\n  drawLine(firstX * scale, firstY * scale, nextX * scale, nextY * scale, canvasContext)\r\n\r\n  canvasContext.lineWidth = lineWidth\r\n  canvasContext.strokeStyle = color\r\n  canvasContext.stroke()\r\n}\r\n\r\nexport function drawSkeleton(\r\n  keypoints,\r\n  minConfidence,\r\n  color,\r\n  lineWidth,\r\n  canvasContext,\r\n  scale = 1\r\n) {\r\n  const adjacentKeyPoints = posenet.getAdjacentKeyPoints(\r\n    keypoints,\r\n    minConfidence\r\n  )\r\n\r\n  adjacentKeyPoints.forEach(keypoints => {\r\n    drawSegment(\r\n      toTuple(keypoints[0].position),\r\n      toTuple(keypoints[1].position),\r\n      color,\r\n      lineWidth,\r\n      scale,\r\n      canvasContext\r\n    )\r\n  })\r\n}\r\n\r\nfunction drawDegree(\r\n  [firstX, firstY],\r\n  [nextX, nextY],\r\n  color,\r\n  canvasContext\r\n) {\r\n\r\n  canvasContext.font = \"20px Arial\";\r\n  canvasContext.fillStyle = color;\r\n  canvasContext.textAlign = \"center\";\r\n\r\n  var skelectonDir = {};\r\n  skelectonDir.x = nextX - firstX;\r\n  skelectonDir.y = nextY - firstY;\r\n\r\n  var current_angle = Posenet_GetDegreeFormVec(skelectonDir);\r\n\r\n  var posX = (firstX + nextX) / 2;\r\n  var posY = (firstY + nextY) / 2;\r\n  canvasContext.fillText(\"(\" + current_angle + \")\", posX, posY);\r\n\r\n  // canvasContext.beginPath()\r\n  // canvasContext.moveTo(firstX * scale, firstY * scale)\r\n  // canvasContext.lineTo(nextX * scale, nextY * scale)\r\n  // canvasContext.lineWidth = lineWidth\r\n  // canvasContext.strokeStyle = color\r\n  // canvasContext.stroke()\r\n}\r\n\r\nexport function drawSkeletonDegree(\r\n  keypoints,\r\n  minConfidence,\r\n  color,\r\n  lineWidth,\r\n  canvasContext,\r\n  scale = 1\r\n) {\r\n  const adjacentKeyPoints = posenet.getAdjacentKeyPoints(\r\n    keypoints,\r\n    minConfidence\r\n  )\r\n\r\n  adjacentKeyPoints.forEach(keypoints => {\r\n    drawDegree(\r\n      toTuple(keypoints[0].position),\r\n      toTuple(keypoints[1].position),\r\n      color,\r\n      lineWidth,\r\n      scale,\r\n      canvasContext\r\n    )\r\n  })\r\n}\r\n","var _canvasLastCalledTime;\r\nvar _canvasFPS;\r\nvar _canvasFPSCount = 0;\r\nvar _canvasTextColor = 'yellow';\r\nvar _canvasTextSize = 32;\r\n\r\nexport function CanvasFPS_Update() {\r\n    if (!_canvasLastCalledTime) {\r\n        _canvasLastCalledTime = Date.now();\r\n        _canvasFPS = 0;\r\n        _canvasFPSCount = 0;\r\n        return;\r\n    }\r\n    var delta = (Date.now() - _canvasLastCalledTime) / 1000;\r\n    if (delta >= 1) {\r\n        _canvasLastCalledTime = Date.now();\r\n        _canvasFPS = _canvasFPSCount;\r\n        _canvasFPSCount = 0;\r\n    }\r\n    else {\r\n        _canvasFPSCount++;\r\n    }\r\n}\r\n\r\nexport function CanvasFPS_FontColor(rgb) {\r\n    _canvasTextColor = rgb;\r\n}\r\n\r\nexport function CanvasFPS_FontSize(size) {\r\n    _canvasTextSize = size;\r\n}\r\n\r\nexport function CanvasFPS_Render(canvasContext) {\r\n    canvasContext.fillStyle = _canvasTextColor;\r\n    canvasContext.font = _canvasTextSize + \"px Arial\";\r\n    canvasContext.fillText(_canvasFPS, 10, _canvasTextSize+10);\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport clsx from 'clsx';\r\n\r\nimport * as posenet from '@tensorflow-models/posenet'\r\nimport { drawKeyPoints, drawSkeleton, drawSkeletonDegree } from './PosenetUtils'\r\nimport { CanvasFPS_Update, CanvasFPS_Render } from './../utils/CanvasFPS'\r\nimport { SetPosenetPose, ClosePosenet } from '../../actions/posenet'\r\n\r\nconst _miniVideoAreaBase = {\r\n  zIndex: '0',\r\n  position: 'fixed',\r\n  right: '0%',\r\n  bottom: '0%',\r\n  width: '30%',\r\n}\r\nconst _miniVideoArea = {\r\n  height: '30%'\r\n}\r\nconst _miniVideoTextArea = {\r\n  height: '30%'\r\n}\r\n\r\nconst _fullVideoAreaBase = {\r\n  zIndex: '0',\r\n  position: 'fixed',\r\n  left: '0%',\r\n  top: '0%',\r\n  width: '100%'\r\n}\r\nconst _fullVideoArea = {\r\n  height: 'auto'\r\n}\r\nconst _fullVideoTextArea = {\r\n  height: '100%'\r\n}\r\n\r\nconst contentsTextBase = {\r\n  position: 'absolute',\r\n  zIndex: '1',\r\n  left: '0%',\r\n  top: '0%',\r\n  width: '100%',\r\n  height: '100%',\r\n  margin: '0 auto',\r\n  textShadow: '2px 2px 5px black',\r\n  color: 'white',\r\n}\r\nconst _contentsLoading = {\r\n  textAlign: 'left',\r\n  fontSize: '150%',\r\n  //backgroundColor: '#FF000088',\r\n}\r\n\r\nconst _miniContentsLoading = {\r\n  textAlign: 'center',\r\n  fontSize: '80%',\r\n  //backgroundColor: '#FF000088',\r\n}\r\n\r\nconst _contentsScaning = {\r\n  textAlign: 'right',\r\n  fontSize: '130%',\r\n  //backgroundColor: '#0000FF88',\r\n}\r\n\r\nconst _miniContentsScaning = {\r\n  textAlign: 'center',\r\n  fontSize: '80%',\r\n  //backgroundColor: '#0000FF88',\r\n}\r\n\r\n// 최적화로 이미 종료 되었지만 이미지 Pose 체크를 하는 경우를 위해서 flag 추가\r\nvar _distroyComponent = false;\r\nclass PoseNetCamera extends Component {\r\n  static defaultProps = {\r\n    flipHorizontal: true,\r\n    algorithm: 'single-pose',\r\n    showMiniVideo: false,\r\n    showVideo: true,\r\n    showDebugVideo: false,\r\n    showSkeleton: false,\r\n    showPoints: false,\r\n    showSkeletonDegree: false,\r\n    minPoseConfidence: 0.7,\r\n    minPartConfidence: 0.5,\r\n    maxPoseDetections: 2,\r\n    nmsRadius: 20,\r\n    outputStride: 16,\r\n    imageScaleFactor: 0.5,\r\n    skeletonColor: '#ffadea',\r\n    skeletonDegreeColor: '#ff0000',\r\n    skeletonLineWidth: 6,\r\n    loadingText: 'Loading...please be patient...'\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props, PoseNetCamera.defaultProps);\r\n    this.stopCamera = this.stopCamera.bind(this);\r\n    console.log('PoseNetCamera init');\r\n  }\r\n\r\n  getCanvas = elem => {\r\n    this.canvas = elem\r\n  }\r\n\r\n  getVideo = elem => {\r\n    this.video = elem;\r\n  }\r\n\r\n  async componentDidMount() {\r\n    _distroyComponent = false;\r\n    try {\r\n      await this.setupCamera()\r\n    } catch (error) {\r\n      throw new Error(\r\n        'This browser does not support video capture, or this device does not have a camera'\r\n      )\r\n    }\r\n\r\n    try {\r\n      this.posenet = await posenet.load()\r\n    } catch (error) {\r\n      throw new Error('PoseNetCamera failed to load')\r\n    } finally {\r\n      setTimeout(() => {\r\n        this.setState({ loading: false })\r\n      }, 200)\r\n    }\r\n    this.detectPose();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    _distroyComponent = true;\r\n    console.log('PoseNetCamera componentWillUnmount');\r\n    this.stopCamera();\r\n  }\r\n\r\n  async setupCamera() {\r\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n      throw new Error(\r\n        'Browser API navigator.mediaDevices.getUserMedia not available'\r\n      )\r\n    }\r\n    // const {showVideo } = this.props\r\n    const video = this.video;\r\n    // if (false == showVideo) {\r\n    //   video.style.display = \"none\";\r\n    // }\r\n\r\n    video.style.display = \"none\";\r\n    video.style.transform = 'rotatey(180deg)';\r\n\r\n    var screenWidth = window.innerWidth;\r\n    var screenHeight = window.innerHeight;\r\n\r\n    const stream = await navigator.mediaDevices.getUserMedia({\r\n      audio: false,\r\n      video: {\r\n        facingMode: 'user',\r\n        width: screenWidth,\r\n        height: screenHeight\r\n      }\r\n    })\r\n\r\n    video.srcObject = stream;\r\n    return new Promise(resolve => {\r\n      video.onloadedmetadata = () => {\r\n        video.play()\r\n        resolve(video)\r\n      }\r\n    })\r\n  }\r\n\r\n  stopCamera() {\r\n    console.log('stopCamera call');\r\n    const video = this.video;\r\n    //console.log(video);\r\n    if (undefined == video) {\r\n      return;\r\n    }\r\n    video.pause();\r\n    video.src = \"\";\r\n    if (undefined != video.srcObject) {\r\n      //video.srcObject.stop();\r\n      video.srcObject.getTracks()[0].stop();\r\n      video.srcObject = undefined;\r\n    }\r\n    console.log(\"video off\");\r\n  }\r\n\r\n  detectPose() {\r\n    const canvas = this.canvas\r\n    if (undefined == canvas) {\r\n      return;\r\n    }\r\n    const canvasContext = canvas.getContext('2d')\r\n    if (undefined == canvasContext) {\r\n      return;\r\n    }\r\n\r\n    const { showVideo } = this.props;\r\n    const video = this.video;\r\n    if (false == showVideo) {\r\n      video.style.display = \"none\";\r\n    }\r\n    else {\r\n      video.style.display = \"block\";\r\n    }\r\n\r\n    this.poseDetectionFrame(canvasContext)\r\n  }\r\n\r\n  poseDetectionFrame(canvasContext) {\r\n    const {\r\n      algorithm,\r\n      imageScaleFactor,\r\n      flipHorizontal,\r\n      outputStride,\r\n      minPoseConfidence,\r\n      minPartConfidence,\r\n      maxPoseDetections,\r\n      nmsRadius,\r\n      showDebugVideo,\r\n      showPoints,\r\n      showSkeleton,\r\n      showSkeletonDegree,\r\n      skeletonColor,\r\n      skeletonDegreeColor,\r\n      skeletonLineWidth\r\n    } = this.props\r\n\r\n    const posenetModel = this.posenet\r\n    const video = this.video\r\n\r\n    const findPoseDetectionFrame = async () => {\r\n\r\n      if (_distroyComponent == true) {\r\n        return;\r\n      }\r\n      try {\r\n        let poses = []\r\n        switch (algorithm) {\r\n          case 'multi-pose': {\r\n            poses = await posenetModel.estimateMultiplePoses(\r\n              video,\r\n              imageScaleFactor,\r\n              flipHorizontal,\r\n              outputStride,\r\n              maxPoseDetections,\r\n              minPartConfidence,\r\n              nmsRadius\r\n            )\r\n            break\r\n          }\r\n          case 'single-pose': {\r\n            const pose = await posenetModel.estimateSinglePose(\r\n              video,\r\n              imageScaleFactor,\r\n              flipHorizontal,\r\n              outputStride\r\n            )\r\n            //SetPoseData(pose);\r\n            this.props.onPosenetPose(pose);\r\n            poses.push(pose)\r\n            break\r\n          }\r\n        }\r\n\r\n        const canvas = this.canvas;\r\n        if (true == showDebugVideo && undefined != canvas) {\r\n          // \r\n          canvasContext.clearRect(0, 0, canvas.width, canvas.height)\r\n          CanvasFPS_Update();\r\n          canvasContext.save();\r\n          canvasContext.scale(-1, 1)\r\n          canvasContext.translate(-canvas.width, 0)\r\n          canvasContext.drawImage(video, video.left, video.top, video.left + canvas.width / 2, video.top + canvas.height)\r\n\r\n          poses.forEach(({ score, keypoints }) => {\r\n            if (score >= minPoseConfidence) {\r\n              if (showPoints) {\r\n                drawKeyPoints(\r\n                  keypoints,\r\n                  minPartConfidence,\r\n                  skeletonColor,\r\n                  canvasContext\r\n                )\r\n              }\r\n\r\n              if (showSkeleton) {\r\n                drawSkeleton(\r\n                  keypoints,\r\n                  minPartConfidence,\r\n                  skeletonColor,\r\n                  skeletonLineWidth,\r\n                  canvasContext\r\n                )\r\n              }\r\n\r\n              if (showSkeletonDegree) {\r\n                drawSkeletonDegree(\r\n                  keypoints,\r\n                  minPartConfidence,\r\n                  skeletonDegreeColor,\r\n                  canvasContext\r\n                )\r\n              }\r\n            }\r\n          })\r\n          canvasContext.restore();\r\n          CanvasFPS_Render(canvasContext);\r\n        }\r\n      } catch (error) {\r\n        console.log('posenet detection error');\r\n        // throw new Error(\r\n        //   'This browser does not support video capture, or this device does not have a camera'\r\n        // )\r\n      }\r\n\r\n      setTimeout(function () {\r\n        requestAnimationFrame(findPoseDetectionFrame);\r\n      }, 1000);\r\n\r\n      //requestAnimationFrame(findPoseDetectionFrame)\r\n    }\r\n    findPoseDetectionFrame()\r\n  }\r\n\r\n  getCameraScan = () => {\r\n    var textStyle;\r\n    if (true == this.props.showMiniVideo) {\r\n      textStyle = Object.assign({}, contentsTextBase, _miniContentsLoading);\r\n    } else {\r\n      textStyle = Object.assign({}, contentsTextBase, _contentsLoading);\r\n    }\r\n\r\n    if (undefined != this.props._posenetPose) {\r\n      return (undefined);\r\n    }\r\n    return (\r\n      <span style={textStyle}>카메라 인식 중...</span>\r\n    )\r\n  }\r\n\r\n  getCameraInvalid = () => {\r\n    if (undefined == this.props._posenetPose) {\r\n      return undefined;\r\n    }\r\n    if (this.props.minPoseConfidence < this.props._posenetPose.score) {\r\n      return undefined;\r\n    }\r\n\r\n    var textStyle;\r\n    if (true == this.props.showMiniVideo) {\r\n      textStyle = Object.assign({}, contentsTextBase, _miniContentsScaning);\r\n    } else {\r\n      textStyle = Object.assign({}, contentsTextBase, _contentsScaning);\r\n    }\r\n\r\n    return (\r\n      <span style={textStyle}>화면 안으로 들어오세요.</span>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    var videoStyle;\r\n    var videoTextStyle;\r\n    if (true == this.props.showMiniVideo) {\r\n      videoStyle = Object.assign({}, _miniVideoAreaBase, _miniVideoArea);\r\n      videoTextStyle = Object.assign({}, _miniVideoAreaBase, _miniVideoTextArea);\r\n    } else {\r\n      videoStyle = Object.assign({}, _fullVideoAreaBase, _fullVideoArea);\r\n      videoTextStyle = Object.assign({}, _fullVideoAreaBase, _fullVideoTextArea);\r\n    }\r\n\r\n    return (\r\n      <div >\r\n        <video id='videoCamera' style={videoStyle} src=\"\" playsInline ref={this.getVideo} />\r\n        <div style={videoTextStyle}>\r\n          {/* {this.getCameraScan()} */}\r\n          {this.getCameraInvalid()}\r\n        </div>\r\n        <canvas style={{ position: 'fixed', left: '0%', top: '0%', zIndex: '1' }} ref={this.getCanvas} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    _currentScene: state.scene._currentScene,\r\n    _closePosenet: state.posenet._closePosenet,\r\n    _posenetPose: state.posenet._posenetPose,\r\n  };\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onPosenetPose: (poseData) => dispatch(SetPosenetPose(poseData)),\r\n    onClosePosenet: (state) => dispatch(ClosePosenet(state))\r\n  }\r\n}\r\n\r\nPoseNetCamera = connect(mapStateToProps, mapDispatchToProps)(PoseNetCamera);\r\n\r\nexport default PoseNetCamera;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setScene } from '../../actions/scene';\r\n\r\nconst contentsLoading = {\r\n    position: 'absolute',\r\n    zIndex: '1',\r\n    left: '0%',\r\n    top: '0%',\r\n    width: '100%',\r\n    height: '100%',\r\n    textAlign : 'left',\r\n    margin: '0 auto',\r\n    fontSize: '150%',\r\n    textShadow: '2px 2px 5px black',\r\n    color: 'white',\r\n    //backgroundColor: '#FF000088',\r\n}\r\n\r\nconst contentsScaning = {\r\n    position: 'absolute',\r\n    zIndex: '1',\r\n    left: '0%',\r\n    top: '0%',\r\n    width: '100%',\r\n    height: '100%',\r\n    textAlign : 'right',\r\n    margin: '0 auto',\r\n    fontSize: '130%',\r\n    textShadow: '2px 2px 5px black',\r\n    color: 'white',\r\n    //backgroundColor: '#0000FF88',\r\n}\r\n\r\nconst root = {\r\n    position: 'fixed',\r\n    zIndex: '1',\r\n    left: '0%',\r\n    top: '0%',\r\n    width: '100%',\r\n    height: '100%',\r\n    //backgroundColor: '#0000FF88',\r\n}\r\n\r\nexport const PosenetPoseScan = ({ setScene, _posenetPose, _countdown, minPoseConfidence }) => {\r\n    useEffect(() => {\r\n        //console.log('game countdowntime:' + _countdown);\r\n    });\r\n    const getCameraScan = () => {\r\n        return (\r\n            <span style={contentsLoading}>카메라 인식 중...</span>\r\n        )\r\n    }\r\n    const getCameraInvalid = () => {\r\n        if (undefined == _posenetPose) {\r\n            return undefined;\r\n        }\r\n        if (minPoseConfidence < _posenetPose.score) {\r\n            return undefined;\r\n        }\r\n        return (\r\n            <span style={contentsScaning}>화면 안으로 들어오세요.</span>\r\n        )\r\n    }\r\n    return (\r\n    <div style={root}>\r\n        {getCameraScan()}\r\n        {getCameraInvalid()}\r\n    </div>);\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _posenetPose: state.posenet._posenetPose,\r\n    _countdown: state.countdown._countdown\r\n});\r\nconst mapDispatchToProps = { setScene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PosenetPoseScan);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport PoseNetCamera from '../components/posenet/PosenetCamera'\r\nimport PosenetPoseScan from '../components/PoseNetGame/PosenetPoseScan'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SetSubScene } from '../actions/scene';\r\nimport { InvalidPosenet, ValidPosenet, ClosePosenet } from '../actions/posenet';\r\n\r\nimport { VideoRecord_Start, VideoRecord_Pause, VideoRecord_Stop, ValidVideoRecord, VideoRecord_Download, GetVideoRecordCount} from './../components/utils/VideoRecord'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxHeight: '100%',\r\n    },\r\n    contentsTitle: {\r\n        position: 'absolute',\r\n        left: '5%',\r\n        top: '5%',\r\n        fontSize: '250%',\r\n        textShadow: '2px 2px 5px black',\r\n        color: 'red'\r\n    },\r\n    contentsResult: {\r\n        position: 'fixed',\r\n        left: '0%',\r\n        top: '10%',\r\n        width: '100%',\r\n        height: 'auto',\r\n        fontSize: '250%',\r\n        textShadow: '2px 2px 5px black',\r\n        textAlign: 'center',\r\n        color: 'white'\r\n    }\r\n}));\r\n\r\nvar _poseValidPercent = 50;\r\nvar _minPoseConfidence = 0.3;\r\nvar _poseDetectionInvalidCount = 0;\r\nvar _poseDetectionValidCount = 0;\r\nvar _step = undefined;\r\nvar _title = undefined;\r\nvar _desc = undefined;\r\nexport const PoseCameraRecord = ({ SetSubScene, _currentSubScene, InvalidPosenet, ValidPosenet, _invalidPosenetList, _validPosenetList, _posenetPose, step, title, desc, _recordState }) => {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        if (undefined != _posenetPose) {\r\n            //console.log('pose score valid count:' + _poseDetectionValidCount + \", invalid count:\" + _poseDetectionInvalidCount);\r\n            if (_minPoseConfidence < _posenetPose.score) {\r\n                _poseDetectionValidCount++;\r\n            }\r\n            else {\r\n                _poseDetectionInvalidCount++;\r\n            }\r\n            // 카메라 로딩이 느려 주기적인 체크 필요\r\n            console.log('PoseCameraRecord _recordState:' + _recordState);\r\n            if (_recordState == true) {\r\n                startVideoRecord();\r\n            } else {\r\n                stopVideoRecord();\r\n            }\r\n        }\r\n    }, [_posenetPose]);\r\n\r\n    useEffect(() => {\r\n        console.log('PoseCameraRecord start:' + step);\r\n        _poseDetectionInvalidCount = 0;\r\n        _poseDetectionValidCount = 0;\r\n        _step = step;\r\n        _title = title;\r\n        _desc = desc;\r\n        return () => {\r\n            stopVideoRecord();\r\n        }\r\n    }, []);\r\n\r\n    const startVideoRecord = () => {\r\n        var videoElement = document.getElementById('videoCamera');\r\n        if (undefined != videoElement) {\r\n            VideoRecord_Start(videoElement.srcObject);\r\n        }\r\n    }\r\n\r\n    const stopVideoRecord = () => {\r\n        console.log(' stopVideoRecord call');\r\n        if (ValidVideoRecord() == false) {\r\n            return;\r\n        }\r\n        var currentPercent = 0;\r\n        var totalCount = _poseDetectionValidCount + _poseDetectionInvalidCount;\r\n        if (totalCount != 0) {\r\n            currentPercent = _poseDetectionValidCount * 100 / (_poseDetectionValidCount + _poseDetectionInvalidCount);\r\n        }\r\n        console.log('percent:' + currentPercent + ', total:' + totalCount);\r\n        var validState = (_poseValidPercent < currentPercent);\r\n        if (false == validState) {\r\n            InvalidPosenet(step);\r\n        } else {\r\n            ValidPosenet(step);\r\n        }\r\n        VideoRecord_Stop(validState, _step, _title, _desc);\r\n    }\r\n\r\n    const getResultText = () => {\r\n        if (_recordState == false) {\r\n            console.log(_validPosenetList);\r\n            console.log(_invalidPosenetList);\r\n\r\n            for (var i = 0; i < _validPosenetList.length; i++) {\r\n                var value = _validPosenetList[i];\r\n                if (_step == value) {\r\n                    return (\r\n                        <span className={classes.contentsResult}>기록 성공</span>\r\n                    );\r\n                }\r\n            }\r\n            for (var i = 0; i < _invalidPosenetList.length; i++) {\r\n                var value = _invalidPosenetList[i];\r\n                if (_step == value) {\r\n                    return (\r\n                        <span className={classes.contentsResult}>기록 실패</span>\r\n                    );\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    return (\r\n        <div key=\"PoseNetMiniCamera\">\r\n            <PoseNetCamera showMiniVideo={true} minPoseConfidence='0.1'>\r\n                {/* <PosenetPoseScan minPoseConfidence={_minPoseConfidence} /> */}\r\n            </PoseNetCamera>\r\n            {getResultText()}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _posenetPose: state.posenet._posenetPose,\r\n    _currentSubScene: state.scene._currentSubScene,\r\n    _recordState: state.posenet._recordState,\r\n    _invalidPosenetList: state.posenet._invalidPosenetList,\r\n    _validPosenetList: state.posenet._validPosenetList\r\n});\r\nconst mapDispatchToProps = { SetSubScene, InvalidPosenet, ValidPosenet, ClosePosenet };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PoseCameraRecord);\r\n","\r\nexport var _contents = {\r\n    \"step1\" : {\r\n      'title': '코어-복근 15분',\r\n      'desc': '코어-복근 15분',\r\n      'type': 'extra',\r\n      'url' : 'https://goli8111.github.io/home-training/data/intro.mp4',\r\n      'enableContentsPause' : true,\r\n      'enablePlayerView' : false,\r\n      'key' : 'intro'\r\n    },\r\n    \"step2\" : {\r\n      'title' : '마운틴 클라이머',\r\n      'desc': '워밍업:마운틴 클라이머 40초',\r\n      'type': 'extra',\r\n      'url' : 'https://goli8111.github.io/home-training/data/mountain-climber-intro.mp4',\r\n      'enableContentsPause' : true,\r\n      'enablePlayerView' : false,\r\n      'key' : 'mountain-climber'\r\n    },\r\n    \"step3\" : {\r\n      'title' : '마운틴 클라이머(set)',\r\n      'desc': '워밍업:마운틴 클라이머 40초',\r\n      'type': 'set',\r\n      'url' : 'https://goli8111.github.io/home-training/data/mountain-climber-set.mp4',\r\n      'enableContentsPause' : false,\r\n      'enablePlayerView' : true,\r\n      'key' : 'mountain-climber'\r\n    },\r\n    \"step4\" : {\r\n      'title' : '플랭크 인 앤 아웃',\r\n      'desc': '플랭크 인 앤 아웃 30초 X 1 set',\r\n      'type': 'extra',\r\n      'url' : 'https://goli8111.github.io/home-training/data/plank-in-and-out-intro.mp4',\r\n      'enableContentsPause' : true,\r\n      'enablePlayerView' : false,\r\n      'key' : 'plank-in-and-out'\r\n    },\r\n    \"step5\" : {\r\n      'title' : '플랭크 인 앤 아웃(set)',\r\n      'desc': '플랭크 인 앤 아웃 30초 X 1 set',\r\n      'type': 'set',\r\n      'url' : 'https://goli8111.github.io/home-training/data/plank-in-and-out-set.mp4',\r\n      'enableContentsPause' : false,\r\n      'enablePlayerView' : true,\r\n      'key' : 'plank-in-and-out'\r\n    },\r\n  \r\n    \"step6\" : {\r\n      'title' : '할로우바디 킥',\r\n      'desc': '할로우바디 킥 30초 X 1 set',\r\n      'type': 'extra',\r\n      'url' : 'https://goli8111.github.io/home-training/data/hollow-body-kick-intro-1.mp4',\r\n      'enableContentsPause' : true,\r\n      'enablePlayerView' : false,\r\n      'key' : 'hollow-body-kick'\r\n    },\r\n    \"step7\" : {\r\n      'title' : '할로우바디 킥 Set#1',\r\n      'desc': '할로우바디 킥 30초 X 1 set',\r\n      'type': 'set',\r\n      //'url' : 'https://goli8111.github.io/home-training/data/hollow-body-kick-set-1.mp4',\r\n      'url' : 'https://goli8111.github.io/home-training/data/intro.mp4',\r\n      //'enableContentsPause' : false,\r\n      'enableContentsPause' : true,\r\n      'enablePlayerView' : true,\r\n      'key' : 'hollow-body-kick'\r\n    },\r\n    \"step8\" : {\r\n      'title' : '할로우바디 킥(휴식)',\r\n      'desc': '할로우바디 킥 30초 후 휴식',\r\n      'type': 'extra',\r\n      'url' : 'https://goli8111.github.io/home-training/data/hollow-body-kick-intro-2.mp4',\r\n      'enableContentsPause' : true,\r\n      'enablePlayerView' : false,\r\n      'key' : 'hollow-body-kick'\r\n    },\r\n    \"step9\" : {\r\n      'title' : '할로우바디 킥 Set#2',\r\n      'desc': '할로우바디 킥 30초 X 2 set',\r\n      'type': 'set',\r\n      //'url' : 'https://goli8111.github.io/home-training/data/hollow-body-kick-set-2.mp4',\r\n      'url' : 'https://goli8111.github.io/home-training/data/intro.mp4',\r\n      'enableContentsPause' : true,\r\n      //'enableContentsPause' : false,\r\n      'enablePlayerView' : true,\r\n      'key' : 'hollow-body-kick'\r\n    },\r\n    \"step10\" : {\r\n      'title' : '',\r\n      'desc': '결과',\r\n      'type': 'extra',\r\n      'url' : 'https://goli8111.github.io/home-training/data/core-abs-result.mp4',\r\n      'enableContentsPause' : false,\r\n      'enablePlayerView' : false,\r\n      'key' : 'result'\r\n    },\r\n  }","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setScene } from '../actions/scene';\r\nimport { InvalidPosenetClear, SetCameraRecord } from '../actions/posenet';\r\n\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nimport ResultFailure from '../components/ResultFailure';\r\nimport ResultSuccess from '../components/ResultSuccess';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { VideoRecord_InvalidDataClear } from './../components/utils/VideoRecord';\r\n\r\nimport VideoPlay from '../components/videoPlay'\r\nimport PoseCameraRecord from '../components/PoseCameraRecord'\r\n\r\nimport { _contents } from './ContentsData'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  videoContainer: {\r\n    width: '100%',\r\n    position: 'relative',\r\n  },\r\n  progressContainer: {\r\n    position: 'absolute',\r\n    zIndex: '1',\r\n    left: '2%',\r\n    top: '20%',\r\n    width: '15%',\r\n    height: '15%',\r\n    margin: '0'\r\n},\r\n}));\r\n\r\n// 풀화면 결과창 작업하기\r\n// TV 연결 기능 아이콘 추가\r\n// 안드로이드 가로 화면으로 고정 강제 고정\r\n// 안드로이드 인물사진 파일 지우는 기능 추가\r\n// 로컬에 영상 저장\r\n// 레디, 셋, 고 영상에 넣기\r\nvar _debugStartStep = 6\r\nvar _lastCameraRecordStep = 0;\r\nvar _recordResultDelayDuration = 2000;\r\nexport const ContentsScene = ({ _posenetPose, setScene, InvalidPosenetClear, SetCameraRecord, _invalidPosenetList, _validPosenetList, _currentTime, _maxTime }) => {\r\n  const classes = useStyles();\r\n  const [_step, setStep] = React.useState(_debugStartStep);\r\n\r\n  const getStepContents = () => {\r\n    let contents = [];\r\n    var contentsData = getStepData(_step);\r\n    console.log(contentsData.title);\r\n    if (undefined != contentsData) {\r\n      contents.push(\r\n        createVideoElement(contentsData.title, contentsData.url, contentsData.enableContentsPause)\r\n      );\r\n      \r\n      // 마지막 데이터일 경우 결과화면\r\n      var nextContentsData = getStepData(_step+1);\r\n      if (undefined == nextContentsData) {\r\n        contents.push(getResultScene());\r\n      }\r\n\r\n      if (contentsData.enablePlayerView == true) {\r\n        // 카메라 레코딩을 한번만 호출하기 위해서\r\n        if (_lastCameraRecordStep != _step) {\r\n          SetCameraRecord(true);\r\n          _lastCameraRecordStep = _step;\r\n        }\r\n        contents.push(getPoseNetMiniCamera());\r\n      }\r\n    }\r\n    return contents;\r\n  }\r\n\r\n  const getStepData = (step) => {\r\n    return _contents['step' + step];\r\n  }\r\n\r\n  const createVideoElement = (title, url, enableContentsPause) => {\r\n    return (<VideoPlay key={url} title={title} enableContentsSkip={true} enableContentsPause={enableContentsPause} enableCountDown={true}\r\n    onVideoPlayComplete={onVideoEnded} onVideoSkip={onVideoSkip} videoUrl={url} autoPlay={true} enableTitleText={true} />);\r\n  }\r\n\r\n  const onNextStep = () => {\r\n    // 마지막 데이터일 경우 결과화면\r\n    var nextStep = _step + 1;\r\n    var nextContentsData = getStepData(nextStep);\r\n    if (undefined != nextContentsData) {\r\n      changeSceneType(nextStep);\r\n    }\r\n  }\r\n\r\n  const onVideoEnded = () => {\r\n    console.log('onVideoEnded call');\r\n    var contentsData = getStepData(_step);\r\n    if (undefined == contentsData) {\r\n      return;\r\n    }\r\n\r\n    SetCameraRecord(false);\r\n    if (contentsData.enablePlayerView) {\r\n      setTimeout(function () {\r\n        onNextStep();\r\n      }, _recordResultDelayDuration);\r\n    }\r\n  }\r\n\r\n  const onVideoSkip = () => {\r\n    console.log('onVideoSkip call');\r\n    var contentsData = getStepData(_step);\r\n    if (undefined == contentsData) {\r\n      return;\r\n    }     \r\n    onNextStep();\r\n  }\r\n\r\n  function changeSceneType(change) {\r\n    var preStep = _step;\r\n    var nextStep = change;\r\n\r\n    // 이미 성공한 포즈일 경우 패스\r\n    for (var i = 0; i < _validPosenetList.length; i++) {\r\n      var value = _validPosenetList[i];\r\n      if (value == nextStep || value == nextStep + 1) {\r\n        console.log('skip scene type:' + preStep + '=>' + value);\r\n        changeSceneType(value+1);\r\n        return;\r\n      }\r\n    }\r\n    setStep(nextStep);\r\n    console.log('change scene type:' + preStep + '=>' + nextStep);\r\n  }\r\n\r\n  const getPoseNetMiniCamera = () => {\r\n    var titleText = undefined;\r\n    var desc = undefined;\r\n    var contentsData = getStepData(_step);\r\n    if (undefined != contentsData) {\r\n      titleText = contentsData.title;\r\n      desc = contentsData.desc;\r\n    }\r\n    return (\r\n      <div key=\"PoseNetMiniCamera\">\r\n        <PoseCameraRecord step={_step} title={titleText} desc={desc}/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const onOKClick = () => {\r\n    console.log('onOKClick');\r\n    //setFullScreenResultScene(true);\r\n    setStep(_debugStartStep);\r\n    setScene('Result');\r\n  }\r\n\r\n  const onRetryClick = () => {\r\n    console.log('onRetryClick');\r\n    _lastCameraRecordStep = 0;\r\n    InvalidPosenetClear();\r\n    VideoRecord_InvalidDataClear();\r\n    changeSceneType(_debugStartStep);\r\n  }\r\n\r\n  const getResultScene = () => {\r\n    //console.log('getResultScene _invalidPlaySet count:' + _invalidPlaySet.length);\r\n    var failureCount = _invalidPosenetList.length;\r\n    if (failureCount == 0) {\r\n      return (\r\n        <div key=\"ResultSuccess\">\r\n          <ResultSuccess onOKClick={onOKClick} />\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <div key=\"ResultFailure\">\r\n          <ResultFailure failureCount={failureCount} onOKClick={onOKClick} onRetryClick={onRetryClick} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  const getTimer = () => {\r\n    var contentsData = getStepData(_step);\r\n    if (undefined == contentsData) {\r\n      return;\r\n    }\r\n    if (contentsData.enablePlayerView == false) {\r\n      return;\r\n    }\r\n\r\n    var leftTime = parseInt(_maxTime - _currentTime);\r\n    return (\r\n      <div className={classes.progressContainer}>\r\n        <CircularProgressbar value={leftTime} maxValue={_maxTime} text={`${leftTime}`}\r\n          styles={buildStyles({\r\n            textColor: \"#ffffff\",\r\n            pathColor: \"#ffffff\",\r\n            trailColor: \"#ffffff11\",\r\n            textSize: '40px'\r\n          })} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.videoContainer}>\r\n        {getStepContents()}\r\n        {getTimer()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  _posenetPose: state.posenet._posenetPose,\r\n  _invalidPosenetList: state.posenet._invalidPosenetList,\r\n  _validPosenetList: state.posenet._validPosenetList,\r\n  _maxTime: state.countdown._maxTime,\r\n  _currentTime: state.countdown._currentTime\r\n});\r\nconst mapDispatchToProps = { InvalidPosenetClear, SetCameraRecord, setScene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentsScene);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SetSubScene } from '../actions/scene';\r\n\r\nimport './FullScreenResult.css';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport VideoPlay from './videoPlay'\r\n\r\nimport { GetVideoSourceList, VideoRecordClear, VideoRecordDelete, GetVideoSourceFullList } from './utils/VideoRecord'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  videoRoot: {\r\n    position: 'absolute',\r\n    top: '5%',\r\n    height: '95%',\r\n    width: '100%',\r\n  },\r\n  videoContainer: {\r\n    position: 'relative',\r\n    width: '100%',\r\n  },\r\n  contentsTitle_fail: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    left: '0%',\r\n    color: 'red',\r\n  },\r\n  contentsTitle_fail_desc: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    left: '0%',\r\n    color: 'gray'\r\n  },\r\n  contentsSummery: {\r\n    width: '100%',\r\n  },\r\n  contentsSummery_left: {\r\n    position: \"absolute\",\r\n    top: \"5px\",\r\n    left: \"10px\",\r\n    color: 'black',\r\n  },\r\n  contentsSummery_right: {\r\n    position: \"absolute\",\r\n    top: \"5px\",\r\n    right: \"30px\",\r\n    color: 'black',\r\n  },\r\n  video: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    margin: '0',\r\n    //opacity: '0.2'\r\n  }\r\n}));\r\n\r\nvar _contentsTitle = '내기록';\r\nvar _recordFailText = '영상 기록 없음';\r\nvar _contentsSourceList = undefined;\r\nexport const FullScreenResult = ({ _currentSubScene, _invalidPosenetList, _validPosenetList }) => {\r\n  const classes = useStyles();\r\n  const [_videoFaceMask, setVideoFaceMask] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    _contentsSourceList = GetVideoSourceList(true);\r\n    if (undefined != _contentsSourceList && 0 < _contentsSourceList.length) {\r\n      console.log('FullScreenResult source count:' + _contentsSourceList.length);\r\n    } else {\r\n      console.log('FullScreenResult source zero');\r\n    }\r\n  });\r\n\r\n  const onToggleVideoFaceMask = (e) => {\r\n    var index = e.target.getAttribute(\"data-index\");\r\n    console.log('onToggleVideoFaceMask call index:'+ index);\r\n    setVideoFaceMask(!_videoFaceMask);\r\n  }\r\n\r\n  const onDeleteVideo = (e) => {\r\n    var index = e.target.getAttribute(\"data-index\");\r\n    console.log('onDeleteVideo call index:' + index);\r\n    VideoRecordDelete(index);\r\n    setVideoFaceMask(!_videoFaceMask);\r\n  }\r\n\r\n  const getContentsSummeryText = () => {\r\n    var totalCount = _invalidPosenetList.length + _validPosenetList.length;\r\n    var validCount = _validPosenetList.length;\r\n    return (\r\n      <div>\r\n        <span style={{ color: 'green' }}>{validCount} Set</span>기록 / 총 {totalCount} Set\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const getRecordSuccuss = (index, desc, url) => {\r\n    return (\r\n      <div key={desc}>\r\n        <div className='contentsTitle_left'>\r\n          <div className={classes.contentsTitle_success_icon}>\r\n            <img onClick={onToggleVideoFaceMask} data-index={index} className='contentsTitle_success_smile_icon' src={process.env.PUBLIC_URL + '/img/face-mask-icon.png'} />\r\n            <img onClick={onDeleteVideo} data-index={index} className='contentsTitle_success_delete_icon' src={process.env.PUBLIC_URL + '/img/result-scene-delete-icon.png'} />\r\n          </div>\r\n          <span className='contentsTitle_success_text'>{desc}\r\n          </span>\r\n        </div>\r\n        <video className={classes.video} autoPlay={false} controls={true}>\r\n          <source type=\"video/mp4\" />\r\n          <source src={url} type=\"video/ogg\" id=\"SelectSoundOutput\" />\r\n                Your browser does not support the video tag.\r\n        </video>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const getRecordFail = (desc) => {\r\n    return (\r\n      <div key={desc}>\r\n        <div className='contentsTitle_fail_left' >\r\n          <span className={classes.contentsTitle_fail} >{desc}</span>\r\n        </div>\r\n        <div className='contentsTitle_fail_center' >\r\n          <span className={classes.contentsTitle_fail_desc}>{_recordFailText}</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const createVideoElement = (index, title, desc, url, isValid) => {\r\n    //console.log('createVideoElement ' + title)\r\n    return (\r\n      <div key={title} >\r\n        {(isValid) ? getRecordSuccuss(index, desc, url) : getRecordFail(desc)}\r\n      </div>);\r\n  }\r\n\r\n  const getVideoList = () => {\r\n    let contents = [];\r\n\r\n    var fullSourceList = GetVideoSourceFullList();\r\n    if (undefined != fullSourceList) {\r\n      console.log('fullSourceList:' + fullSourceList.length);\r\n      for (var i = 0; i < fullSourceList.length; i++) {\r\n        contents.push(createVideoElement(i, fullSourceList[i].title, \r\n          fullSourceList[i].desc, fullSourceList[i].url, fullSourceList[i].valid));\r\n      }\r\n    }\r\n    return contents;\r\n  }\r\n\r\n\r\n  return (\r\n    <div key='FullScreenResult' className={classes.root}>\r\n      <div className={classes.contentsSummery}>\r\n        <span className={classes.contentsSummery_left}>{_contentsTitle}</span>\r\n        <span className={classes.contentsSummery_right}>{getContentsSummeryText()}</span>\r\n      </div>\r\n\r\n\r\n      <div className={classes.videoRoot}>\r\n          <div className={classes.videoContainer}>\r\n            {getVideoList()} \r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  _currentSubScene: state.scene._currentSubScene,\r\n  _invalidPosenetList: state.posenet._invalidPosenetList,\r\n  _validPosenetList: state.posenet._validPosenetList,\r\n});\r\nconst mapDispatchToProps = { SetSubScene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FullScreenResult);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setScene } from '../actions/scene';\r\nimport { InvalidPosenetClear } from '../actions/posenet';\r\n\r\nimport ResultFailure from '../components/ResultFailure';\r\nimport ResultSuccess from '../components/ResultSuccess';\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { VideoRecord_InvalidDataClear } from './../components/utils/VideoRecord';\r\n\r\nimport VideoPlay from '../components/videoPlay'\r\nimport PoseCameraRecord from '../components/PoseCameraRecord'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { _contents } from './ContentsData'\r\nimport './Contents.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    videoContainer: {\r\n        width: '100%',\r\n        position: 'relative',\r\n    },\r\n    contentsTitle: {\r\n        color: 'black'\r\n    },\r\n    BottomBarBack: {\r\n        position: \"fixed\",\r\n        backgroundColor: '#FFFFFF88',\r\n        width: '100%',\r\n        height: '11%',\r\n        top: '89%',\r\n        left: '0%'\r\n    },\r\n    BottomBarButton: {\r\n        position: \"fixed\",\r\n        height: \"8%\",\r\n        top: \"90%\",\r\n        background: 'linear-gradient(90deg, #cc6699 30%, #6666ff 80%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        boxShadow: '0 3px 5px 2px rgba(0, 0, 0, .3)',\r\n        width: \"94%\",\r\n        left: \"3%\",\r\n    },\r\n    BottomBarButton_text_1: {\r\n        position: 'absolute',\r\n        left: \"0\",\r\n        top: \"10%\",\r\n        width: \"100%\",\r\n        fontSize: '140%',\r\n        fontWeight: 'bold'\r\n    },\r\n    BottomBarButton_text_2: {\r\n        position: 'absolute',\r\n        left: \"0\",\r\n        top: \"60%\",\r\n        width: \"100%\",\r\n        fontSize: '80%',\r\n    }\r\n}));\r\n\r\n\r\nexport const IntroScene = ({ _posenetPose, setScene }) => {\r\n    const classes = useStyles();\r\n    console.log('IntroScene start');\r\n\r\n    const createVideoElement = (title, desc, url) => {\r\n        //console.log('createVideoElement ' + title)\r\n        return (\r\n            <div key={title} >\r\n                <span className={classes.contentsTitle}>{desc}</span>\r\n                <div className={classes.videoContainer}>\r\n                    <VideoPlay key={url} title={title} enableContentsSkip={false} enableContentsPause={true} videoUrl={url} autoPlay={false} enableTitleText={false} />\r\n                </div>\r\n            </div>);\r\n    }\r\n\r\n    const getContents = () => {\r\n        let contents = [];\r\n        Object.keys(_contents).forEach(function (k, v) {\r\n            if (_contents[k].type == 'set') {\r\n                contents.push(createVideoElement(_contents[k].title, _contents[k].desc,_contents[k].url));\r\n            }\r\n        });\r\n        return contents;\r\n    }\r\n\r\n    const onPlay = () => {\r\n        console.log('onPlay call');\r\n        setScene('Play');\r\n        //setScene('BodyScan');\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className='contents_body'>\r\n                <div className='contents_intro'>\r\n                    <span className='.contents_intro_text'>어디스든 가볍게!</span>\r\n                    <span className='contents_intro_text_sub'><br />딱 16분 트레이닝으로 코어를 단단하게 조이고, 복근을 활성화 합니다.<br />따라오세요</span>\r\n                </div>\r\n                {getContents()}\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <div className={classes.BottomBarBack}></div>\r\n            </div>\r\n            <Button onClick={onPlay} className={classes.BottomBarButton} variant=\"contained\" color=\"secondary\">\r\n                    <span className={classes.BottomBarButton_text_1}>영상 기록 시작</span>\r\n                    <span className={classes.BottomBarButton_text_2}>총 11 Set / 15 분</span>\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _posenetPose: state.posenet._posenetPose\r\n});\r\nconst mapDispatchToProps = { setScene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IntroScene);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { setScene } from '../actions/scene';\r\n\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nimport PoseNetCamera from '../components/posenet/PosenetCamera'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxHeight: '100%',\r\n    },\r\n    videoContainer: {\r\n        width: '100%',\r\n        position: 'relative',\r\n    },\r\n    contentsLoading: {\r\n        position: 'absolute',\r\n        zIndex: '1',\r\n        left: '0%',\r\n        top: '0%',\r\n        width: '100%',\r\n        height: '100%',\r\n        textAlign : 'left',\r\n        margin: '0 auto',\r\n        fontSize: '150%',\r\n        textShadow: '2px 2px 5px black',\r\n        color: 'white',\r\n        //backgroundColor: '#FF000088',\r\n    },\r\n    progressContainer: {\r\n        position: 'absolute',\r\n        zIndex: '1',\r\n        width: '20%',\r\n        height: '20%',\r\n        margin: '10%'\r\n    },\r\n}));\r\n\r\n// 풀화면으로 화면안에 들어왔는지 인식\r\nvar _minPoseConfidence = 0.3;\r\nvar _maxScaneCount = 4;\r\nexport const VideoBodyScanScene = ({ _posenetPose, setScene }) => {\r\n    const classes = useStyles();\r\n    const [_step, setStep] = React.useState(0);\r\n\r\n    useEffect(() => {\r\n        console.log('_posenetPose effect call');\r\n        if (undefined != _posenetPose) {\r\n            if (_minPoseConfidence <= _posenetPose.score) {\r\n                addScanProgress();\r\n            } else {\r\n                resetScanProgress();\r\n            }\r\n        }\r\n    }, [_posenetPose]);\r\n    const getPoseNetCamera = () => {\r\n        return (\r\n            <div key=\"PoseNetScanCamera\">\r\n                <PoseNetCamera showMiniVideo={false} minPoseConfidence={_minPoseConfidence} />\r\n            </div>\r\n        );\r\n    }\r\n    const addScanProgress = () => {\r\n        setStep(_step+1);\r\n    }\r\n    const resetScanProgress = () => {\r\n        setStep(0);\r\n    }\r\n    if (_step >= _maxScaneCount) {\r\n        setScene('Play');\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.videoContainer}>\r\n                <div className={classes.progressContainer}>\r\n                    <CircularProgressbar value={_step} maxValue={_maxScaneCount} text={`${_step * (100 / 4)}%`} \r\n                    styles={buildStyles({\r\n                        textColor: \"#ffffff\",\r\n                        pathColor: \"#ffffff\",\r\n                        trailColor: \"#ffffff11\",\r\n                        textSize: '40px'\r\n                    })} />\r\n                </div>\r\n                <span className={classes.contentsLoading}>카메라 인식 중...</span>\r\n                {getPoseNetCamera()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    _posenetPose: state.posenet._posenetPose\r\n});\r\nconst mapDispatchToProps = { setScene };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoBodyScanScene);\r\n","\r\nexport var _contents = {\r\n    \"step3\" : {\r\n      'title' : '마운틴 클라이머(set)',\r\n      'desc': '워밍업:마운틴 클라이머 40초',\r\n      'url' : 'https://goli8111.github.io/home-training/data/mountain-climber-set.mp4',\r\n      'comments' : ['0:41', '다리를 펴주세요.', '1:15', '마운틴 자세 시, 허리를 더 펴주세요.'],\r\n    },\r\n    \"step5\" : {\r\n      'title' : '플랭크 인 앤 아웃(set)',\r\n      'desc': '플랭크 인 앤 아웃 30초 X 1 set',\r\n      'url' : 'https://goli8111.github.io/home-training/data/plank-in-and-out-set.mp4',\r\n      'comments' : ['0:13', '조금 더 빠르게 진행 해주세요.'],\r\n    },\r\n    \"step7\" : {\r\n      'title' : '할로우바디 킥 Set#1',\r\n      'desc': '할로우바디 킥 30초 X 1 set',\r\n      'url' : 'https://goli8111.github.io/home-training/data/hollow-body-kick-set-1.mp4',\r\n      'comments' : ['0:00', '완벽합니다.'],\r\n    },\r\n    \"step9\" : {\r\n      'title' : '할로우바디 킥 Set#2',\r\n      'desc': '할로우바디 킥 30초 X 2 set',\r\n      'url' : 'https://goli8111.github.io/home-training/data/hollow-body-kick-set-2.mp4',\r\n    }\r\n  }","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SetSubScene } from '../actions/scene';\r\n\r\nimport { _contents } from './ContentsResultData'\r\nimport './FeedbackScene.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxHeight: '100%',\r\n    },\r\n    videoRoot: {\r\n        position: 'relative',\r\n        top: '5%',\r\n        height: '95%',\r\n        width: '100%',\r\n    },\r\n    videoContainer: {\r\n        position: 'relative',\r\n        width: '100%',\r\n        margin: '5px'\r\n    },\r\n    video: {\r\n        position: 'relative',\r\n        width: '100%',\r\n        margin: '0',\r\n    },\r\n    divLine: {\r\n        border: \"1px solid\",\r\n        color: \"#DDDDDD\",\r\n        width: \"95%\"\r\n    }\r\n}));\r\n\r\nvar _contentsTitle = '마스터 코멘트';\r\n\r\nexport const FeedbackScene = ({resultState}) => {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n    });\r\n\r\n    const getConmentsText = (comments) => {\r\n        if (undefined == comments) {\r\n            return undefined;\r\n        }\r\n\r\n        let contents = [];\r\n        var count = parseInt(comments.length / 2);\r\n        for (var i = 0; i < count; i++) {\r\n            if (i != 0) {\r\n                contents.push(<br key={comments} />);\r\n            }\r\n            var targetIndex = i * 2;\r\n            var time = comments[targetIndex];\r\n            var comment = comments[targetIndex + 1];\r\n            contents.push(<span key={time + comment + '0'} className='contentsTitle_success_time'>{time} </span>);\r\n            contents.push(<span key={time + comment + '1'} className='contentsTitle_success_text'>{comment}</span>);\r\n        }\r\n        return contents;\r\n    }\r\n\r\n    const getRecordSuccuss = (desc, url, comments) => {\r\n        return (\r\n            <div key={desc}>\r\n                <div className='contentsTitle_left'>\r\n                    <span className='contentsTitle_success_text'>{desc}\r\n                    </span>\r\n                </div>\r\n                <video className={classes.video} autoPlay={false} controls={true}>\r\n                    <source type=\"video/mp4\" />\r\n                    <source src={url} type=\"video/ogg\" id=\"SelectSoundOutput\" />\r\n                    Your browser does not support the video tag.\r\n                </video>\r\n                <div className='contentsTitle_left'>\r\n                    {getConmentsText(comments)}\r\n                    {/* <span className='contentsTitle_success_time'>3:15\r\n                    </span>\r\n                \r\n                    <span className='contentsTitle_success_text'>asdfasdfasdf\r\n                    </span> */}\r\n                </div>\r\n                <hr className={classes.divLine} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const getResultSummery = () => {\r\n        if (resultState) {\r\n            return (\r\n                <div>\r\n                    약간의 동작 교정이 필요하지만, 잘하셨습니다,\r\n                    <br />\r\n                    클리어 도장 찍어드립니다!\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    아쉽습니다.\r\n                    <br />\r\n                    코멘트를 읽어보시고 다시 도전하세요.\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const getVideoList = () => {\r\n        let contents = [];\r\n        Object.keys(_contents).forEach(function (k, v) {\r\n            contents.push(getRecordSuccuss(_contents[k].desc, _contents[k].url, _contents[k].comments));\r\n        });\r\n        return contents;\r\n    }\r\n\r\n    return (\r\n        <div key='FeedbackScene' className={classes.root}>\r\n            <div className='contentsSummery'>\r\n                <span className='contentsSummery_title'>{_contentsTitle}</span>\r\n                <div className='contentsSummery_result'>\r\n                    {getResultSummery()}\r\n                </div>\r\n                <hr className={classes.divLine} />\r\n                <div className={classes.videoRoot}>\r\n                    <div className={classes.videoContainer}>\r\n                        {getVideoList()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n                _currentSubScene: state.scene._currentSubScene,\r\n    _invalidPosenetList: state.posenet._invalidPosenetList,\r\n    _validPosenetList: state.posenet._validPosenetList,\r\n});\r\nconst mapDispatchToProps = { SetSubScene};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedbackScene);\r\n","export function SetIframeFinish(success) {\r\n    if (undefined == window) {\r\n        return;\r\n    }\r\n    if (undefined == window.parent) {\r\n        return;\r\n    }\r\n\r\n    if (success == false) {\r\n        window.parent.postMessage(\"onBack\", \"*\");\r\n    }\r\n    else {\r\n        window.parent.postMessage(\"onSuccess\", \"*\");\r\n    }\r\n}\r\n\r\nexport function SetIframeFullScreen(fullScreen) {\r\n    if (undefined == window) {\r\n        return;\r\n    }\r\n    if (undefined == window.parent) {\r\n        return;\r\n    }\r\n    \r\n    if (fullScreen == false) {\r\n        window.parent.postMessage(\"onFitScreen\", \"*\");\r\n    }\r\n    else {\r\n        window.parent.postMessage(\"onFullScreen\", \"*\");\r\n    }\r\n}\r\n\r\nexport function SetLandscapeMode(fullScreen) {\r\n    if (undefined == window) {\r\n        return;\r\n    }\r\n    if (undefined == window.HybridApp) {\r\n        return;\r\n    }\r\n    window.HybridApp.SetLandscapeMode(fullScreen);\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './App.css';\r\nimport ContentsScene from './scene/ContentsScene';\r\nimport FullScreenResult from './components/FullScreenResult';\r\nimport IntroScene from './scene/IntroScene';\r\nimport VideoBodyScanScene from './scene/VideoBodyScanScene';\r\nimport FeedbackScene from './scene/FeedbackScene';\r\nimport { SetIframeFullScreen, SetLandscapeMode } from './components/utils/SendMessage'\r\n\r\nclass App extends Component {\r\n\r\n  getScene() {\r\n     switch (this.props._currentScene) {\r\n      case 'Result': {\r\n        SetIframeFullScreen(false);\r\n        SetLandscapeMode(true);\r\n        return <FullScreenResult />;\r\n      }\r\n      case 'Play': {\r\n        SetIframeFullScreen(true);\r\n        SetLandscapeMode(true);\r\n        return <ContentsScene />;\r\n      }\r\n      case 'BodyScan': {\r\n        SetIframeFullScreen(true);\r\n        SetLandscapeMode(true);\r\n        return <VideoBodyScanScene />;\r\n      }\r\n      case 'Feedback': {\r\n        SetIframeFullScreen(false);\r\n        SetLandscapeMode(false);\r\n        return <FeedbackScene resultState={false}/>;\r\n      }\r\n      default: {\r\n        SetIframeFullScreen(false);\r\n        SetLandscapeMode(false);\r\n        return <IntroScene />;\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.getScene()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    _currentScene: state.scene._currentScene\r\n  };\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n  }\r\n}\r\n\r\nApp = connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { SETSCENE, SETSUBSCENE } from '../actions/scene'\r\n\r\nconst initialState = {\r\n    _currentScene: 'IndexScene', // \r\n    _currentSubScene: '',\r\n};\r\n\r\nexport default function scene(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SETSCENE:\r\n            console.log('SETSCENE:' + action._changeScene);\r\n            return Object.assign({}, state, {\r\n                _currentScene: action._changeScene\r\n            });\r\n        case SETSUBSCENE:\r\n            console.log('SETSUBSCENE:' + action._changeSubScene);\r\n            return Object.assign({}, state, {\r\n                _currentSubScene: action._changeSubScene\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n//export default scene;","import { SETPOSENETPOSE, CLOSEPOSENET, INVALIDPOSENET, INVALIDPOSENET_CLEAR, VALIDPOSENET, SETCAMERARECORD } from '../actions/posenet'\r\n\r\nconst initialState = {\r\n    _posenetPose: undefined,\r\n    _closePosenet: '',\r\n    _invalidPosenetList:[],\r\n    _validPosenetList:[],\r\n    _recordState: false\r\n};\r\n\r\nexport default function posenet(state = initialState, action) {\r\n    //console.log('reducer posenet action call:' + action.type);\r\n    switch(action.type) {\r\n        case SETPOSENETPOSE:\r\n            //console.log('SETPOSENETPOSE:');\r\n            //console.log(action._posenetPose);\r\n            return Object.assign({}, state, {\r\n                _posenetPose: action._posenetPose\r\n            });\r\n        case CLOSEPOSENET:\r\n            console.log('CLOSEPOSENET:' + action._closePosenet);\r\n            return Object.assign({}, state, {\r\n                _closePosenet: action._closePosenet\r\n            });\r\n        case INVALIDPOSENET:\r\n            console.log('INVALIDPOSENET:');\r\n            console.log(state._invalidPosenetList);\r\n            return {\r\n                ...state,\r\n                _invalidPosenetList: [...state._invalidPosenetList, action._invalidPoseKey]\r\n            };\r\n        case INVALIDPOSENET_CLEAR:\r\n            console.log('INVALIDPOSENET_CLEAR:');\r\n            console.log(state._invalidPosenetList);\r\n            return {\r\n                ...state,\r\n                _invalidPosenetList: []\r\n            };\r\n        case VALIDPOSENET:\r\n            console.log('VALIDPOSENET:');\r\n            console.log(state._validPosenetList);\r\n            return {\r\n                ...state,\r\n                _validPosenetList: [...state._validPosenetList, action._validPoseKey]\r\n            }\r\n        case SETCAMERARECORD:\r\n            console.log('SETCAMERARECORD:' + action._recordState);\r\n            return Object.assign({}, state, {\r\n                _recordState: action._recordState\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SETMAXTIME, SETCURRENTTIME } from '../actions/countdown'\r\n\r\nconst initialState = {\r\n    _currentTime: 0,\r\n    _maxTime: 0\r\n};\r\n\r\nexport default function countdown(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SETMAXTIME:\r\n            console.log('SETMAXTIME:' + action._maxTime);\r\n            return Object.assign({}, state, {\r\n                _maxTime: action._maxTime\r\n            });\r\n        case SETCURRENTTIME:\r\n            console.log('SETCURRENTTIME:' + action._currentTime);\r\n            return Object.assign({}, state, {\r\n                _currentTime: action._currentTime\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n//export default scene;","import { combineReducers } from 'redux';\r\n\r\nimport scene from './scene'\r\nimport posenet from './posenet'\r\nimport countdown from './countdown'\r\n\r\nexport default combineReducers({\r\n    scene,\r\n    posenet,\r\n    countdown,\r\n    // 다른 리듀서를 만들게되면 여기에 넣어줌..\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { createStore } from 'redux';\r\nimport { Provider  } from 'react-redux';\r\nimport rootReducer from './reducers';\r\n\r\nconst appElement = document.getElementById('root');\r\n\r\n// 리덕스 개발자도구 적용\r\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\nconst store = createStore(rootReducer, devTools);\r\n// const store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store} >\r\n    <App/>\r\n  </Provider>,\r\n  appElement\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}